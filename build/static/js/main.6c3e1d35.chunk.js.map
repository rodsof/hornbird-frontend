{"version":3,"sources":["context/dashboard/dashboardContext.js","context/autenticacion/authContext.js","components/layout/Bar.js","context/alarms/alarmContext.js","components/layout/LandingPage.js","context/alertas/alertaContext.js","components/auth/Register.js","components/auth/SignIn.js","components/auth/AddMember.js","components/auth/Member.js","components/auth/MembersList.js","context/items/itemContext.js","context/charts/chartContext.js","components/items/Item.js","components/charts/LineChart.js","components/charts/BarChart.js","components/charts/Card.js","components/charts/ChartTable.js","components/charts/ChartsList.js","components/items/ItemsList.js","components/layout/Dashboard.js","components/layout/Administration.js","config/axios.js","components/alarms/Contact.js","components/alarms/AlarmsTable.js","components/alarms/AlarmsList.js","components/layout/StatsCard.js","components/layout/EnergyDashboard.js","components/layout/OptimizationTable.js","components/layout/EnergyOptimization.js","components/layout/FaultTable.js","components/layout/FaultPrediction.js","components/layout/DashboardSummary.js","context/alertas/alertaReducer.js","types/index.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","context/alarms/alarmReducer.js","context/alarms/alarmState.js","context/items/itemReducer.js","context/items/itemState.js","context/charts/chartReducer.js","context/charts/chartState.js","context/dashboard/dashboardReducer.js","context/dashboard/dashboardState.js","components/rutas/RutaPrivada.js","App.js","serviceWorker.js","index.js"],"names":["dashboardContext","createContext","authContext","Bar","props","useContext","DashboardContext","dashboard","showDashboard","hideDashboard","cerrarSesion","AuthContext","tipo","autenticado","localStorage","getItem","className","onClick","icon","faBars","size","color","to","src","alt","faSignOutAlt","alarmContext","LandingPage","alarms","getAlarms","history","push","url","id","display","position","allow","alertaContext","Register","AlertaContext","alerta","mostrarAlerta","mensaje","registrarUsuario","cargando","useEffect","msg","categoria","useState","name","email","password","confirm","usuario","guardarUsuario","onChange","e","target","value","onSubmit","preventDefault","trim","length","htmlFor","type","placeholder","disabled","SignIn","iniciarSesion","form","currentTarget","formData","FormData","get","AddMember","agregarUsuario","getUsers","Member","currentId","deleteMember","_id","MembersList","usuarios","TransitionGroup","map","CSSTransition","key","timeout","itemContext","chartContext","Item","item","ai","currentItem","getCharts","selectItem","href","LineChart","chartRef","React","createRef","this","myChart","data","labels","d","label","datasets","update","Chart","current","options","scales","xAxes","yAxes","ticks","min","scaleLabel","labelString","unit","title","fill","backgroundColor","pointRadius","borderColor","borderWidth","lineTension","ref","Component","BarChart","canvasRef","maintainAspectRatio","max","Card","plain","hCenter","category","ctAllIcons","ctTableFullWidth","ctTableResponsive","ctTableUpgrade","content","legend","stats","statsIcon","ChartTable","charts","Container","fluid","Row","Col","md","Table","striped","hover","chart","uuidv4","convert","str","date","Date","mnth","getMonth","slice","day","getDate","getFullYear","join","getArray","dataset","i","repeated","j","chwtin","chwtout","sat","spacet","oat","saductstpressure","oatrh","spacerh","randomFeeds","feeds","ChartsList","chartsContext","getDataset","click","handleClick","selectedIndex","handleClickCard","saveCategory","setTimeout","style","paddingTop","Dropdown","Toggle","variant","Menu","feed","index","ItemsList","itemsContext","items","getItems","classNames","Dashboard","Administration","usuarioAutenticado","admin","clienteAxios","axios","create","baseURL","process","Contact","handleSubmit","event","a","setState","isSending","message","alarm","post","then","response","reset","isSent","errors","time","state","catch","error","console","log","finally","Alert","Form","Group","as","showContactForm","AlarmsTable","hours","getHours","minutes","getMinutes","secs","getSeconds","ampm","start","status","closeDate","assignTo","assignDate","calculateAlarms","maxDate","today","safanfrequency","chwvalveposition","safr","space","oadamperopen","AlarmsList","newAlarms","createAlarm","datos","StatsCard","bg","xs","statsText1","statsValue1","statsText2","statsValue2","isNaN","amount","isFinite","statsIconText","EnergyDashboard","lastDate","ahucop","energy","totalEnergy","thisYearEnergy","lastYearEnergy","monthlyEnergyAcum","lastMonthEnergy","weeklyEnergyAcum","lastWeekEnergy","currentDate","energymonthly","now","moment","input","lastWeek","subtract","lastYear","isThisWeek","isoWeek","isLastWeek","isThisYear","isoWeekYear","isLastYear","monthlyEnergy","weeklyEnergy","yearlyAmount","monthlyAmount","weeklyAmount","getEnergyMonthly","getAhuCop","getTotalEnergy","bigIcon","minDate","Example","padding","bordered","marginTop","condition","params","totalEnergy_1","totalEnergy_2","totalEnergy_3","totalEnergy_4","x","y","EnergyOptimization","getEnergyOptimization","energyTableData","getGraphApi","graphApiData","X1","y1","X2","y2","X3","y3","X4","y4","height","width","marginBottom","OptimizationTable","modal","setModal","setName","lower","setLower","upper","setUpper","arr","faultTableData","k","JSON","parse","Modal","show","aria-labelledby","centered","Header","Title","Body","controlId","Label","Control","Footer","Button","setParameters","alert","onSelect","getSelectedItems","inx","float","cursor","FaultPrediction","getSelectedTable","setParams","getMachineCondition","machineConditionData","alignSelf","marginLeft","FaultTable","select","DashboardSummary","alarmsContext","action","payload","AlertaState","useReducer","alertaReducer","dispatch","Provider","children","setItem","token","removeItem","filter","tokenAuth","defaults","headers","common","AuthState","initialState","AuthReducer","respuesta","users","delete","AlarmState","AlarmReducer","ItemState","itemReducer","result","anamoly_value","lower_value","upper_value","itemId","chartsitem","chartselected","ChartState","ChartReducer","val","toJSON","split","threshold","DashboardState","dashboardReducer","RutaPrivada","component","render","App","exact","path","from","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c3e1d35.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst dashboardContext = createContext();\n\nexport default dashboardContext;","import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;","import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignInAlt, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DashboardContext from \"../../context/dashboard/dashboardContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst Bar = (props) => {\r\n  const dashboardContext = useContext(DashboardContext);\r\n  const { dashboard, showDashboard, hideDashboard } = dashboardContext;\r\n  const authContext = useContext(AuthContext);\r\n  const { cerrarSesion } = authContext;\r\n  let tipo = props.tipo;\r\n  let autenticado = false;\r\n  if(localStorage.getItem(\"token\")){\r\n    autenticado= true;\r\n  }\r\n  const onClickDashboard = () => {\r\n    if (!dashboard) {\r\n      showDashboard();\r\n    } else {\r\n      hideDashboard();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-header\">\r\n      {autenticado ? (\r\n        <div className=\"col-1 nopadding\">\r\n          <button className=\"btn btn-faBars\" onClick={onClickDashboard}>\r\n            <FontAwesomeIcon icon={faBars} size=\"3x\" color=\"white\" />\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      {autenticado ? (\r\n        <div className=\"col-4 nopadding\">\r\n          <Link to={\"/dashboard\"}>\r\n            <img src=\"HBTLogo.png\" alt=\"logo\" className=\"logo\" />\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div className=\"col-4 nopadding\">\r\n          <img src=\"HBTLogo.png\" alt=\"logo\" className=\"logo\" />\r\n        </div>\r\n      )}\r\n      {autenticado ? (\r\n          <div className=\"quatro\">\r\n            <p>System FDD, Prediction & Energy Optimization</p>\r\n          </div>\r\n      ) : (\r\n        <div className=\"col-5 nopadding\"></div>\r\n      )}\r\n\r\n      {autenticado ? null : (\r\n        <div className=\"col-1 nopadding\">\r\n          <button className=\"btn btn-link btn-block\">\r\n            <Link to={\"/sign-in\"} className=\"link\">\r\n              SIGN IN\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      )}\r\n      {autenticado ? null : (\r\n        <div className=\"col-1 nopadding\">\r\n          <button\r\n            className=\"btn btn-faBars\"\r\n          >\r\n            <FontAwesomeIcon icon={faSignOutAlt} size=\"3x\" color=\"white\" />\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {!autenticado ? null : tipo ? (\r\n        <div className=\"col-3 nopadding\">\r\n          <button className=\"btn btn-link btn-block\">\r\n            <Link to={\"/admin\"} className=\"link\">\r\n              Administration\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      {autenticado ? (\r\n        <div className=\"col-1 nopadding\">\r\n          <button\r\n            className=\"btn btn-link btn-block\"\r\n            onClick={() => cerrarSesion()}\r\n          >\r\n            <Link to={\"\"} className=\"link\">\r\n              SIGN OUT\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      {autenticado ? (\r\n        <div className=\"col-1 nopadding\">\r\n          <button\r\n            className=\"btn btn-faBars\"\r\n          >\r\n            <FontAwesomeIcon icon={faSignOutAlt} size=\"3x\" color=\"white\" />\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bar;\r\n","import { createContext } from 'react';\n\nconst alarmContext = createContext();\n\nexport default alarmContext;","import React,{ useContext, useEffect } from 'react';\nimport Iframe from 'react-iframe';\nimport Bar from './Bar';\nimport AuthContext from \"../../context/autenticacion/authContext\";\nimport alarmContext from \"../../context/alarms/alarmContext\";\nconst LandingPage = (props) => {\n    const authContext = useContext(AuthContext);\n    const { autenticado} = authContext; \n    const AlarmContext = useContext(alarmContext);\n    const { alarms, getAlarms } = useContext(alarmContext);\n \n  if(!alarms){\n      getAlarms();\n  }\n  if(localStorage.getItem(\"token\")){\n    props.history.push(\"/dashboard\");\n  }\n\n    return ( \n        <div className=\"row\">\n        <div className=\"col-12\">\n        <Bar/>\n        </div>\n        <div className=\"col-12\">\n        <div className=\"seccion-principal\">\n        <Iframe url=\"https://www.ventusky.com/\"\n        id=\"ventusky\"\n        className=\"ventusky\"\n        display=\"block\"\n        position=\"relative\"\n        allow=\"geolocation\"\n        />\n        </div>\n        </div>\n        </div>\n     );\n}\n\nexport default LandingPage;","import { createContext } from 'react';\n\nconst alertaContext = createContext();\n\nexport default alertaContext;","import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Bar from \"../layout/Bar\";\nimport AlertaContext from \"../../context/alertas/alertaContext\";\nimport AuthContext from \"../../context/autenticacion/authContext\";\n\nconst Register = props => { // props viene de react router dom\n// extraer los valores del context\nconst alertaContext = useContext(AlertaContext);\nconst { alerta, mostrarAlerta } = alertaContext;\n\nconst authContext = useContext(AuthContext);\nconst { mensaje, autenticado, registrarUsuario, cargando } = authContext;\n\n//En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\nuseEffect(() => {\n  if (autenticado) {\n    props.history.push(\"/dashboard\");\n  }\n\n  if (mensaje) {\n    mostrarAlerta(mensaje.msg, mensaje.categoria);\n  }\n  // eslint-disable-next-line\n}, [mensaje, autenticado, props.history]);\n\n// State para iniciar sesión\nconst [usuario, guardarUsuario] = useState({\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  confirm: \"\"\n});\n\n// extraer de usuario\nconst { name, email, password, confirm } = usuario;\n\nconst onChange = e => {\n  guardarUsuario({\n    ...usuario,\n    [e.target.name]: e.target.value\n  });\n};\n \n// Cuando el usuario quiere iniciar sesión\nconst onSubmit = e => {\n  e.preventDefault();\n  // Validar que no haya campos vacios\n  if (\n    name.trim() === \"\" ||\n    email.trim() === \"\" ||\n    password.trim() === \"\" ||\n    confirm.trim() === \"\"\n  ) {\n    mostrarAlerta(\"Please complete all fields\", \"alerta-error\");\n    return;\n  }\n\n  // Password minimo de 6 caracteres\n  if (password.length < 6) {\n    mostrarAlerta(\n      \"Password must be at least 6 characters long\",\n      \"alerta-error\"\n    );\n    return;\n  }\n\n  // Los 2 passwords son iguales\n  if (password !== confirm) {\n    mostrarAlerta(\"Los passwords no son iguales\", \"alerta-error\");\n    return;\n  }\n\n  // Pasarlo al action\n  registrarUsuario({\n    name,\n    email,\n    password\n  });\n};\n \nreturn (\n  <div className=\"row\">\n  <div className=\"col-12\">\n  <Bar/>\n  </div>\n  <div className=\"col-12\">\n    <div className=\"form-usuario\">\n    {alerta ? (\n        <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div>\n      ) : null}\n\n\n      <div className=\"contenedor-form sombra-dark\">\n        <h1> CREATE AN ACCOUNT </h1>\n\n        <form \n        onSubmit={onSubmit}>\n          <div className=\"campo-form\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Your Name\"\n              value={name}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className=\"campo-form\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Your Email\"\n              value={email}\n              onChange={onChange}\n/>\n          </div>\n\n          <div className=\"campo-form\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Your Password\"\n              value={password}\n              onChange={onChange}\n/>\n          </div>\n\n          <div className=\"campo-form\">\n            <label htmlFor=\"confirm\">Confirm Password</label>\n            <input\n              type=\"password\"\n              id=\"confirm\"\n              name=\"confirm\"\n              placeholder=\"Repeat Password\"\n              onChange={onChange}\n            />\n          </div>\n\n          <div className=\"campo-form\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-primario btn-block\"\n              onChange={onChange}\n              disabled={cargando}>\n            {cargando ? \"Registering...\" : \"Register\"}\n            </button>\n          </div>\n        </form>\n        <Link to={\"/\"} className=\"btn btn-primario btn-block\">\n          HOME\n        </Link>\n      </div>\n    </div>\n    </div>\n    </div>\n  );\n};\n\nexport default Register;","import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Bar from \"../layout/Bar\";\nimport AlertaContext from \"../../context/alertas/alertaContext\";\nimport AuthContext from \"../../context/autenticacion/authContext\";\n\nconst SignIn = (props) => {\n   // extraer los valores del context\n   const alertaContext = useContext(AlertaContext);\n   const { alerta, mostrarAlerta } = alertaContext;\n \n   const authContext = useContext(AuthContext);\n   const { mensaje, autenticado, iniciarSesion} = authContext; \n\n  \n    //En caso de que el password o usuario no existe\n   useEffect(() => {\n     if (autenticado) {\n      props.history.push(\"/dashboard\");\n    } \n     if (mensaje) {\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\n    } \n    // eslint-disable-next-line\n  }, [autenticado, mensaje, props.history]); \n  \n  //State para iniciar sesion\n  /* const [usuario, guardarUsuario] = useState({\n    email: \"\",\n    password: \"\"\n  }); */\n\n  //extraer de usuario\n  //const { email, password } = usuario;\n  /* const onChange = e => {\n    guardarUsuario({\n      ...usuario,\n      [e.target.name]: e.target.value // la copia de usuario es para q lo q este en el otro campo no se reescriba\n    });\n  }; */\n\n  // cuando el usuario quiere iniciar sesion\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n  const formData = new FormData(form);\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n    // validar que no haya campos vacios\n    if (email.trim() === '' || password.trim() === ''){\n      mostrarAlerta('Please complete all fields','alerta-error');\n    }\n\n    //  pasarlo al action\n    iniciarSesion({ email, password });\n  };\n  return (\n    <div className=\"row\">\n  <div className=\"col-12\">\n  <Bar/>\n  </div>\n  <div className=\"col-12\">\n    <div className=\"form-usuario\">\n    {alerta ? (\n        <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div>\n      ) : null}\n      <div className=\"contenedor-form sombra-dark\">\n        <h1> SIGN IN </h1>\n        <form onSubmit={onSubmit}>\n          <div className=\"campo-form\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Your Email\"\n            /*   value={email}\n              onChange={onChange} */\n            />\n          </div>\n          <div className=\"campo-form\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Your Password\"\n              /* value={password}\n              onChange={onChange} */\n            />\n          </div>\n          <div className=\"campo-form\">\n            <input\n              type=\"submit\"\n              className=\"btn btn-primario btn-block\"\n              value=\"Sign In\"\n            />\n          </div>\n        </form>\n        <button className=\"btn btn-primario btn-block\">\n        <Link to={\"/register\"} className=\"linkSignIn\" >\n          Create Account\n        </Link>\n        </button>\n        <button className=\"btn btn-primario btn-block\">\n        <Link to={\"/\"} className=\"linkSignIn\">\n          Home\n        </Link>\n        </button>\n      </div>\n    </div>\n    </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AlertaContext from \"../../context/alertas/alertaContext\";\nimport AuthContext from \"../../context/autenticacion/authContext\";\n\nconst AddMember = () => { // props viene de react router dom\n// extraer los valores del context\nconst alertaContext = useContext(AlertaContext);\nconst { alerta, mostrarAlerta } = alertaContext;\n\nconst authContext = useContext(AuthContext);\nconst { mensaje, agregarUsuario, cargando, getUsers } = authContext;\n\n//En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\nuseEffect(() => {\n  if (mensaje) {\n    mostrarAlerta(mensaje.msg, mensaje.categoria);\n  }\n  // eslint-disable-next-line\n}, [mensaje]);\n\n // State para iniciar sesión\n/* const [usuario, guardarUsuario] = useState({\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  confirm: \"\"\n}); \n\n// extraer de usuario\nconst { name, email, password, confirm } = usuario;\nconst onChange = e => {\n  guardarUsuario({\n    ...usuario,\n    [e.target.name]: e.target.value\n  });\n};  */\n \n// Cuando el usuario quiere iniciar sesión\nconst onSubmit = e => {\n  e.preventDefault();\n  const form = e.currentTarget;\n  const formData = new FormData(form);\n  const name = formData.get(\"name\");\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const confirm = formData.get(\"confirm\");\n  // Validar que no haya campos vacios\n  if (\n    name.trim() === \"\" ||\n    email.trim() === \"\" ||\n    password.trim() === \"\" ||\n    confirm.trim() === \"\"\n  ) {\n    mostrarAlerta(\"Please complete all fields\", \"alerta-error\");\n    return;\n  }\n\n  // Password minimo de 6 caracteres\n  if (password.length < 6) {\n    mostrarAlerta(\n      \"Password must be at least 6 characters long\",\n      \"alerta-error\"\n    );\n    return;\n  }\n\n  // Los 2 passwords son iguales\n  if (password !== confirm) {\n    mostrarAlerta(\"Los passwords no son iguales\", \"alerta-error\");\n    return;\n  }\n\n  // Pasarlo al action\n  agregarUsuario({\n    name,\n    email,\n    password\n  });\n  getUsers();\n};\n \nreturn (\n  <div className=\"col\">\n    {alerta ? (\n        <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div>\n      ) : null}\n  <h1> ADD MEMBER </h1>\n\n        <form \n        onSubmit={onSubmit}>\n          <div className=\"campo-form\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Name\"\n              //value={name}\n              //onChange={onChange}\n            />\n          </div>\n\n          <div className=\"campo-form\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              //value={email}\n              //onChange={onChange}\n/>\n          </div>\n\n          <div className=\"campo-form\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\" Password\"\n              //value={password}\n             // onChange={onChange}\n/>\n          </div>\n\n          <div className=\"campo-form\">\n            <label htmlFor=\"confirm\">Confirm Password</label>\n            <input\n              type=\"password\"\n              id=\"confirm\"\n              name=\"confirm\"\n              placeholder=\"Repeat Password\"\n              //onChange={onChange}\n            />\n          </div>\n\n          <div className=\"campo-form\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-primario btn-block\"\n              disabled={cargando}>\n            {cargando ? \"Registering...\" : \"Add member\"}\n            </button>\n          </div>\n        </form>\n      </div>\n  );\n};\n\nexport default AddMember;","import React,{ useContext } from 'react';\nimport authContext from \"../../context/autenticacion/authContext\";\n\nconst Member = ( {usuario,currentId} ) => {\n\n    const AuthContext = useContext(authContext);\n    const { getUsers, deleteMember } = AuthContext;\n\nconst memberDelete = id => {\n        deleteMember(id);\n        getUsers();\n  }\n\nif (usuario._id === currentId ){\n  return null;\n}\nelse {\nreturn (\n    <li className=\"tarea sombra\">\n    <p> {usuario.name} </p>\n    <div className=\"acciones\">\n        <button \n        type=\"button\"\n         className=\"btn btn-secundario\"\n         onClick= {()=> memberDelete(usuario._id)} >\n          Delete\n        </button>\n      </div>\n    </li>\n);\n}\n}\nexport default Member;","import React, { Fragment, useContext, useEffect} from \"react\";\nimport authContext from \"../../context/autenticacion/authContext\";\nimport Member from \"./Member\";\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\n\nconst MembersList = ({id}) => {\n   // obtener las tareas del proyecto\n   const AuthContext = useContext(authContext);\n   const { usuarios, getUsers } = AuthContext;\n\n    useEffect(() => {\n    getUsers();\n    // eslint-disable-next-line\n}, []); \n \n  return (\n    <Fragment>\n      <h2 className=\"itemName\"> Members </h2>\n      <ul className=\"listado-tareas\">\n        <TransitionGroup> \n          {usuarios.map(usuario => \n          <CSSTransition\n          key={usuario._id} // el key se mueve hasta aca pq es el primer hijo de la iteracion\n          timeout={200}\n         >\n            <Member\n            usuario={usuario} \n            currentId = {id}\n            /> \n          </CSSTransition>\n            )}\n        </TransitionGroup>\n      </ul>\n      \n    </Fragment>\n  );\n};\n\nexport default MembersList;\n","import { createContext } from 'react';\n\nconst itemContext = createContext();\n\nexport default itemContext;","import {createContext} from 'react';\nconst chartContext = createContext();\n\nexport default chartContext;","import React,{ useContext } from 'react';\r\nimport itemContext from '../../context/items/itemContext';\r\nimport chartContext from '../../context/charts/chartContext';\r\nconst Item = ({item,ai}) => {\r\n\r\n     // Obtener el state del formulario\r\n  const itemsContext = useContext(itemContext);\r\n  const { currentItem } = itemsContext;\r\n\r\n  // obtener la funcion del context de tarea\r\n  const chartsContext = useContext(chartContext);\r\n    const { getCharts } = chartsContext;\r\n    \r\n  // funcion para cargar item actual\r\n  const selectItem = id => {\r\n        currentItem(id); // fijar un item actual\r\n        getCharts(id); // filtrar las tareas segun item\r\n  }\r\n    return ( \r\n      <li className=\"sub-menu\">\r\n        { item.href === \"#\" && !ai ? \r\n      <a \r\n            href=\"#\"\r\n            className=\"btn btn-primario btn-block\" \r\n            onClick = {()=> selectItem(item._id)}>\r\n                {item.name}\r\n            </a> \r\n         : null }\r\n\r\n{ item.href !== \"#\" && ai ?\r\n      <a \r\n     className=\"btn btn-primario btn-block\" \r\n     onClick = {()=> selectItem(item._id)}>\r\n      {item.name}\r\n</a>\r\n: null\r\n}\r\n    </li>\r\n      \r\n     );\r\n}\r\n \r\nexport default Item;","import React from 'react';\nimport Chart from 'chart.js';\n\nclass LineChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.chartRef = React.createRef();\n    }\n  \n    componentDidUpdate() {\n      this.myChart.data.labels = this.props.data.map(d => d.label);\n      this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n      this.myChart.update();\n    }\n  \n    componentDidMount() {\n      this.myChart = new Chart(this.chartRef.current, {\n        type: 'line',\n        options: {\n          scales: {\n            xAxes: [\n          \n            ],\n            yAxes: [\n              {\n                ticks: {\n                  min: 0\n                },\n                scaleLabel: {\n                  display: true,\n                  labelString: this.props.unit\n                }\n              }\n            ]\n          }\n        },\n        data: {\n          labels: this.props.data.map(d => d.label),\n          datasets: [{\n            label: this.props.title,\n            data: this.props.data.map(d => d.value),\n            fill: 'none',\n            backgroundColor: this.props.color,\n            pointRadius: 2,\n            borderColor: this.props.color,\n            borderWidth: 1,\n            lineTension: 0\n          }]\n        }\n      });\n    }\n  \n    render() {\n      return <canvas ref={this.chartRef} />;\n    }\n  }\n\n  export default LineChart;","import React from 'react';\nimport Chart from 'chart.js';\n\n// BarChart\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.label);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'bar',\n      options: {\n\t      maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            ticks: {\n                max: this.props.max,\n                min: this.props.min\n            }\n        }],\n          yAxes: [\n            {\n              ticks: {\n                min: 0\n              },\n              scaleLabel: {\n                display: true,\n                labelString: this.props.unit\n              }\n            },\n          ]\n        }\n      },\n      data: {\n        labels: this.props.data.map(d => d.label),\n        datasets: [{\n          label: this.props.title,\n          data: this.props.data.map(d => d.value),\n          backgroundColor: this.props.color\n        }]\n      }\n    });\n  }\n\n  render() {\n    return (\n        <canvas ref={this.canvasRef} />\n    );\n  }\n}\nexport default BarChart;","\nimport React, { Component } from \"react\";\n\nexport class Card extends Component {\n  render() {\n    return (\n      <div className={\"card\" + (this.props.plain ? \" card-plain\" : \"\")}>\n        <div className={\"header\" + (this.props.hCenter ? \" text-center\" : \"\")}>\n          <h4 className=\"title\">{this.props.title}</h4>\n          <p className=\"category\">{this.props.category}</p>\n        </div>\n        <div\n          className={\n            \"content\" +\n            (this.props.ctAllIcons ? \" all-icons\" : \"\") +\n            (this.props.ctTableFullWidth ? \" table-full-width\" : \"\") +\n            (this.props.ctTableResponsive ? \" table-responsive\" : \"\") +\n            (this.props.ctTableUpgrade ? \" table-upgrade\" : \"\")\n          }\n        >\n          {this.props.content}\n\n          <div className=\"footer\">\n            {this.props.legend}\n            {this.props.stats != null ? <hr /> : \"\"}\n            <div className=\"stats\">\n              <i className={this.props.statsIcon} /> {this.props.stats}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\nimport Card from \"./Card\";\nimport uuidv4 from 'uuid/v4';\n\nconst ChartTable = (charts) => {\nreturn (\n<div className=\"content\">\n        <Container fluid>\n          <Row>\n            <Col md={12}>\n              <Card\n                title=\"Data\"\n                category=\"\"\n                ctTableFullWidth\n                ctTableResponsive\n                content={\n                  <Table striped hover>\n                    <thead>\n                      <tr>\n                     <th>Date</th>\n                     <th>Value</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {charts.charts.map((chart) => {\n                        return (\n                          <tr\n                          key={uuidv4()}\n                          >\n                            <td> {chart.label} </td>\n                            <td> {chart.value} </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                }\n              />\n            </Col>\n            </Row>\n            </Container>\n            </div>\n);\n}\nexport default ChartTable;","import React, {  useContext,  useState } from \"react\";\nimport chartContext from \"../../context/charts/chartContext\";\nimport {Dropdown, Row, Col, Container } from \"react-bootstrap\";\nimport LineChart from \"./LineChart\";\nimport BarChart from \"./BarChart\";\nimport Card from \"./Card\";\nimport uuidv4 from 'uuid/v4';\nimport ChartTable from \"./ChartTable\";\nimport axios from 'axios';\nfunction convert(str) {\n  var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n  return [date.getFullYear(), mnth, day].join(\"-\");\n}\n// Data generation\nfunction getArray(dataset, title) {\n\n  let data = [];\n  let delivering = false;\n  if (!delivering) {\n    for (var i = 0; i < dataset.length; i++) {\n        // unify same dates\n      let repeated = false;\n      if (data){\n        for(var j = 0 ; j<data.length ; j++){\n          if(data[j].label === convert(dataset[i].date)){\n            if (title === \"CHW TIN\"){\n              data[j].value = data[j].value;\n              repeated = true;\n            }\n            if (title === \"CHW TOUT\") {\n              data[j].value = data[j].value;\n              repeated = true;\n            }\n            if (title === \"SA T\") {\n              data[j].value = data[j].value;\n              repeated = true;\n            }\n            if (title === \"SPACE T\") {\n              data[j].value = data[j].value;\n              repeated = true;  \n            }   if (title === \"OA T\") {\n              data[j].value = data[j].value;\n              repeated = true;\n            }\n            if (title === \"SA DUCT ST PRESSURE\") {\n              data[j].value = data[j].value;\n              repeated = true;\n            }\n            if (title === \"OAT RH\") {\n              data[j].value = data[j].value;\n              repeated = true;\n            }\n            if (title === \"Space RH\") {\n              data[j].value = data[j].value;\n              repeated = true; \n            }\n          }\n      }\n    }\n    if(!repeated){\n      if (title === \"CHW TIN\") {\n        data.push({\n          label: convert(dataset[i].date),\n          value: dataset[i].chwtin\n        });\n      }\n      if (title === \"CHW TOUT\") {\n        data.push({\n          label: convert(dataset[i].date),\n          value: dataset[i].chwtout\n        });  \n      }\n      if (title === \"SA T\") {\n        data.push({\n          label: convert(dataset[i].date),\n          value: dataset[i].sat\n        });  \n      }\n      if (title === \"SPACE T\") {\n        data.push({\n          label: convert(dataset[i].date),\n          value: dataset[i].spacet\n        });  \n      }   if (title === \"OA T\") {\n        data.push({\n          label: convert(dataset[i].date),\n          value: dataset[i].oat\n        });  \n      }\n      if (title === \"SA DUCT ST PRESSURE\") {\n        data.push({\n          label: convert(dataset[i].date),\n          value: dataset[i].saductstpressure\n        });  \n      }\n      if (title === \"OAT RH\") {\n        data.push({\n          label: convert(dataset[i].date),\n          value: dataset[i].oatrh\n        });  \n      }\n      if (title === \"Space RH\") {\n        data.push({\n          label: convert(dataset[i].date),\n          value: dataset[i].spacerh\n        });  \n      }\n    }\n    }\n  } else {\n    // generate random data\n    let dates = getRandomDateArray(5);\n    for (var i = 0; i < dates.length; i++) {\n      data.push({\n        chwtin: Math.round(10 + 80 * Math.random()),\n        chwtout:  Math.round(10 + 80 * Math.random()),\n        chwvalveposition:  Math.round(20 + 80 * Math.random()),\n        chwfr:  Math.round(20 + 80 * Math.random()),\n        safanfrequency:  Math.round(20 + 80 * Math.random()),\n        rafanfrequency:  Math.round(20 + 80 * Math.random()),\n        sat:  Math.round(20 + 80 * Math.random()),safr:  Math.round(20 + 80 * Math.random()),\n        saductstpressure:  Math.round(20 + 80 * Math.random()),\n        safanfrequency:  Math.round(20 + 80 * Math.random()),\n        spacet:  Math.round(20 + 80 * Math.random()),\n        ahucop:Math.round(20 + 80 * Math.random()),\n      totalpower: Math.round(20 + 80 * Math.random()),\n      energymonthly:  Math.round(200000 + 80 * Math.random()),\n        oat:  Math.round(20 + 80 * Math.random()),\n        spacerh:  Math.round(20 + 80 * Math.random()),\n        oatrh:  Math.round(20 + 80 * Math.random()),\n        vav1fr:  Math.round(20 + 80 * Math.random()),\n        vav2fr:  Math.round(20 + 80 * Math.random()),\n        vav3fr:  Math.round(20 + 80 * Math.random()),\n        vav4fr:  Math.round(20 + 80 * Math.random()),\n        oafr:  Math.round(20 + 80 * Math.random()),\n        oadamperopen:  Math.round(20 + 80 * Math.random()),\n        space:  Math.round(20 + 80 * Math.random())\n      });\n    }\n     axios.post('http://localhost:4000/api/dataset', data);\n  }\n  return data;\n}\n\nfunction getTemperature(dataset){\n  let data = [];\n   data.push({\n   label: \"SA T\" ,\n   value:  dataset[dataset.length -1].sat\n })\n data.push({\n  label: \"Space T\" ,\n  value:  dataset[dataset.length -1].spacet\n})\ndata.push({\n  label: \"CHW TIN\" ,\n  value:  dataset[dataset.length -1].chwtin\n})\ndata.push({\n  label: \"CHW TOUT\" ,\n  value:  dataset[dataset.length -1].chwtout\n})\ndata.push({\n  label: \"OA T\" ,\n  value:  dataset[dataset.length -1].oat\n})\n return data;\n}\nfunction getPressures(dataset){\n  let data = [];\n  data.push({\n  label: \"SA DUCT ST PRESSURE\" ,\n  value:  dataset[dataset.length -1].saductstpressure\n})\nreturn data;\n}\n\nfunction getHumidity(dataset){\n  let data = [];\ndata.push({\n label: \"SPACE RH\" ,\n value:  dataset[dataset.length -1].spacerh\n})\ndata.push({\n label: \"OAT RH\" ,\n value:  dataset[dataset.length -1].oatrh\n})\nreturn data;\n}\n\n\n\n\nfunction getRandomDateArray(numItems) {\n  // Create random array of objects (with date)\n  let data = [];\n  let baseTime = new Date(\"2020-03-01T00:00:00\").getTime();\n  let dayMs = 24 * 60 * 60 * 1000;\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      time: new Date(baseTime + i * dayMs),\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n  return data;\n}\n\nfunction randomFeeds(dataset, category) {\n  let feeds = [];\n  if (category === \"TEMPERATURE\") {\n    feeds.push({\n      title: \"CHW TOUT\",\n      unit: \"ºC\",\n      data: getArray(dataset, \"CHW TOUT\"),\n      color: \"#9368E9\"\n    });\n\n    feeds.push({\n      title: \"CHW TIN\",\n      unit: \"ºC\",\n      data: getArray(dataset, \"CHW TIN\"),\n      color: \"#FFA534\"\n    });\n    feeds.push({\n      title: \"OA T\",\n      data: getArray(dataset, \"OA T\"),\n      color: \"#87CB16\",\n      unit: \"ºC\"\n    });\n    feeds.push({\n      title: \"SPACE T\",\n      unit: \"ºC\",\n      data: getArray(dataset, \"SPACE T\"),\n      color: \"cd0000\"\n    });\n    feeds.push({\n      title: \"SA T\",\n      unit: \"ºC\",\n      data: getArray(dataset, \"SA T\"),\n      color: \"#1DC7EA\"\n    });\n  }\n  if (category === \"PRESSURE\") {\n    feeds.push({\n      title: \"SA DUCT ST PRESSURE\",\n      unit: \"Pa\",\n      data: getArray(dataset, \"SA DUCT ST PRESSURE\"),\n      color: \"#cd0000\"\n    });\n  }\n  if (category === \"HUMIDITY\") {\n    feeds.push({\n      title: \"Space RH\",\n      unit: \"RH\",\n      data: getArray(dataset, \"Space RH\"),\n      color: \"#cd0000\"\n    });\n    feeds.push({\n      title: \"OAT RH\",\n      unit: \"RH\",\n      data: getArray(dataset, \"OAT RH\"),\n      color: \"#cd0000\"\n    });\n  }\n \n  return feeds;\n}\n\n\nconst ChartsList = () => {\n  \n\n  const chartsContext = useContext(chartContext);\n  const { getDataset, dataset } = chartsContext;\n\n  const [click, handleClick] = useState(null);\n  const [selectedIndex, handleClickCard] = useState(null);\n  const [category, saveCategory] = useState(null);\nlet feeds =  randomFeeds(dataset, category);\n\n\n  if (!dataset){\n    getDataset();\n}\n\n\nconst handleClickTemperature = e => {\n  e.preventDefault();\n  saveCategory(\"TEMPERATURE\");\n  handleClick(true);\n} \n\nconst handleClickChart = i => {\n  handleClickCard(i);\n}\nconst backToBar = e => {\n  e.preventDefault();\n  handleClickCard(null);\n}\nconst handleClickPressure = e => {\n  e.preventDefault();\n  saveCategory(\"PRESSURE\");\n  handleClick(true);\n}\n\nconst handleClickHumidity = e => {\n  e.preventDefault();\n  saveCategory(\"HUMIDITY\");\n  handleClick(true);\n}\n\n\n  setTimeout(() => {\n    feeds = (randomFeeds(dataset, category));\n  }, 360000);\n\n\n\nif (selectedIndex!== null) {\n  return (\n    <Col>\n                <button \n                className=\"btn btn-secundario\"\n                onClick={backToBar}> Back </button>\n                <Card\n                statsIcon=\"fa fa-clock-o\"\n                title=\"feed\"\n                stats=\"30 minutes ago\"\n                content={\n                  <div\n                    id=\"chartPreferences\"\n                    className=\"ct\"\n                  >\n                    <LineChart data={feeds[selectedIndex].data} title={feeds[selectedIndex].title} color={feeds[selectedIndex].color}\n                    unit={feeds[selectedIndex].unit} />\n                  </div>\n                }\n              /> \n             <ChartTable charts = {feeds[selectedIndex].data} />\n              </Col>\n  );\n  }\nelse {\n  return (\n    <main style={{ paddingTop: 20 }} >\n    <Container>\n    <div className=\"row nopadding\">\n      <Dropdown>\n    {category === \"TEMPERATURE\" ? <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">Temperature  </Dropdown.Toggle>\n    : category === \"PRESSURE\" ? <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">Pressure  </Dropdown.Toggle>\n      : category === \"HUMIDITY\" ? <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\"> Humidity </Dropdown.Toggle> : \n      <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">Select Group</Dropdown.Toggle>}\n \n  <Dropdown.Menu>\n    <Dropdown.Item onClick={handleClickTemperature}>Temperature</Dropdown.Item>\n    <Dropdown.Item onClick={handleClickPressure}>Pressure</Dropdown.Item>\n    <Dropdown.Item onClick={handleClickHumidity}>Humidity</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>\n     \n              { click ? \n                   <Row>\n                    {feeds.map((feed,index) => (\n                    <Col\n                    key={uuidv4()}\n                    onClick={()=> handleClickChart(index)} >\n                     <Card\n                     statsIcon=\"fa fa-clock-o\"\n                     title={feed.title}\n                     stats=\"30 minutes ago\"\n                     key={uuidv4()}\n                     content={\n                       <div\n                         id=\"chartPreferences\"\n                         className=\"ct-chart ct-perfect-fourth\"\n                       >\n                         <BarChart \n                         data = {feed.data} \n                         title = {feed.title}\n                        color = {feed.color}\n                        unit = {feed.unit}\n                        />\n                       </div>\n                     }\n                   />\n                   </Col>\n                         ))}\n                         </Row>\n                      : null}\n              </div>     \n              </Container>\n              </main>\n  );\n\n}\n}\nexport default ChartsList;","import React, { useContext, useEffect } from 'react';\r\nimport itemContext from '../../context/items/itemContext';\r\nimport Item from './Item';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { Link } from \"react-router-dom\";\r\nimport ChartList from \"../charts/ChartsList\"\r\n\r\nconst ItemsList = ({ai}) => {\r\n\r\n  // extraer proyectos de state inicial\r\n  const itemsContext = useContext(itemContext);\r\n  const { items, getItems, currentItem } = itemsContext;\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n  return (\r\n\r\n    <ul className=\"links\">\r\n           <TransitionGroup>\r\n           {items.map(item => (\r\n               <CSSTransition\r\n               key={item._id}\r\n               timeout={200}\r\n               classNames=\"proyecto\"\r\n               >\r\n                    <Item\r\n                    item={item}\r\n                    ai = {ai}\r\n                />\r\n               </CSSTransition>\r\n            ))}\r\n           </TransitionGroup>\r\n           <li>\r\n        </li> \r\n        \r\n\r\n        </ul>\r\n  );\r\n}\r\n\r\nexport default ItemsList;","import React, {  useContext } from \"react\";\r\nimport ItemsList from '../items/ItemsList';\r\nimport DashboardContext from \"../../context/dashboard/dashboardContext\";\r\n\r\nconst Dashboard = () => {\r\n  const dashboardContext = useContext(DashboardContext);\r\n  const { dashboard } = dashboardContext;\r\n\r\n  if (dashboard){\r\n  return (\r\n<aside>\r\n      <div id=\"sidebar\" className=\"nav-collapse \">\r\n        <ul className=\"sidebar-menu\">\r\n          <li className=\"active\">\r\n            <a className=\"btn btn-primario btn-block\" href=\"/\">\r\n                          <i className=\"icon_house_alt\"></i>\r\n                          <span>Dashboard</span>\r\n                      </a>\r\n          </li>\r\n         <ItemsList \r\n         ai = {false}\r\n         />\r\n         <li className=\"active\">\r\n            <a className=\"btn btn-primario btn-block\" href=\"/\">\r\n                          <i className=\"icon_house_alt\"></i>\r\n                          <span>Artificial Intelligence</span>\r\n                      </a>\r\n          </li>\r\n          <ItemsList\r\n          ai = {true}\r\n          />\r\n        </ul>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\nelse {\r\n  return null;\r\n}\r\n}\r\nexport default Dashboard;\r\n","import React,{useContext, useEffect} from \"react\";\r\nimport Bar from \"../layout/Bar\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport AddMember from \"../auth/AddMember\";\r\nimport MembersList from \"../auth/MembersList.js\";\r\nimport Dashboard from \"../layout/Dashboard\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport DashboardContext from \"../../context/dashboard/dashboardContext\";\r\n\r\nconst Administration = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuario, usuarioAutenticado } = authContext; \r\n  const dashboardContext = useContext(DashboardContext);\r\n  const { dashboard } = dashboardContext;\r\n\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n    // eslint-disable-next-line\r\n}, [])\r\nlet name = ' ';\r\nlet admin = false;\r\nlet id = ' ';\r\nif (usuario){\r\n  admin = usuario.admin;\r\n  name = usuario.name;\r\n  id = usuario._id;\r\n}\r\n  return (\r\n    <div className=\"row nopadding\">\r\n    <div className=\"col-md-12 nopadding\">\r\n    <Bar \r\n    />\r\n    </div>\r\n    {dashboard ? \r\n    <div className=\"col-md-3 nopadding\">\r\n      <Dashboard \r\n      /> \r\n      </div> \r\n      : null }\r\n    { admin ? \r\n        <div className=\"col-md-2 nopadding\">\r\n      <MembersList\r\n      id = {id}\r\n      /> \r\n      </div> :\r\n       null\r\n}\r\n      <div className=\"col-md-7\">\r\n        <main>\r\n        <li className=\"tarea sombra\">\r\n        <p>{ name } : { admin ? <span>Administrator</span> : null } </p>\r\n        { admin ? \r\n        <div className=\"acciones\">\r\n        <AddMember />\r\n        </div>\r\n        :\r\n        <p> User </p>\r\n        }\r\n         </li>\r\n        </main>\r\n      </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Administration;","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios; ","/* eslint-disable  */\r\nimport React, { Component } from \"react\";\r\nimport { Form, Row, Col, Button, Alert, Container } from \"react-bootstrap\";\r\nimport clienteAxios from '../../config/axios';\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isSending: false,\r\n      isSent: false,\r\n      errors: []\r\n    };\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    const formData = new FormData(form);\r\n    this.setState({ isSending: true });\r\n        \r\n       const message = this.props.alarm.message + '. ';\r\n        const id = this.props.alarm._id;\r\n        await clienteAxios.post('/api/alarms', {\r\n            message: `Hi! This alarm was assigned to you: ${message}`,\r\n            email: formData.get(\"email\"),\r\n            id: id\r\n          })\r\n          .then(response => {\r\n            if (response.data === \"Message sent\") {\r\n                form.reset();\r\n                this.setState({ isSent: true });\r\n      \r\n                setTimeout(() => {\r\n                  this.setState({ isSent: false });\r\n                  //this.props.history.push(\"/dashboard\"); // Redirect to home page after sending message\r\n                }, 14000);\r\n              } else {\r\n                this.setState({ errors: response.data });\r\n                const { errors } = this.state;\r\n                let time = errors.length * 3000;\r\n                setTimeout(() => {\r\n                  this.setState({ errors: [] });\r\n                }, time);\r\n              }\r\n            })\r\n            .catch(error => console.log(error))\r\n            .finally(() => this.setState({ isSending: false }));\r\n  };\r\n\r\n  showContactForm() {\r\n    const { isSending, isSent, errors } = this.state;\r\n\r\n    if (errors.length > 0) {\r\n      return errors.map((error, i) => {\r\n        return (\r\n          <Alert key={i} variant=\"danger\">\r\n            {error.msg}\r\n          </Alert>\r\n        );\r\n      });\r\n    }\r\n\r\n    if (isSent) {\r\n      return (\r\n        <Row className=\"h-100 justify-content-center align-items-center\">\r\n          <Col className=\"text-center\" md={12}>\r\n            <Alert variant=\"success\">MESSAGE SENT (Refresh page to see changes) </Alert>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    /*\r\n     <Form.Control\r\n            name=\"email\"\r\n            id=\"email\"\r\n            disabled={isSending}\r\n            type=\"email\"\r\n            placeholder=\"Enter an email\"\r\n            > \r\n            <Form.Group as={Col}>\r\n       \r\n    <Button  disabled={isSending}>\r\n          <a href={`mailto:?subject=ALARM ASSIGNED TO YOU me&body=This alarm was assigned to you: ${this.props.alarm.message}`}>\r\n      </a>\r\n            {isSending ? \"Sending...\" : \"Send Message\"}\r\n          </Button>\r\n        </Form.Group>\r\n            */\r\n    return (\r\n      <Form className=\"formContact\" onSubmit={this.handleSubmit}>\r\n        <Form.Group as={Col}>\r\n       \r\n  \r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"pl-3\">\r\n        \r\n          <a href={`mailto:?subject=ALARM ASSIGNED TO YOU me&body=This alarm was assigned to you: ${this.props.alarm.message}`}\r\n          className=\"btn btn-primary btn-alert\">\r\n          {isSending ? \"Sending...\" : \"Send Message\"}\r\n      </a>\r\n          \r\n        </Form.Group>\r\n\r\n      </Form>\r\n    );\r\n  }\r\n  render() {\r\n    return <Container className=\"h-100\">{this.showContactForm()}</Container>;\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\r\nimport Card from \"../charts/Card\";\r\nimport uuidv4 from 'uuid/v4';\r\nimport Contact from './Contact';\r\n\r\nconst AlarmsTable = (alarms) => {\r\n  \r\nfunction convert(str) {\r\n  var date = new Date(str),\r\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n    day = (\"0\" + date.getDate()).slice(-2);\r\n    var hours = date.getHours();\r\n  var minutes = date.getMinutes();\r\n  var secs = date.getSeconds();\r\n  var ampm = hours >= 12 ? 'pm' : 'am';\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12; // the hour '0' should be '12'\r\n  minutes = minutes < 10 ? '0'+minutes : minutes;\r\n  var strTime = [date.getFullYear(), mnth, day].join(\"-\") + ' ' +hours + ':' + minutes + ' ' + secs + ' ' + ampm;\r\n  return strTime;\r\n}\r\nreturn (\r\n<div className=\"content\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"Alarms\"\r\n                category=\"\"\r\n                ctTableFullWidth\r\n                ctTableResponsive\r\n                content={\r\n                  <Table striped hover>\r\n                    <thead>\r\n                      <tr>\r\n                     <th>Alarm Description</th>\r\n                     <th>Start</th>\r\n                     <th>Status</th>\r\n                     <th>Close Date</th>\r\n                     <th>Assign To</th>\r\n                     <th>Assign Date</th>\r\n\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {alarms.alarms.map((alarm) => {\r\n                        return (\r\n                          <tr\r\n                          key={uuidv4()}\r\n                          >\r\n                            <td> {alarm.message} </td>\r\n                            <td> {convert(alarm.start)} </td>\r\n                            <td> {alarm.status} </td>\r\n                            <td> {alarm.closeDate} </td>\r\n                            {alarm.assignTo ? \r\n                            <td> {alarm.assignTo} </td> :\r\n                            <td> \r\n                              <Contact \r\n                              alarm={alarm}\r\n                            />\r\n                            </td>\r\n                      }\r\n                         <td> { alarm.assignDate ?  convert(alarm.assignDate)  : null } </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </Table>\r\n                }\r\n              />\r\n            </Col>\r\n            </Row>\r\n            </Container>\r\n            </div>\r\n);\r\n}\r\nexport default AlarmsTable;","import React, { useContext } from \"react\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport alarmContext from \"../../context/alarms/alarmContext\";\r\nimport {   Col} from \"react-bootstrap\";\r\nimport AlarmsTable from \"./AlarmsTable\";\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\n\r\n\r\nfunction convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n      var hours = date.getHours();\r\n    var minutes = date.getMinutes();\r\n    var secs = date.getSeconds();\r\n    var ampm = hours >= 12 ? 'pm' : 'am';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? '0'+minutes : minutes;\r\n    var strTime = [date.getFullYear(), mnth, day].join(\"-\") + ' ' +hours + ':' + minutes + ' ' + secs + ' ' + ampm;\r\n    return strTime;\r\n  }\r\n  \r\nfunction calculateAlarms(dataset,a) {\r\n    // Create random array of objects\r\n    let alarms = [];\r\n    var today = new Date();\r\n    let maxDate;\r\n\r\n    if (a.length>0){\r\n        maxDate = a[a.length-1].start;\r\n        for (var j = 0 ; j < a.length ; j++){\r\n            if (!maxDate || a[j].start > maxDate){\r\n                maxDate = a[j].start;\r\n            }\r\n        }\r\n    }\r\n    else{\r\n        maxDate = today;\r\n    }\r\n    for (var i=0 ; i < dataset.length ; i++){\r\n        if (convert(dataset[i].date) > convert(maxDate)){\r\n            console.log(convert(dataset[i].date) +\"y \"+ convert(maxDate));\r\n        if ( dataset[i].saductstpressure <= 90 &&  dataset[i].safanfrequency < 60 ){\r\n             alarms.push({\r\n                message: \"SA Fan Unable to Reach Maximum Frequency\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n        if ( dataset[i].spacet >= 24 &&  dataset[i ].safanfrequency === 60 &&  dataset[i ].chwvalveposition < 100){\r\n            alarms.push({\r\n                message: \"CHW Valve Not Fully Open\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n        if ( dataset[i].spacet <= 22 &&  dataset[i ].safanfrequency === 40 &&  dataset[i ].chwvalveposition > 0){\r\n            alarms.push({\r\n                message: \"CHW Valve Not Fully Closed\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n        if ( dataset[i].saductstpressure >= 110 &&  dataset[i ].safanfrequency > 40 ){\r\n            alarms.push({\r\n                message: \"SA Fan Unable to Reach Minimum Frequency\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n        if ( dataset[i].saductstpressure <= 90 &&  dataset[i ].safr < 1000){\r\n            alarms.push({\r\n                message: \"SA Fan Flow Rate Unable to Reach Maximum\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n        if ( dataset[i].saductstpressure >= 110 &&  dataset[i ].safr > 600){\r\n            alarms.push({\r\n                message:  \"SA Fan Flow Rate Unable to Reach Minimum\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n\r\n        if ( dataset[i].space <= 400 &&  dataset[i ].oadamperopen > 0){\r\n            alarms.push({\r\n                message:   \"OA Damper Unable to Reach Minimum Position\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n        if ( dataset[i].space >= 2400 &&  dataset[i ].oadamperopen < 30){\r\n            alarms.push({\r\n                message:   \"OA Damper Unable to Reach Maximum Position\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n    }\r\n    }\r\n}\r\n      return alarms;\r\n    }\r\nconst AlarmsList = (props) => {\r\n \r\n    // const { createAlarm } = useContext(alarmContext);\r\n    const  alarms = props.alarms;\r\n    const dataset = props.dataset;\r\n\r\n    let newAlarms = calculateAlarms(dataset, alarms);\r\n\r\n    const createAlarm= async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/alarms/addAlarms',datos);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }        \r\n    }\r\n    if (newAlarms.length > 0){\r\n        for (var i = 0 ; i < newAlarms.length ; i++){\r\n            let alarm = {\r\n                     message: newAlarms[i].message,\r\n                    status: newAlarms[i].status,\r\n                    start: new Date(newAlarms[i].start),\r\n                    assignTo: null,\r\n                    assignDate: null\r\n            }\r\n            createAlarm(alarm);\r\n        }\r\n        newAlarms = [];\r\n}\r\n\r\n   \r\n    // run the function on page init \r\n    setTimeout(() => {\r\n        if (alarms.length > 0 ){    \r\n            calculateAlarms(dataset);\r\n        }    // execute it one time to not render every time the component\r\n    }, 3600000);\r\n  \r\n    \r\n    return (\r\n        <Col>\r\n            <AlarmsTable \r\n            alarms={alarms}\r\n            />\r\n        </Col>\r\n    );\r\n  };\r\n  \r\n  export default AlarmsList;\r\n  ","/*!\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n* Coded by Creative Tim\r\n=========================================================\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nexport class StatsCard extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`card card-stats bg-${this.props.bg}`}>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col xs={6}>\r\n              <div className=\"numbers\">\r\n                <p>{this.props.statsText1}</p>\r\n                <p> {this.props.statsValue1} {this.props.unit} </p>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <div className=\"numbers\">\r\n                <p>{this.props.statsText2}</p>\r\n                <p> {this.props.statsValue2} {this.props.unit} </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"footer\">\r\n            <hr />\r\n            { !isNaN(this.props.amount) && isFinite(this.props.amount) ?\r\n            <span>Change: {this.props.amount} %</span>\r\n            :\r\n            null }\r\n            <hr />\r\n            <div className=\"stats\">\r\n              {this.props.statsIcon} {this.props.statsIconText}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatsCard;","import React,{ useContext } from 'react';\r\nimport chartContext from \"../../context/charts/chartContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport { Row, Container} from \"react-bootstrap\";\r\nimport Card from \"../charts/Card\";\r\nimport LineChart from \"../charts/LineChart\";\r\nimport BarChart from \"../charts/BarChart\";\r\nimport StatsCard from './StatsCard';\r\nimport moment from 'moment';\r\n\r\nfunction convert(str) {\r\n  var date = new Date(str),\r\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n    day = (\"0\" + date.getDate()).slice(-2);\r\n  return [date.getFullYear(), mnth, day].join(\"-\");\r\n}\r\n\r\nfunction getEnergyMonthly(dataset){\r\n  let thisYearEnergy=0;\r\n  let lastYearEnergy = 0;\r\n   let monthlyEnergyAcum=0;\r\n   let lastMonthEnergy = 0;\r\n   let todayEnergy=0;\r\n   let weeklyEnergyAcum = 0;\r\n   let lastWeekEnergy = 0;\r\n   var today = new Date();\r\n   var currentDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n   for (var i = 0 ; i < dataset.length ; i++){\r\n    var date = new Date(dataset[i].date);\r\n\r\n   if (convert(dataset[i].date) === convert(currentDate)){\r\n    todayEnergy =  dataset[i].energymonthly;\r\n   }\r\n  //today.getmonth returns month-1\r\n  if (date.getMonth() === today.getMonth()){\r\n      monthlyEnergyAcum =  monthlyEnergyAcum + dataset[i].energymonthly;\r\n  }\r\n  if(date.getMonth() === today.getMonth() -1 ){\r\n    lastMonthEnergy = lastMonthEnergy + dataset[i].energymonthly;\r\n  }\r\nvar now = moment();\r\nvar input = moment(dataset[i].date);\r\nvar lastWeek = moment().subtract(7,'days');\r\nvar lastYear = moment().subtract(1,'years');\r\nvar isThisWeek = (now.isoWeek() === input.isoWeek());\r\nvar isLastWeek = input.isoWeek() == lastWeek.isoWeek();\r\nvar isThisYear = (now.isoWeekYear() === input.isoWeekYear());\r\nvar isLastYear = (now.isoWeekYear() === lastYear.isoWeekYear());\r\n\r\nif ( isThisWeek) {\r\n   weeklyEnergyAcum = weeklyEnergyAcum + dataset[i].energymonthly;\r\n}\r\nif (isLastWeek){\r\n  lastWeekEnergy = lastWeekEnergy + dataset[i].energymonthly;\r\n}\r\nif (isThisYear){\r\n  thisYearEnergy = thisYearEnergy + dataset[i].energymonthly;\r\n}\r\nif(isLastYear){\r\n  lastYearEnergy = lastYearEnergy + dataset[i].energymonthly;\r\n}\r\n}\r\nlet yearlyAmount = thisYearEnergy/lastYearEnergy;\r\nlet monthlyAmount = monthlyEnergyAcum/lastMonthEnergy;\r\nlet weeklyAmount = weeklyEnergyAcum/lastWeekEnergy;\r\nlet data = {\r\n  thisYearEnergy : thisYearEnergy,\r\n  lastYearEnergy : lastYearEnergy,\r\n  monthlyEnergy : monthlyEnergyAcum,\r\n  lastMonthEnergy : lastMonthEnergy,\r\n  weeklyEnergy : weeklyEnergyAcum,\r\n  lastWeekEnergy : lastWeekEnergy,\r\n  yearlyAmount : yearlyAmount,\r\n  monthlyAmount :  monthlyAmount,\r\n  weeklyAmount : weeklyAmount\r\n}\r\nreturn data;\r\n  }\r\n  \r\n  \r\n  function getTotalEnergy(dataset){\r\n    let data = [];\r\n    for (var i = 0 ; i < dataset.length ; i++){\r\n      let repeated = false;\r\n      if (data){\r\n        for(var j = 0 ; j<data.length ; j++){\r\n          if(data[j].label === convert(dataset[i].date)){\r\n              data[j].value = data[j].value + dataset[i].energymonthly;\r\n              repeated = true;\r\n          }\r\n      }\r\n    }\r\n    if(!repeated){\r\n     data.push({\r\n     label: convert(dataset[i].date) ,\r\n     value:  dataset[i].energymonthly\r\n   })\r\n  }\r\n  }\r\n   return data;\r\n  };   \r\n  \r\n  \r\n  function getAhuCop(dataset){\r\n    let data = [];\r\n    for (var i = 0 ; i < dataset.length ; i++)\r\n     data.push({\r\n     label: convert(dataset[i].date) ,\r\n     value:  dataset[i].ahucop\r\n   })\r\n   return data;\r\n  };  \r\n\r\nconst EnergyDashboard = () => {\r\n    const chartsContext = useContext(chartContext);\r\n    const { getDataset, dataset } = chartsContext;\r\n    let ahucop = { };\r\n    let energy = { };\r\n    let totalEnergy = [];\r\n    let lastDate;\r\n    let minDate;\r\n \r\n  const authContext = useContext(AuthContext);\r\n    if (!dataset){\r\n      getDataset();\r\n  }\r\n  else{\r\n    energy = getEnergyMonthly(dataset);\r\n    if (dataset.length >0 ){\r\n    lastDate = dataset[dataset.length -1].date;\r\n    }\r\n    ahucop = getAhuCop(dataset);\r\n    totalEnergy = getTotalEnergy(dataset);\r\n  }\r\n\r\n    // setTimeout(() => {\r\n    //     energy = getEnergyMonthly(dataset);\r\n    //     lastDate = dataset[dataset.length -1].date;\r\n    //     ahucop = getAhuCop(dataset);\r\n    //   }, 3600000); // every half hour\r\n\r\n    return ( \r\n      <Container>\r\n        <Row>\r\n        <div className=\"col-3\">\r\n        <div className=\"row nopadding\">\r\n        <StatsCard \r\n          statsValue2= {energy.thisYearEnergy}\r\n          statsValue1= {energy.lastYearEnergy}\r\n          unit = \"KW-Hr\"\r\n          statsText2=\"This Year\"\r\n          statsText1=\"Last Year\"\r\n          amount={energy.yearlyAmount}\r\n          bg=\"success\"\r\n          bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\r\n          statsIcon={<i className=\"fa fa-clock-o\" />}\r\n          statsIconText=\"This Year\"\r\n          />\r\n          </div>\r\n          <div className=\"row nopadding\">\r\n           <StatsCard \r\n          statsValue1={energy.lastWeekEnergy}\r\n          statsValue2={energy.weeklyEnergy}\r\n          unit = \"KW-Hr\"\r\n          statsText1=\"Last Week\"\r\n          statsText2=\"This Week\"\r\n          amount={energy.weeklyAmount}\r\n          bg=\"info\"\r\n          bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\r\n          statsIcon={<i className=\"fa fa-clock-o\" />}\r\n          statsIconText=\"This Week \"\r\n          />\r\n          </div>\r\n          <div className=\"row nopadding\">\r\n          <StatsCard \r\n          statsValue1={energy.lastMonthEnergy}\r\n          statsValue2={energy.monthlyEnergy}\r\n          unit = \"KW-Hr\"\r\n          statsText1=\"Last Month\"\r\n          statsText2=\"This Month\"\r\n          amount = {energy.monthlyAmount}\r\n          bg=\"danger\"\r\n          bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\r\n          statsIcon={<i className=\"fa fa-clock-o\" />}\r\n          statsIconText=\"This Month\"\r\n          />\r\n          </div>\r\n          </div>\r\n          <div className=\"col-9\">\r\n              <Card\r\n                statsIcon=\"fa fa-history\"\r\n                id=\"chartHours\"\r\n                title=\"Energy\"\r\n                category=\"Energy\"\r\n                stats=\"Updated 30 minutes ago\"\r\n                content={\r\n                  <div className=\"ct-chart\">\r\n                    <BarChart\r\n                      data={totalEnergy}\r\n                      title=\"Energy\"\r\n                      color = \"#2F4B8A\"\r\n                      max = {lastDate}\r\n                      min = {minDate}\r\n                      unit = \"kWh\"\r\n                    />\r\n                  </div>\r\n                }      \r\n              />\r\n        </div>\r\n        </Row>\r\n        <Row>\r\n        <div className=\"col\">\r\n        <div className=\"row nopadding\">\r\n        <Card\r\n          statsIcon=\"fa fa-history\"\r\n          id=\"chartHours\"\r\n          title=\"AHU COP\"\r\n          category=\"AHU COP\"\r\n          stats=\"Updated 30 minutes ago\"\r\n          content={\r\n            <div className=\"ct\">\r\n                <LineChart\r\n                data={ahucop}\r\n                title=\"AHU COP\"\r\n                color=\"#FA0000\"\r\n                unit=\"\"\r\n              />\r\n            </div>\r\n          }\r\n        />\r\n        </div>\r\n        </div>\r\n        </Row>\r\n  </Container>\r\n     );\r\n}\r\n \r\nexport default EnergyDashboard;\r\n\r\n\r\n\r\n/*import React,{ useContext } from 'react';\r\nimport chartContext from \"../../context/charts/chartContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport { Row, Col} from \"react-bootstrap\";\r\nimport Card from \"../charts/Card\";\r\nimport LineChart from \"../charts/LineChart\";\r\nimport BarChart from \"../charts/BarChart\";\r\nimport StatsCard from './StatsCard';\r\nimport moment from 'moment';\r\nfunction convert(str) {\r\n  var date = new Date(str),\r\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n    day = (\"0\" + date.getDate()).slice(-2);\r\n  return [date.getFullYear(), mnth, day].join(\"-\");\r\n}\r\n\r\n\r\n function getEnergyMonthly(dataset){\r\n   let monthlyEnergyAcum=0;\r\n   let todayEnergy=0;\r\n   let weeklyEnergyAcum = 0;\r\n   var today = new Date();\r\n   var currentDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n   for (var i = 0 ; i < dataset.length ; i++){\r\n    var date = new Date(dataset[i].date);\r\n   if (convert(dataset[i].date) === convert(currentDate)){\r\n    todayEnergy =  todayEnergy + dataset[i].energymonthly \r\n   }\r\n  //today.getmonth returns month-1\r\n  if (date.getMonth() === today.getMonth()){\r\n      monthlyEnergyAcum =  monthlyEnergyAcum + dataset[i].energymonthly;\r\n  }\r\n  var now = moment();\r\nvar input = moment(dataset[i].date);\r\nvar isThisWeek = (now.isoWeek() === input.isoWeek())\r\nif ( isThisWeek) {\r\n   weeklyEnergyAcum = weeklyEnergyAcum + dataset[i].energymonthly;\r\n}\r\n}\r\nlet data = {\r\n  todayEnergy : todayEnergy,\r\n  monthlyEnergy : monthlyEnergyAcum,\r\n  weeklyEnergy : weeklyEnergyAcum\r\n}\r\nreturn data;\r\n  }\r\n\r\n\r\nfunction getTotalEnergy(dataset){\r\n  let data = [];\r\n  for (var i = 0 ; i < dataset.length ; i++){\r\n    let repeated = false;\r\n    if (data){\r\n      for(var j = 0 ; j<data.length ; j++){\r\n        if(data[j].label === convert(dataset[i].date)){\r\n            data[j].value = data[j].value + dataset[i].energymonthly;\r\n            repeated = true;\r\n            console.log(data[j].value);\r\n        }\r\n    }\r\n  }\r\n  if(!repeated){\r\n   data.push({\r\n   label: convert(dataset[i].date) ,\r\n   value:  dataset[i].energymonthly\r\n })\r\n}\r\n}\r\n return data;\r\n};   \r\n\r\n\r\nfunction getAhuCop(dataset){\r\n  let data = [];\r\n  for (var i = 0 ; i < dataset.length ; i++)\r\n   data.push({\r\n   label: convert(dataset[i].date) ,\r\n   value:  dataset[i].ahucop\r\n })\r\n return data;\r\n};  \r\n\r\nconst EnergyDashboard = () => {\r\n    const chartsContext = useContext(chartContext);\r\n    const { getDataset, dataset } = chartsContext;\r\n    let ahucop = { };\r\n    let energy = { };\r\n    let totalEnergy = [];\r\n    let lastDate;\r\n    let minDate;\r\n \r\n  const authContext = useContext(AuthContext);\r\n    if (!dataset){\r\n      getDataset();\r\n  }\r\n  else{\r\n    energy = getEnergyMonthly(dataset);\r\n    if (dataset.length >0 ){\r\n    lastDate = convert(dataset[dataset.length -1].date);\r\n    }\r\n    ahucop = getAhuCop(dataset);\r\n    totalEnergy = getTotalEnergy(dataset);\r\n  }\r\n\r\n    setTimeout(() => {\r\n        energy = getEnergyMonthly(dataset);\r\n        lastDate = convert(dataset[dataset.length -1].date);\r\n        ahucop = getAhuCop(dataset);\r\n      }, 3600000); // every half hour\r\n\r\n    return ( \r\n      <div>\r\n        <Row>\r\n        <div className=\"col-3\">\r\n        <div className=\"row nopadding\">\r\n        <StatsCard \r\n          statsValue= {energy.todayEnergy}\r\n          unit = \"KW-Hr\"\r\n          statsText=\"Energy Today\"\r\n          bg=\"success\"\r\n          bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\r\n          statsIcon={<i className=\"fa fa-clock-o\" />}\r\n          statsIconText=\"This Day\"\r\n          />\r\n          </div>\r\n          <div className=\"row nopadding\">\r\n           <StatsCard \r\n          statsValue={energy.weeklyEnergy}\r\n          unit = \"KW-Hr\"\r\n          statsText=\"Energy This Week\"\r\n          bg=\"info\"\r\n          bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\r\n          statsIcon={<i className=\"fa fa-clock-o\" />}\r\n          statsIconText=\"This Week \"\r\n          />\r\n          </div>\r\n          <div className=\"row nopadding\">\r\n          <StatsCard \r\n          statsValue={energy.monthlyEnergy}\r\n          unit = \"KW-Hr\"\r\n          statsText=\"Energy This Month\"\r\n          bg=\"danger\"\r\n          bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\r\n          statsIcon={<i className=\"fa fa-clock-o\" />}\r\n          statsIconText=\"This Month\"\r\n          />\r\n          </div>\r\n          </div>\r\n          <div className=\"col-9\">\r\n              <Card\r\n                statsIcon=\"fa fa-history\"\r\n                id=\"chartHours\"\r\n                title=\"Energy\"\r\n                category=\"Energy\"\r\n                stats=\"Updated 30 minutes ago\"\r\n                content={\r\n                  <div className=\"ct-chart\">\r\n                    <BarChart\r\n                      data={totalEnergy}\r\n                      title=\"Energy\"\r\n                      color = \"#2F4B8A\"\r\n                      max = {lastDate}\r\n                      min = {minDate}\r\n                      unit = \"kWh\"\r\n                    />\r\n                  </div>\r\n                }      \r\n              />\r\n        </div>\r\n        </Row>\r\n        <Row>\r\n        <div className=\"col-12 nopadding\">\r\n        <Card\r\n          statsIcon=\"fa fa-history\"\r\n          id=\"chartHours\"\r\n          title=\"AHU COP\"\r\n          category=\"AHU COP\"\r\n          stats=\"Updated 30 minutes ago\"\r\n          content={\r\n            <div className=\"ct\">\r\n                <LineChart\r\n                data={ahucop}\r\n                title=\"AHU COP\"\r\n                color=\"#FA0000\"\r\n                unit=\"\"\r\n              />\r\n            </div>\r\n          }\r\n        />\r\n        </div>\r\n        </Row>\r\n  </div>\r\n     );\r\n}\r\n \r\nexport default EnergyDashboard;*/","import React from \"react\";\r\nimport { Table, Card, Dropdown } from \"react-bootstrap\";\r\n\r\nconst Example = (props) => {\r\n  return (\r\n    <Card style={{ padding: \"30px\" }}>\r\n      <Table striped bordered hover style={{ marginTop: \"20px\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th>DATE</th>\r\n            <th>POWER CONSUMPTION</th>\r\n            <th>ACTUAL SA FAN FREQUENCY</th>\r\n            <th>PREDICTED VALUE</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map((item) => {\r\n            return (\r\n              <tr>\r\n                <td>{item.date}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.condition}</td>\r\n                <td>{item.params}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Dashboard from \"../layout/Dashboard\";\r\nimport Bar from \"../layout/Bar\";\r\nimport ChartsList from \"../charts/ChartsList\";\r\nimport AlarmsList from \"../alarms/AlarmsList\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport itemContext from \"../../context/items/itemContext\";\r\nimport DashboardContext from \"../../context/dashboard/dashboardContext\";\r\nimport EnergyDashboard from \"./EnergyDashboard\";\r\nimport chartContext from \"../../context/charts/chartContext\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport BarChart from \"../charts/BarChart\";\r\nimport LineChart from \"../charts/LineChart\";\r\nimport ChartTable from \"../charts/ChartTable\";\r\nimport OptimizationTable from \"./OptimizationTable\";\r\n\r\nconst data = [\r\n  {\r\n    date: \"02/12/2020 12:03:34\",\r\n    name: \"Actuator\",\r\n    condition: \"Short description\",\r\n    params: \"Range\",\r\n    value: \"+30\",\r\n  },\r\n  {\r\n    date: \"02/12/2020 12:03:34\",\r\n    name: \"Sensor\",\r\n    condition: \"Short description\",\r\n    params: \"Range\",\r\n    value: \"+45\",\r\n  },\r\n  {\r\n    date: \"02/12/2020 12:03:34\",\r\n    name: \"Motor\",\r\n    condition: \"Short description\",\r\n    params: \"Range\",\r\n    value: \"-12\",\r\n  },\r\n];\r\nlet totalEnergy_1 = [];\r\nlet totalEnergy_2 = [];\r\nlet totalEnergy_3 = [];\r\nlet totalEnergy_4 = [];\r\n\r\nlet lastDate;\r\nlet minDate;\r\n// function getTotalEnergy(x,y) {\r\n\r\nfunction getTotalEnergy(x,y) {\r\n  let data = [];\r\n  for (var i = 0; i < x.length; i++)\r\n    data.push({\r\n      // label: convert(dataset[i].date),\r\n      // value: dataset[i].energymonthly,\r\n      label: x[i],\r\n      value: y[i],\r\n    });\r\n  return data;\r\n}\r\n\r\nfunction convert(str) {\r\n  var date = new Date(str),\r\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n    day = (\"0\" + date.getDate()).slice(-2);\r\n  return [date.getFullYear(), mnth, day].join(\"-\");\r\n}\r\n\r\nconst EnergyOptimization = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuarioAutenticado, getUsers, usuarios } = authContext;\r\n  const itemsContext = useContext(itemContext);\r\n  const { item ,getEnergyOptimization,energyTableData} = itemsContext;\r\n  let name = \"\";\r\n  const dashboardContext = useContext(DashboardContext);\r\n  const { dashboard } = dashboardContext;\r\n\r\n  const chartsContext = useContext(chartContext);\r\n  const { getDataset, dataset ,getGraphApi,graphApiData} = chartsContext;\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // item changes\r\n  useEffect(() => {\r\n    getUsers();\r\n    getDataset();\r\n    getGraphApi()\r\n    getEnergyOptimization();\r\n\r\n    // eslint-disable-next-line\r\n  }, [item]);\r\n\r\n  if (item) {\r\n    name = item[0].name;\r\n  }\r\n\r\n  // if (dataset.length > 0) {\r\n  //   lastDate = dataset[dataset.length - 1].date;\r\n  // }\r\n  // totalEnergy = getTotalEnergy(dataset);\r\n\r\n  if(graphApiData){\r\n\r\n    totalEnergy_1 = getTotalEnergy(graphApiData.X1,graphApiData.y1);\r\n    totalEnergy_2 = getTotalEnergy(graphApiData.X2,graphApiData.y2);\r\n    totalEnergy_3 = getTotalEnergy(graphApiData.X3,graphApiData.y3);\r\n    totalEnergy_4 = getTotalEnergy(graphApiData.X4,graphApiData.y4);\r\n\r\n  }\r\n\r\n  // console.log(\"dataset=-=>\", dataset);\r\n  // let test=JSON.parse(energyTableData)\r\n  // console.log(\"energyTableData=-=>\", test.columns);\r\n  console.log(\"energyTableData=-=>\", energyTableData);\r\n\r\n  return (\r\n  \r\n      <div className=\"col-md-9 nopadding\">\r\n        <main style={{ paddingTop: 20 }}>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <h4>Energy Optimization</h4>\r\n              </Col>\r\n            </Row>\r\n            <hr />\r\n            <br />\r\n            <Row>\r\n              <Col>\r\n                <h4>dT Air SA Fan Frequency</h4>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <br />\r\n            <div\r\n              className=\"ct-chart\"\r\n              style={{ height: 300, width: \"33%\", display: \"inline-block\" }}\r\n            >\r\n              <BarChart\r\n                data={totalEnergy_1}\r\n                title=\"Energy\"\r\n                color=\"#2F4B8A\"\r\n                max={lastDate}\r\n                min={minDate}\r\n                unit=\"kWh\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"ct-chart\"\r\n              style={{ height: 300, width: \"33%\", display: \"inline-block\" }}\r\n            >\r\n              <BarChart\r\n                data={totalEnergy_2}\r\n                title=\"Energy\"\r\n                color=\"#2F4B8A\"\r\n                max={lastDate}\r\n                min={minDate}\r\n                unit=\"kWh\"\r\n              />\r\n            </div>{\" \"}\r\n            <div\r\n              className=\"ct-chart\"\r\n              style={{ height: 300, width: \"33%\", display: \"inline-block\" }}\r\n            >\r\n              <BarChart\r\n                data={totalEnergy_3}\r\n                title=\"Energy\"\r\n                color=\"#2F4B8A\"\r\n                max={lastDate}\r\n                min={minDate}\r\n                unit=\"kWh\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"ct-chart\"\r\n              style={{ height: 300, width: \"33%\", display: \"inline-block\" }}\r\n            >\r\n              <BarChart\r\n                data={totalEnergy_4}\r\n                title=\"Energy\"\r\n                color=\"#2F4B8A\"\r\n                max={lastDate}\r\n                min={minDate}\r\n                unit=\"kWh\"\r\n              />\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <Row>\r\n              <Col>\r\n                <h4 style={{marginBottom:20}} >Optimization</h4>\r\n              </Col>\r\n            </Row>\r\n            <OptimizationTable data={data} />\r\n            <Row>\r\n              <Col>\r\n                <h4 style={{marginBottom:20}} >Optimization</h4>\r\n              </Col>\r\n            </Row>\r\n            <OptimizationTable data={data} />\r\n            <Row>\r\n              <Col>\r\n                <h4 style={{marginBottom:20}} >Optimization</h4>\r\n              </Col>\r\n            </Row>\r\n            <OptimizationTable data={data} />\r\n          </Container>\r\n        </main>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default EnergyOptimization;\r\n\r\n\r\n\r\n// {\r\n//   \"columns\":[\"Mob dist\",\"Thresh\",\"Anomaly\"],\r\n// \"index\":[1583550000000,1583204400000,1583809210000,1582686010000,1582772410000,1582599610000,1582513210000,1582354810000,1582426810000,1582254010000,1606878000000,1606878000000,1583895610000,1583982010000,1584068400000,1584154800000],\r\n// \"data\":[[1.1347054098,3.9509060001,false],[1.1347054098,3.9509060001,false],[1.1347054098,3.9509060001,false],[1.1347054098,3.9509060001,false],[1.3674697145,3.9509060001,false],[1.8872258607,3.9509060001,false],[0.9724108503,3.9509060001,false],[1.3999764816,3.9509060001,false],[1.5274755983,3.9509060001,false],[1.4763065226,3.9509060001,false],[0.5953844765,3.9509060001,false],[1.9827419417,3.9509060001,false],[1.4763065226,3.9509060001,false],[2.4332758613,3.9509060001,false],[1.9827419417,3.9509060001,false],[1.9827419417,3.9509060001,false]]}\r\n\r\n\r\n\r\n// {\"Last Reading\":{\"dT Air, C\":17,\"safanfrequency\":56.0,\"chwtout\":11.0,\"dT CHW, C\":6.6,\"Tin Condenser, C\":30.0,\"totalpower\":869},\r\n// \"Current Reading\":{\"dT Air, C\":17,\"safanfrequency\":56.0,\"chwtout\":11.0,\"dT CHW, C\":3.8,\"Tin Condenser, C\":30.0,\"totalpower\":869},\r\n// \"Optimized Current Reading\":{\"dT Air, C\":17,\"safanfrequency\":60.0,\"chwtout\":12.944,\"dT CHW, C\":3.8,\"Tin Condenser, C\":26.477,\"totalpower\":869}}","import React, { useState } from \"react\";\r\nimport { Table, Card, Dropdown, Modal, Button, Form } from \"react-bootstrap\";\r\nimport { Pencil } from 'react-bootstrap-icons';\r\n\r\nconst Example = (props) => {\r\n  const [modal, setModal] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const [lower, setLower] = useState(\"\")\r\n  const [upper, setUpper] = useState(\"\")\r\n  let arr = []\r\n  // props.faultTableData\r\n  if (props.faultTableData) {\r\n    for (var k in props.faultTableData) {\r\n      var d1 = JSON.parse(props.faultTableData[k])\r\n      // console.log(\"faultTableData[k].status=====>\",typeof d1)\r\n      arr.push({ name: k, })\r\n    }\r\n  }\r\n\r\n  const submitParams = () => {\r\n    if (name && lower && upper) {\r\n\r\n      props.setParameters(name, lower, upper)\r\n      setModal(false)\r\n    }\r\n    else {\r\n      alert(\"Please enter fields properly\")\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Card style={{ padding: \"30px\" }}>\r\n      <Modal\r\n        show={modal}\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header >\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Enter Parameters\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Lower</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Lower\" value={lower} onChange={(e) => setLower(e.target.value)} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Upper</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Upper\" value={upper} onChange={(e) => setUpper(e.target.value)} />\r\n            </Form.Group>\r\n\r\n\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"success\" onClick={() => submitParams()} >\r\n            Submit\r\n            </Button>\r\n          <Button onClick={() => setModal(false)}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Dropdown>\r\n        <Dropdown.Toggle id=\"dropdown-basic\">Select</Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"#/action-1\" onSelect={() => props.getSelectedItems(\"sensor\")} >Sensor</Dropdown.Item>\r\n          <Dropdown.Item href=\"#/action-2\" onSelect={() => props.getSelectedItems(\"actuator\")} >Actuator</Dropdown.Item>\r\n          <Dropdown.Item href=\"#/action-3\" onSelect={() => props.getSelectedItems(\"motor\")}>Motor</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      <Table striped bordered hover style={{ marginTop: \"20px\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>HEALTH CONDITION</th>\r\n            <th>SET PARAMETERS</th>\r\n            <th>VALUE</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map((item, inx) => {\r\n            return (\r\n              <tr>\r\n                <td>{item.name}</td>\r\n                <td>{item.condition}</td>\r\n                <td>{item.params} <span onClick={() => setModal(true)} style={{ float: \"right\", padding: \"5px\", cursor: \"pointer\" }}>\r\n                  <Pencil color=\"gray\" size={20} />\r\n\r\n\r\n                </span>\r\n\r\n                </td>\r\n                <td>{item.value}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Dashboard from \"../layout/Dashboard\";\r\nimport Bar from \"../layout/Bar\";\r\nimport ChartsList from \"../charts/ChartsList\";\r\nimport AlarmsList from \"../alarms/AlarmsList\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport itemContext from \"../../context/items/itemContext\";\r\nimport DashboardContext from \"../../context/dashboard/dashboardContext\";\r\nimport EnergyDashboard from \"./EnergyDashboard\";\r\nimport chartContext from \"../../context/charts/chartContext\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport BarChart from \"../charts/BarChart\"\r\nimport LineChart from \"../charts/LineChart\"\r\nimport ChartTable from \"../charts/ChartTable\"\r\nimport FaultTable from \"./FaultTable\"\r\n\r\n\r\nconst data = [\r\n  {\r\n    date: \"02/12/2020 12:03:34\",\r\n    name: \"Actuator\",\r\n    condition: \"Short description\",\r\n    params: \"Range\",\r\n    value: \"+30\"\r\n  },\r\n  {\r\n    date: \"02/12/2020 12:03:34\",\r\n    name: \"Sensor\",\r\n    condition: \"Short description\",\r\n    params: \"Range\",\r\n    value: \"+45\"\r\n  },\r\n  {\r\n    date: \"02/12/2020 12:03:34\",\r\n    name: \"Motor\",\r\n    condition: \"Short description\",\r\n    params: \"Range\",\r\n    value: \"-12\"\r\n  },\r\n]\r\n\r\nconst tableData = []\r\nconst FaultPrediction = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuarioAutenticado, getUsers, usuarios } = authContext;\r\n  const itemsContext = useContext(itemContext);\r\n  const { item, getSelectedTable, faultTableData, setParameters, setParams } = itemsContext;\r\n  let name = \"\";\r\n  const dashboardContext = useContext(DashboardContext);\r\n  const { dashboard } = dashboardContext;\r\n\r\n  const chartsContext = useContext(chartContext);\r\n  const { getDataset, dataset, getMachineCondition, machineConditionData } = chartsContext;\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  // item changes\r\n  useEffect(() => {\r\n    getUsers();\r\n    getDataset();\r\n    getMachineCondition()\r\n    getSelectedTable();\r\n    // getGraph();\r\n\r\n    // eslint-disable-next-line\r\n  }, [item]);\r\n\r\n  if (item) {\r\n    name = item[0].name;\r\n  }\r\n\r\n  const getSelectedItems = (select) => {\r\n    getSelectedTable(select);\r\n  }\r\n\r\n  const generateTableData = () => {\r\n  }\r\n\r\n\r\n  console.log(\"getMachineCondition=-=>\", machineConditionData)\r\n  // if (faultTableData) {\r\n\r\n  //   console.log(\"faultTableData======>\", faultTableData[\"CHW FR, L/s\"])\r\n  //   for (var k in faultTableData) {\r\n  //     console.log(\"faultTableData\", k, faultTableData[k])\r\n  //   }\r\n  // }\r\n  return (\r\n\r\n      <div className=\"col-md-9 nopadding\">\r\n        <main style={{ paddingTop: 20 }} >\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <h4>Fault Predictions</h4>\r\n              </Col>\r\n            </Row>\r\n            <hr />\r\n            <br />\r\n            <Row>\r\n              <Col>\r\n                <h4>Condition Monitoring</h4>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <br />\r\n\r\n\r\n            {/* <div className=\"ct-chart\">\r\n\r\n              <BarChart\r\n                // data={[{ label: \"jan\", value: 1 }, { label: \"feb\", value:2 },{ label: \"mar\", value: 2 }, { label: \"apr\", value: 4 }]}\r\n                // data={dataset}\r\n                \r\n                title=\"Energy\"\r\n                color=\"#2F4B8A\"\r\n                max={6}\r\n                min={0}\r\n                unit=\"kWh\"\r\n              />\r\n            </div> */}\r\n\r\n            <div className=\"ct-chart\" style={{ width: \"500px\", alignSelf: \"flex-end\" }}>\r\n\r\n              <LineChart\r\n                // data={[{ label: \"jan\", value: 30 }, { label: \"feb\", value:60 },{ label: \"mar\", value: 90 }, { label: \"apr\", value: 150 }]}\r\n                // data={dataset}\r\n                data={machineConditionData ? machineConditionData : dataset}\r\n                title=\"Energy\"\r\n                color=\"#2F4B8A\"\r\n                max={0.01}\r\n                min={0}\r\n                unit=\"kWh\"\r\n              />\r\n              <h5 style={{ marginLeft: '200px' }}>Date / Time</h5>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <Row>\r\n              <Col>\r\n                <h4>Anamoly Detector</h4>\r\n              </Col>\r\n            </Row>\r\n\r\n            <FaultTable data={data} getSelectedItems={getSelectedItems} setParameters={setParameters} faultTableData={faultTableData} />\r\n\r\n          </Container>\r\n        </main>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default FaultPrediction;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// {CHW FR, L/s: \"{'status': 'normal', 'anamoly_value': '--'}\",\r\n//  CHW Valve Position, %: \"{'status': 'normal', 'anamoly_value': '--'}\",\r\n//   OA Damper Open, %: \"{'status': 'normal', 'anamoly_value': '--'}\"}\r\n// CHW FR, L/s: \"{'status': 'normal', 'anamoly_value': '--'}\"\r\n// CHW Valve Position, %: \"{'status': 'normal', 'anamoly_value': '--'}\"\r\n// OA Damper Open, %: \"{'status': 'normal', 'anamoly_value': '--'}\"\r\n\r\n\r\n\r\n// getMachineCondition=-=> \r\n// {\"columns\":[\"Mob dist\",\"Thresh\",\"Anomaly\"],\r\n// \"index\":[1583550000000,1583204400000,1583809210000,1582686010000,1582772410000,1582599610000,1582513210000,1582354810000,1582426810000,1582254010000,1606878000000,1606878000000,1583895610000,1583982010000,1584068400000,1584154800000],\r\n// \"data\":[[1.1347054098,3.9509060001,false],[1.1347054098,3.9509060001,false],[1.1347054098,3.9509060001,false],[1.1347054098,3.9509060001,false],[1.3674697145,3.9509060001,false],[1.8872258607,3.9509060001,false],[0.9724108503,3.9509060001,false],[1.3999764816,3.9509060001,false],[1.5274755983,3.9509060001,false],[1.4763065226,3.9509060001,false],[0.5953844765,3.9509060001,false],[1.9827419417,3.9509060001,false],[1.4763065226,3.9509060001,false],[2.4332758613,3.9509060001,false],[1.9827419417,3.9509060001,false],[1.9827419417,3.9509060001,false]]}\r\n\r\n\r\n\r\n// \"{\\\"Last Reading\\\":{\\\"dT Air, C\\\":17,\\\"safanfrequency\\\":56.0,\\\"chwtout\\\":11.0,\\\"dT CHW, C\\\":6.6,\\\"Tin Condenser, C\\\":30.0,\\\"totalpower\\\":869},\\\"Current Reading\\\":{\\\"dT Air, C\\\":17,\\\"safanfrequency\\\":56.0,\\\"chwtout\\\":11.0,\\\"dT CHW, C\\\":3.8,\\\"Tin Condenser, C\\\":30.0,\\\"totalpower\\\":869},\\\"Optimized Current Reading\\\":{\\\"dT Air, C\\\":17,\\\"safanfrequency\\\":60.0,\\\"chwtout\\\":12.944,\\\"dT CHW, C\\\":3.8,\\\"Tin Condenser, C\\\":26.477,\\\"totalpower\\\":869}}\"","import React,{useContext, useEffect} from \"react\";\r\nimport Dashboard from \"../layout/Dashboard\";\r\nimport Bar from \"../layout/Bar\";\r\nimport ChartsList from \"../charts/ChartsList\";\r\nimport AlarmsList from \"../alarms/AlarmsList\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport itemContext from \"../../context/items/itemContext\";\r\nimport EnergyDashboard from \"./EnergyDashboard\";\r\nimport chartContext from \"../../context/charts/chartContext\";\r\nimport DashboardContext from \"../../context/dashboard/dashboardContext\";\r\nimport alarmsContext from \"../../context/alarms/alarmContext\";\r\nimport EnergyOptimization from \"./EnergyOptimization\";\r\nimport FaultPrediction from \"./FaultPrediction\";\r\n\r\nconst DashboardSummary = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuarioAutenticado, getUsers, usuarios, usuario } = authContext; \r\n  const itemsContext = useContext(itemContext);\r\n  const { item } = itemsContext;\r\n let name=\"\";\r\n\r\n       const chartsContext = useContext(chartContext);\r\n       const { getDataset, dataset } = chartsContext;\r\n       const dashboardContext = useContext(DashboardContext);\r\n  const { dashboard } = dashboardContext;\r\n  const alarmContext = useContext(alarmsContext);\r\n  const {alarms, getAlarms } = alarmContext;\r\n       useEffect(() => {\r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n   // item changes\r\n   useEffect(() => {\r\n    getUsers();\r\n    getDataset();\r\n    getAlarms()\r\n    // eslint-disable-next-line\r\n  }, [item]);\r\n  \r\n   if (item){\r\n   name = item[0].name;\r\n   }\r\n   let admin;\r\n   if (usuario){\r\n    admin = usuario.admin;\r\n   }\r\n   if(!localStorage.getItem(\"token\")){\r\n    props.history.push(\"/\");\r\n  }\r\n  return (\r\n    <div className=\"row\">\r\n    <div className=\"col-md-12 nopadding\">\r\n    <Bar \r\n    usuario={usuario}\r\n    tipo={admin}\r\n    />\r\n    </div>\r\n    {dashboard ?\r\n      <div className=\"col-md-2 nopadding\">\r\n        <Dashboard\r\n        />\r\n      </div>\r\n      :\r\n      null}\r\n  \r\n       <div className=\"col-md-10 nopadding\">\r\n        <main>\r\n        { !item ?\r\n       <EnergyDashboard />\r\n        : name ===\"FDD Alarms\"?\r\n        <AlarmsList \r\n        usuarios={usuarios}\r\n        dataset={dataset}\r\n        alarms={alarms}\r\n        /> :  name ===\"Energy\" ? <EnergyDashboard /> : \r\n        name === \"Energy Optimization\" ? <EnergyOptimization /> :\r\n        name === \"Anomaly Prediction\" ? <FaultPrediction /> :\r\n        <ChartsList /> \r\n        }\r\n        </main>\r\n      </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default DashboardSummary;","import { MOSTRAR_ALERTA, \n    OCULTAR_ALERTA } from '../../types';\n    \n    \n    export default (state, action) => {\n        switch(action.type){\n            case MOSTRAR_ALERTA:\n                return {\n                    alerta: action.payload\n                }\n            case OCULTAR_ALERTA:\n                return {\n                    alerta: null\n                }\n            default:\n                return state;\n        }\n    }","export const CHARTS_ITEM = \"CHARTS_ITEM\";\r\nexport const CURRENT_ITEM = \"CURRENT_ITEM\";\r\nexport const CURRENT_CHART = \"CURRENT_CHART\";\r\nexport const GET_ITEMS = \"GET_ITEMS\";\r\nexport const GET_DATASET = \"GET_MEDITIONS\";\r\n\r\nexport const MOSTRAR_ALERTA = \"MOSTRAR_ALERTA\";\r\nexport const OCULTAR_ALERTA = \"OCULTAR_ALERTA\";\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const OBTENER_USUARIOS = 'OBTENER_USUARIOS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\r\nexport const DELETE_MEMBER = 'DELETE_MEMBER';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';\r\n\r\nexport const GET_ALARMS = 'GET_ALARMS';\r\nexport const CREATE_ALARM = 'CREATE_ALARM';\r\n\r\nexport const SHOW_DASHBOARD = 'SHOW_DASHBOARD';\r\nexport const HIDE_DASHBOARD = 'HIDE_DASHBOARD';\r\n\r\n\r\nexport const GET_FAULT_TABLE = 'GET_FAULT_TABLE';\r\n\r\nexport const MACHINE_CONDITION=\"MACHINE_CONDITION\"\r\nexport const GRAPH_API=\"GRAPH_API\"\r\nexport const ENERGY_OPT_TABLE=\"ENERGY_OPT_TABLE\"\r\n\r\nexport const SET_PARAMETERS=\"SET_PARAMETERS\"\r\n","import React, { useReducer } from 'react';\nimport alertaReducer from './alertaReducer';\nimport alertaContext from './alertaContext';\n\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types';\n\nconst AlertaState = props => {\n    const initialState = {\n        alerta: null\n    }\n\n    const [ state, dispatch ] = useReducer(alertaReducer, initialState);\n\n    // funciones\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg,\n                categoria\n            }\n        });\n\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        },5000); // despues de 5 segundos\n    }\n    return (\n        <alertaContext.Provider\n        value={{\n            alerta: state.alerta,\n            mostrarAlerta\n        }}\n        >\n            {props.children}\n        </alertaContext.Provider>\n    )\n}\n\nexport default AlertaState;","import {    \n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    OBTENER_USUARIOS,\n    DELETE_MEMBER,\n    LOGIN_ERROR,\n    AGREGAR_USUARIO,\n    LOGIN_EXITOSO,\n    CERRAR_SESION} from '../../types';\n    \n    \n    export default (state, action) => {\n        switch(action.type){\n            case LOGIN_EXITOSO:\n            case REGISTRO_EXITOSO:\n                    localStorage.setItem('token',action.payload.token);\n                    return {\n                        ...state,\n                        autenticado: true,\n                        mensaje: null,\n                        cargando: false\n                    }\n            case LOGIN_ERROR:\n            case REGISTRO_ERROR:\n                case CERRAR_SESION:\n                localStorage.removeItem('token');\n                return {\n                    ...state,\n                    token: null,\n                    usuario: null,\n                    autenticado: null,\n                    mensaje: action.payload, \n                    cargando: false\n                }\n            case OBTENER_USUARIO:\n            return {\n                ...state,\n                autenticado: true,\n                usuario: action.payload,\n                cargando: false\n            }\n            case DELETE_MEMBER: \n        return {\n            ...state, \n            usuarios: state.usuarios.filter(usuario => usuario.id !== action.payload)\n        }\n            case OBTENER_USUARIOS:\n                return {\n                    ...state,\n                    usuarios: action.payload\n                }\n            case AGREGAR_USUARIO:\n                return{\n                    ...state,\n                usuarios: [action.payload, ...state.usuarios],\n                }\n            default:\n                return state;\n        }\n    }","import clienteAxios from './axios';\n\nconst tokenAuth = token => {\n    if(token) {\n        clienteAxios.defaults.headers.common['x-auth-token'] = token; \n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default tokenAuth;","import React,{ useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/token';\n\nimport {    \n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    OBTENER_USUARIOS,\n    LOGIN_ERROR,\n    AGREGAR_USUARIO,\n    DELETE_MEMBER,\n    LOGIN_EXITOSO,\n    CERRAR_SESION } from '../../types';\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        usuarios:[],\n        mensaje: null,\n        cargando:true\n    }\n\n    const [ state, dispatch ] = useReducer(AuthReducer, initialState);\n\n    // las funciones\n    \n            // funcion que devuelve el usuario autenticado\n            const usuarioAutenticado = async () => {\n                const token = localStorage.getItem('token');\n                if(token) {\n                    tokenAuth(token);\n                }\n        \n                try {\n                    const respuesta = await clienteAxios.get('/api/auth');\n                    //console.log(respuesta);\n                    dispatch({\n                        type: OBTENER_USUARIO,\n                        payload: respuesta.data.usuario\n                    });\n        \n                } catch (error) {\n                    console.log(error.response);\n                    dispatch({\n                        type: LOGIN_ERROR\n                    })\n                }\n            }\n\n            const registrarUsuario = async datos => {\n                try {\n                    const respuesta = await clienteAxios.post('/api/usuarios',datos);\n        \n                    dispatch({\n                        type: REGISTRO_EXITOSO,\n                        payload: respuesta.data\n                        \n                    });\n        \n                    // obtener el usuario\n                    usuarioAutenticado();\n                } catch (error) {\n                    const alerta = {\n                        msg: error.response.data.msg,\n                        categoria: 'alerta-error'\n                    }\n                    dispatch({\n                        type: REGISTRO_ERROR,\n                        payload: alerta\n                    })\n                }        \n            }\n            const agregarUsuario = async datos => {\n                try {\n                    const respuesta = await clienteAxios.post('/api/usuarios',datos);\n                    console.log(datos);\n                    dispatch({\n                        type: AGREGAR_USUARIO,\n                        payload: datos \n                    });\n                } catch (error) {\n                    console.log(error);\n                }        \n            }\nconst getUsers = async () => {\n    const token = localStorage.getItem('token');\n    if (token){\n        // funcion para enviar el token por headers\n        tokenAuth(token);\n    }\n    try {\n        const respuesta = await clienteAxios.get('/api/usuarios');\n       dispatch({\n           type: OBTENER_USUARIOS,\n           payload: respuesta.data.users\n       });\n\n    } catch (error) {\n        console.log(error.response);\n    }\n}\n\n// delete memmber\nconst deleteMember = async id => {\n    try {\n        await clienteAxios.delete(`/api/usuarios/${id}`);\n        dispatch({\n            type: DELETE_MEMBER,\n            payload: id\n        })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n// cuando el usuario inicia sesion\n // Cuando el usuario inicia sesión\n const iniciarSesion = async datos => {\n    try {\n        const respuesta = await clienteAxios.post('/api/auth', datos);\n        \n        dispatch({\n            type: LOGIN_EXITOSO,\n            payload: respuesta.data\n        });\n\n        // Obtener el usuario\n        usuarioAutenticado();\n    } catch (error) {\n        console.log(error.response.data.msg);\n        const alerta = {\n            msg: error.response.data.msg,\n            categoria: 'alerta-error'\n        }\n\n        dispatch({\n            type: LOGIN_ERROR,\n            payload: alerta\n        })\n    }\n}\n // Cierra la sesión del usuario\n const cerrarSesion = () => {\n    dispatch({\n        type: CERRAR_SESION\n    })\n}\n    return(\n        <AuthContext.Provider\n        value = {{\n            token: state.token,\n            autenticado: state.usuario,\n            usuario: state.usuario,\n            usuarios: state.usuarios,\n            mensaje: state.mensaje,\n            cargando: state.cargando,\n            registrarUsuario,\n            agregarUsuario,\n            usuarioAutenticado,\n            getUsers,\n            deleteMember,\n            iniciarSesion,\n            cerrarSesion\n        }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState;","import { GET_ALARMS, \n   CREATE_ALARM } from '../../types';\n    \n    \n    export default (state, action) => {\n        switch(action.type){\n            case GET_ALARMS:\n                return {\n                    ...state,\n                    alarms: action.payload\n                }\n\n            default:\n                return state;\n        }\n    }","import React, { useReducer } from 'react';\nimport AlarmContext from './alarmContext';\nimport AlarmReducer from './alarmReducer';\nimport clienteAxios from '../../config/axios';\nimport { CREATE_ALARM, GET_ALARMS } from '../../types';\n\nconst AlarmState = props => {\n    const initialState = {\n        alarms: []\n    }\n\n    const [ state, dispatch ] = useReducer(AlarmReducer, initialState);\n\n    const createAlarm= async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/alarms/addAlarms',datos);\n        } catch (error) {\n            console.log(error);\n        }        \n    }\n\n    const getAlarms = async () => {\n        try {\n            const respuesta = await clienteAxios.get('/api/alarms');\n           dispatch({\n               type: GET_ALARMS,\n               payload: respuesta.data.alarms\n           });\n    \n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n    return (\n        <AlarmContext.Provider\n        value={{\n            alarms: state.alarms,\n            createAlarm,\n            getAlarms\n        }}\n        >\n            {props.children}\n        </AlarmContext.Provider>\n    )\n}\n\nexport default AlarmState;","import {\r\n  GET_ITEMS,\r\n  CURRENT_ITEM,\r\n  ENERGY_OPT_TABLE,\r\n  GET_FAULT_TABLE,\r\n  SET_PARAMETERS\r\n} from \"../../types\";\r\n// cuando se detecta el FORMULARIO_PROYECTO igual al de context se ejecuta el reducer\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.payload\r\n      };\r\n\r\n    case CURRENT_ITEM:\r\n      return {\r\n        ...state,\r\n        item: state.items.filter(\r\n          item => item._id === action.payload\r\n        )\r\n      };\r\n    case ENERGY_OPT_TABLE:\r\n      return {\r\n        ...state,\r\n        energyTableData: action.payload\r\n      }\r\n      \r\n      case GET_FAULT_TABLE:\r\n      return {\r\n        ...state,\r\n        faultTableData: action.payload\r\n      }\r\n\r\n      case SET_PARAMETERS:\r\n        return {\r\n          ...state,\r\n          setParams: action.payload\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n// import {\r\n//   GET_ITEMS,\r\n//   CURRENT_ITEM,\r\n//   GET_FAULT_TABLE,\r\n//   ENERGY_OPT_TABLE,\r\n//   SET_PARAMETERS\r\n// } from \"../../types\";\r\n\r\n// // cuando se detecta el FORMULARIO_PROYECTO igual al de context se ejecuta el reducer\r\n// export default (state, action) => {\r\n//   switch (action.type) {\r\n\r\n//     case GET_ITEMS:\r\n//       return {\r\n//         ...state,\r\n//         items: action.payload\r\n//       };\r\n\r\n//     case CURRENT_ITEM:\r\n//       return {\r\n//         ...state,\r\n//         item: state.items.filter(\r\n//           item => item._id === action.payload\r\n//         )\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import React, {useReducer } from \"react\";\r\nimport itemContext from \"./itemContext\";\r\nimport itemReducer from \"./itemReducer\";\r\nimport clienteAxios from '../../config/axios';\r\nimport axios from \"axios\"\r\n\r\nimport {\r\n  GET_ITEMS,\r\n  CURRENT_ITEM,\r\n  GET_FAULT_TABLE,\r\n  ENERGY_OPT_TABLE,\r\n  SET_PARAMETERS\r\n} from \"../../types\";\r\n\r\nconst ItemState = props => {\r\n  const initialState = {\r\n    items: [],\r\n    item: null,\r\n    faultTableData: null,\r\n    energyTableData: null,\r\n    setParams: null,\r\n  };\r\n\r\n  // dispatch para ejecutar las acciones\r\n  const [state, dispatch] = useReducer(itemReducer, initialState);\r\n\r\n  \r\n  // obtener los proyectos\r\n  const getItems = async () => {\r\n    try {\r\n        const result = await clienteAxios.get('/api/items');\r\n        dispatch({\r\n            type: GET_ITEMS,\r\n            payload: result.data.items\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getSelectedTable = async (data = \"actuator\") => {\r\n  console.log(\"data\", data)\r\n\r\n  try {\r\n    const result = await axios.get(`https://facialrecognition-1.herokuapp.com/api/${data}`);\r\n    console.log(\"result.data=====>\", result.data)\r\n    let arr=[]\r\n    for (var k in result.data) {\r\n      arr.push({ name: k,condition:result.data[k].status,value:result.data[k].anamoly_value,lower:result.data[k].lower_value,upper:result.data[k].upper_value,date:result.data[k].date })\r\n    }\r\n    dispatch({\r\n      type: GET_FAULT_TABLE,\r\n      payload: arr\r\n    })\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\nconst setParameters = async (name, lower, upper) => {\r\n  console.log(\"name,lower,upper\", name, lower, upper)\r\n  let data = {\r\n    name, lower, upper\r\n  }\r\n\r\n  try {\r\n    const result = await axios.post(`https://facialrecognition-1.herokuapp.com/api/setParameters`, data);\r\n    console.log(\"result\", result)\r\n    if(result.data){\r\n      alert(result.data.msg)\r\n    }\r\n    dispatch({\r\n      type: SET_PARAMETERS,\r\n      payload: result.data\r\n    })\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\n\r\nconst getEnergyOptimization = async (data = \"actuator\") => {\r\n  console.log(\"data\", data)\r\n\r\n  try {\r\n    const result = await axios.get(`https://facialrecognition-1.herokuapp.com/api/Optimization`);\r\n    console.log(\"result energytable===?\", result.data)\r\n   \r\n\r\n\r\n    dispatch({\r\n      type: ENERGY_OPT_TABLE,\r\n      payload: result.data\r\n    })\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\n \r\n  // Selecciona el proyecto que el usuario clickeo\r\n  const currentItem = itemId => {\r\n    dispatch({\r\n      type: CURRENT_ITEM,\r\n      payload: itemId\r\n    });\r\n  };\r\n\r\n  \r\n  return (\r\n    <itemContext.Provider\r\n      value={{\r\n        items: state.items,\r\n        item: state.item,\r\n        energyTableData: state.energyTableData,\r\n        faultTableData: state.faultTableData,\r\n        setParams: state.setParams,\r\n        getItems,\r\n        currentItem,\r\n        getSelectedTable,\r\n        getEnergyOptimization,\r\n        setParameters,\r\n    }}\r\n    >\r\n      {props.children}\r\n    </itemContext.Provider>\r\n  );\r\n};\r\nexport default ItemState;\r\n// todo el state debe estar centralizado en este archivo\r\n// mas que nada lo que fluye entre distintos components\r\n","import { \r\n    CHARTS_ITEM, \r\n    CURRENT_CHART,\r\n    GET_DATASET,\r\n    MACHINE_CONDITION,\r\n    GRAPH_API\r\n} from \"../../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case CHARTS_ITEM:\r\n      return {\r\n        ...state,\r\n        chartsitem: action.payload\r\n      };\r\n    \r\n        case CURRENT_CHART: \r\n        return {\r\n          ...state,\r\n          chartselected: action.payload\r\n        };\r\n    case GET_DATASET:\r\n      return {\r\n        ...state,\r\n        dataset: action.payload\r\n      }\r\n      case MACHINE_CONDITION:{\r\n        return{\r\n          ...state,\r\n          machineConditionData:action.payload\r\n        }\r\n      }\r\n      case GRAPH_API:{\r\n        return{\r\n          ...state,\r\n          graphApiData:action.payload\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport chartContext from './chartContext';\r\nimport ChartReducer from './chartReducer';\r\nimport clienteAxios from '../../config/axios';\r\nimport axios from \"axios\"\r\nimport {\r\n    CHARTS_ITEM,\r\n    GET_DATASET,\r\n    MACHINE_CONDITION,\r\n    GRAPH_API\r\n} from '../../types';\r\n\r\nconst ChartState = props => {\r\n    const initialState = {\r\n        chartsitem: [],\r\n        dataset: [],\r\n        chartselected: null,\r\n        machineConditionData: null,\r\n        graphApiData: null,\r\n\r\n\r\n    }\r\n\r\n    // create dispatch and state\r\n    const [state, dispatch] = useReducer(ChartReducer, initialState);\r\n\r\n    // get charts for an item\r\n    const getCharts = async item => {\r\n        try {\r\n            const result = await clienteAxios.get('/api/charts', { params: { item } });\r\n            dispatch({\r\n                type: CHARTS_ITEM,\r\n                payload: result.data.charts\r\n            })\r\n        } catch (error) {\r\n            console.log('error');\r\n        }\r\n    }\r\n\r\n\r\n    const getMachineCondition = async () => {\r\n        try {\r\n            let arr = []\r\n            let result = await axios.get('https://facialrecognition-1.herokuapp.com/api/machineCondition');\r\n            result = JSON.parse(result.data)\r\n            // console.log(\"result===>\", result)\r\n\r\n            result.data.map((val, inx) => {\r\n\r\n                let date = new Date(result.index[inx])\r\n                date = date.toJSON().split(\"T\")[0]\r\n                // console.log(\"val===>\", val[1])\r\n                arr.push({\r\n                    label: date,\r\n                    value: val[0],\r\n                    threshold: val[1]\r\n                })\r\n            })\r\n\r\n            console.log(\"state of arr=-===>\", arr)\r\n            dispatch({\r\n                type: MACHINE_CONDITION,\r\n                payload: arr\r\n            })\r\n        } catch (error) {\r\n            console.log('error', error);\r\n        }\r\n    }\r\n\r\n    const getGraphApi = async () => {\r\n        try {\r\n            const result = await axios.get('https://facialrecognition-1.herokuapp.com/api/graphs');\r\n            // console.log(\"result\", result)\r\n            dispatch({\r\n                type: GRAPH_API,\r\n                payload: result.data\r\n            })\r\n        } catch (error) {\r\n            console.log('error');\r\n        }\r\n    }\r\n\r\n\r\n    const getDataset = async () => {\r\n        try {\r\n            const result = await clienteAxios.get('/api/dataset');\r\n            dispatch({\r\n                type: GET_DATASET,\r\n                payload: result.data.dataset\r\n            })\r\n        } catch (error) {\r\n            console.log('error');\r\n        }\r\n    }\r\n    return (\r\n        <chartContext.Provider\r\n            value={{\r\n                chartsitem: state.chartsitem,\r\n                chartselected: state.chartselected,\r\n                dataset: state.dataset,\r\n                getCharts,\r\n                getDataset,\r\n                machineConditionData: state.machineConditionData,\r\n                graphApiData: state.graphApiData,\r\n                getMachineCondition,\r\n                getGraphApi\r\n\r\n\r\n            }}\r\n        >\r\n            {props.children}\r\n        </chartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ChartState;","import { SHOW_DASHBOARD, \n    HIDE_DASHBOARD } from '../../types';\n    \n    \n    export default (state, action) => {\n        switch(action.type){\n            case SHOW_DASHBOARD:\n                return {\n                    ...state,\n                    dashboard: 'showing'\n                }\n            case HIDE_DASHBOARD:\n                return {\n                    dashboard: null\n                }\n            default:\n                return state;\n        }\n    }","import React, { useReducer } from 'react';\nimport dashboardReducer from './dashboardReducer';\nimport dashboardContext from './dashboardContext';\n\nimport { SHOW_DASHBOARD, HIDE_DASHBOARD } from '../../types';\n\nconst DashboardState = props => {\n    const initialState = {\n        dashboard: 'showing'\n    }\n\n     const [ state, dispatch ] = useReducer(dashboardReducer, initialState);\n\n    const showDashboard = () => {\n        dispatch({\n            type: SHOW_DASHBOARD\n        })\n    }\n    \n    const hideDashboard = () => {\n        dispatch({\n            type: HIDE_DASHBOARD\n        })\n    }\n    return (\n        <dashboardContext.Provider\n        value={{\n            dashboard: state.dashboard,\n            showDashboard,\n            hideDashboard\n        }}\n        >\n            {props.children}\n        </dashboardContext.Provider>\n    )\n}\n\nexport default DashboardState;","import React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst RutaPrivada = ({ component: Component, ...props  }) => {\n\n    const authContext = useContext(AuthContext);\n    const { autenticado, cargando, usuarioAutenticado } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, []);\n\n    return ( \n        <Route { ...props } render={ props => !autenticado && !cargando ?  (\n            <Redirect to=\"/\" />\n        )  : (\n            <Component {...props} />\n        ) } />\n\n     );\n}\n \nexport default RutaPrivada;","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport LandingPage from \"./components/layout/LandingPage\";\r\nimport Register from \"./components/auth/Register\";\r\nimport SignIn from \"./components/auth/SignIn\";\r\nimport Administration from \"./components/layout/Administration\";\r\nimport DashboardSummary from \"./components/layout/DashboardSummary\";\r\nimport FaultPrediction from \"./components/layout/FaultPrediction\";\r\nimport EnergyOptimization from \"./components/layout/EnergyOptimization\";\r\n// import AlarmList from \"./components/alarms/AlarmsList\";\r\n\r\n\r\nimport AlertaState from \"./context/alertas/alertaState\";\r\nimport AuthState from \"./context/autenticacion/authState\";\r\nimport AlarmState from \"./context/alarms/alarmState\";\r\nimport ItemState from \"./context/items/itemState\";\r\nimport ChartState from \"./context/charts/chartState\";\r\nimport DashboardState from \"./context/dashboard/dashboardState\";\r\nimport RutaPrivada from \"./components/rutas/RutaPrivada\";\r\nimport tokenAuth from \"./config/token\";\r\n\r\n\r\n// Revisar si tenemos un token\r\nconst token = localStorage.getItem(\"token\");\r\nif (token) {\r\n  tokenAuth(token);\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <DashboardState>\r\n      <AlarmState>\r\n        <ItemState>\r\n          <ChartState>\r\n            <AlertaState>\r\n              <AuthState>\r\n                <Router>\r\n                  <Switch>\r\n    \r\n                    <Route exact path=\"/\" component={LandingPage} />\r\n                    <Route\r\n                      exact\r\n                      path=\"/dashboard\"\r\n                      component={DashboardSummary}\r\n                    />\r\n                      <Route\r\n                      exact\r\n                      path=\"/dashboard#\"\r\n                      component={DashboardSummary}\r\n                    />\r\n                   \r\n                    <Route\r\n                      exact\r\n                      path=\"/fault-prediction\"\r\n                      component={FaultPrediction}\r\n                    />\r\n                    <Route\r\n                      exact\r\n                      path=\"/energy-optimization\"\r\n                      component={EnergyOptimization}\r\n                    />\r\n                    \r\n                    <Route exact path=\"/sign-in\" component={SignIn} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <RutaPrivada\r\n                      exact\r\n                      path=\"/admin\"\r\n                      component={Administration}\r\n                    />    \r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                                  </Switch>\r\n                </Router>\r\n              </AuthState>\r\n            </AlertaState>\r\n          </ChartState>\r\n        </ItemState>\r\n      </AlarmState>\r\n    </DashboardState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}