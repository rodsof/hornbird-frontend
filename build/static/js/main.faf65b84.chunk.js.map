{"version":3,"sources":["context/dashboard/dashboardContext.js","context/autenticacion/authContext.js","components/layout/Bar.js","context/alarms/alarmContext.js","components/layout/LandingPage.js","context/alertas/alertaContext.js","components/auth/Register.js","components/auth/SignIn.js","components/auth/AddMember.js","components/auth/Member.js","components/auth/MembersList.js","context/items/itemContext.js","context/charts/chartContext.js","components/items/Item.js","components/charts/LineChart.js","components/charts/BarChart.js","components/charts/Card.js","components/charts/ChartTable.js","components/charts/ChartsList.js","components/items/ItemsList.js","components/layout/Dashboard.js","components/layout/Administration.js","config/axios.js","components/alarms/Contact.js","components/alarms/AlarmsTable.js","components/alarms/AlarmsList.js","components/layout/StatsCard.js","components/layout/EnergyDashboard.js","components/layout/DashboardSummary.js","components/layout/FaultTable.js","components/layout/FaultPrediction.js","components/layout/OptimizationTable.js","components/layout/EnergyOptimization.js","context/alertas/alertaReducer.js","types/index.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","context/alarms/alarmReducer.js","context/alarms/alarmState.js","context/items/itemReducer.js","context/items/itemState.js","context/charts/chartReducer.js","context/charts/chartState.js","context/dashboard/dashboardReducer.js","context/dashboard/dashboardState.js","components/rutas/RutaPrivada.js","App.js","serviceWorker.js","index.js"],"names":["dashboardContext","createContext","authContext","Bar","props","useContext","DashboardContext","dashboard","showDashboard","hideDashboard","cerrarSesion","AuthContext","tipo","autenticado","localStorage","getItem","className","onClick","icon","faBars","size","color","to","src","alt","faSignOutAlt","alarmContext","LandingPage","alarms","getAlarms","history","push","url","id","display","position","allow","alertaContext","Register","AlertaContext","alerta","mostrarAlerta","mensaje","registrarUsuario","cargando","useEffect","msg","categoria","useState","name","email","password","confirm","usuario","guardarUsuario","onChange","e","target","value","onSubmit","preventDefault","trim","length","htmlFor","type","placeholder","disabled","SignIn","iniciarSesion","form","currentTarget","formData","FormData","get","AddMember","agregarUsuario","getUsers","Member","currentId","deleteMember","_id","MembersList","usuarios","TransitionGroup","map","CSSTransition","key","timeout","itemContext","chartContext","Item","item","ai","currentItem","getCharts","href","LineChart","chartRef","React","createRef","this","myChart","data","labels","d","label","datasets","update","Chart","current","options","responsive","scales","xAxes","ticks","autoSkip","maxTicksLimit","yAxes","min","scaleLabel","labelString","unit","title","fill","backgroundColor","pointRadius","borderColor","borderWidth","lineTension","ref","style","height","width","Component","BarChart","canvasRef","maintainAspectRatio","Card","plain","hCenter","category","ctAllIcons","ctTableFullWidth","ctTableResponsive","ctTableUpgrade","content","legend","stats","statsIcon","ChartTable","charts","Container","fluid","Row","Col","md","Table","striped","hover","chart","uuidv4","convert","str","date","Date","mnth","getMonth","slice","day","getDate","getFullYear","join","getArray","dataset","i","repeated","j","chwtin","chwtout","sat","spacet","oat","saductstpressure","oatrh","spacerh","randomFeeds","feeds","ChartsList","chartsContext","getDataset","click","handleClick","selectedIndex","handleClickCard","saveCategory","setTimeout","paddingTop","Dropdown","Toggle","variant","Menu","feed","index","ItemsList","itemsContext","items","getItems","classNames","Dashboard","Administration","usuarioAutenticado","admin","clienteAxios","axios","create","baseURL","process","Contact","handleSubmit","event","a","setState","isSending","message","alarm","post","then","response","reset","isSent","errors","time","state","catch","error","console","log","finally","Alert","Form","Group","as","Button","showContactForm","AlarmsTable","hours","getHours","minutes","getMinutes","secs","getSeconds","ampm","start","status","closeDate","assignTo","assignDate","calculateAlarms","maxDate","today","safanfrequency","chwvalveposition","safr","space","oadamperopen","AlarmsList","newAlarms","createAlarm","datos","StatsCard","bg","xs","statsText1","statsValue1","statsText2","statsValue2","isNaN","amount","isFinite","statsIconText","EnergyDashboard","lastDate","ahucop","energy","totalEnergy","thisYearEnergy","lastYearEnergy","monthlyEnergyAcum","lastMonthEnergy","weeklyEnergyAcum","lastWeekEnergy","energymonthly","now","moment","input","lastWeek","subtract","lastYear","isThisWeek","isoWeek","isLastWeek","isThisYear","isoWeekYear","isLastYear","monthlyEnergy","weeklyEnergy","yearlyAmount","monthlyAmount","weeklyAmount","getEnergyMonthly","getAhuCop","getTotalEnergy","bigIcon","max","minDate","DashboardSummary","alarmsContext","Example","modal","setModal","setName","lower","setLower","upper","setUpper","dropValue","setDropValue","faultTableData","padding","Modal","show","aria-labelledby","centered","Header","Title","Body","controlId","Label","Control","Footer","setParameters","alert","onSelect","getSelectedItems","bordered","marginTop","inx","condition","float","cursor","params","FaultPrediction","getSelectedTable","getMachineCondition","machineConditionData","alignSelf","margin","threshold","marginLeft","FaultTable","select","energyTableData","totalEnergy_1","totalEnergy_2","totalEnergy_3","totalEnergy_4","x","y","EnergyOptimization","getEnergyOptimization","getGraphApi","graphApiData","X1","y1","X2","y2","X3","y3","X4","y4","marginBottom","OptimizationTable","action","payload","AlertaState","useReducer","alertaReducer","dispatch","Provider","children","setItem","token","removeItem","filter","tokenAuth","defaults","headers","common","AuthState","initialState","AuthReducer","respuesta","users","delete","AlarmState","AlarmReducer","setParams","ItemState","itemReducer","result","k","arr","anamoly_value","lower_value","upper_value","itemId","chartsitem","chartselected","ChartState","ChartReducer","JSON","parse","val","toJSON","split","DashboardState","dashboardReducer","RutaPrivada","component","render","App","exact","path","from","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.faf65b84.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst dashboardContext = createContext();\r\n\r\nexport default dashboardContext;","import { createContext } from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignInAlt, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DashboardContext from \"../../context/dashboard/dashboardContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst Bar = (props) => {\r\n  const dashboardContext = useContext(DashboardContext);\r\n  const { dashboard, showDashboard, hideDashboard } = dashboardContext;\r\n  const authContext = useContext(AuthContext);\r\n  const { cerrarSesion } = authContext;\r\n  let tipo = props.tipo;\r\n  let autenticado = false;\r\n  if(localStorage.getItem(\"token\")){\r\n    autenticado= true;\r\n  }\r\n  const onClickDashboard = () => {\r\n    if (!dashboard) {\r\n      showDashboard();\r\n    } else {\r\n      hideDashboard();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-header\">\r\n      {autenticado ? (\r\n        <div className=\"col-1 nopadding\">\r\n          <button className=\"btn btn-faBars\" onClick={onClickDashboard}>\r\n            <FontAwesomeIcon icon={faBars} size=\"3x\" color=\"white\" />\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      {autenticado ? (\r\n        <div className=\"col-4 nopadding\">\r\n          <Link to={\"/dashboard\"}>\r\n            <img src=\"HBTLogo.png\" alt=\"logo\" className=\"logo\" />\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div className=\"col-4 nopadding\">\r\n          <img src=\"HBTLogo.png\" alt=\"logo\" className=\"logo\" />\r\n        </div>\r\n      )}\r\n      {autenticado ? (\r\n          <div className=\"quatro\">\r\n            <p>System FDD, Prediction & Energy Optimization</p>\r\n          </div>\r\n      ) : (\r\n        <div className=\"col-5 nopadding\"></div>\r\n      )}\r\n\r\n      {autenticado ? null : (\r\n        <div className=\"col-1 nopadding\">\r\n          <button className=\"btn btn-link btn-block\">\r\n            <Link to={\"/sign-in\"} className=\"link\">\r\n              SIGN IN\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      )}\r\n      {autenticado ? null : (\r\n        <div className=\"col-1 nopadding\">\r\n          <button\r\n            className=\"btn btn-faBars\"\r\n          >\r\n            <FontAwesomeIcon icon={faSignOutAlt} size=\"3x\" color=\"white\" />\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {!autenticado ? null : tipo ? (\r\n        <div className=\"col-3 nopadding\">\r\n          <button className=\"btn btn-link btn-block\">\r\n            <Link to={\"/admin\"} className=\"link\">\r\n              Administration\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      {autenticado ? (\r\n        <div className=\"col-1 nopadding\">\r\n          <button\r\n            className=\"btn btn-link btn-block\"\r\n            onClick={() => cerrarSesion()}\r\n          >\r\n            <Link to={\"\"} className=\"link\">\r\n              SIGN OUT\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      {autenticado ? (\r\n        <div className=\"col-1 nopadding\">\r\n          <button\r\n            className=\"btn btn-faBars\"\r\n          >\r\n            <FontAwesomeIcon icon={faSignOutAlt} size=\"3x\" color=\"white\" />\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bar;\r\n","import { createContext } from 'react';\r\n\r\nconst alarmContext = createContext();\r\n\r\nexport default alarmContext;","import React,{ useContext } from 'react';\r\nimport Iframe from 'react-iframe';\r\nimport Bar from './Bar';\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport alarmContext from \"../../context/alarms/alarmContext\";\r\nconst LandingPage = (props) => {\r\n    const authContext = useContext(AuthContext);\r\n    const { alarms, getAlarms } = useContext(alarmContext);\r\n \r\n  if(!alarms){\r\n      getAlarms();\r\n  }\r\n  if(localStorage.getItem(\"token\")){\r\n    props.history.push(\"/dashboard\");\r\n  }\r\n\r\n    return ( \r\n        <div className=\"row\">\r\n        <div className=\"col-12\">\r\n        <Bar/>\r\n        </div>\r\n        <div className=\"col-12\">\r\n        <div className=\"seccion-principal\">\r\n        <Iframe url=\"https://www.ventusky.com/\"\r\n        id=\"ventusky\"\r\n        className=\"ventusky\"\r\n        display=\"block\"\r\n        position=\"relative\"\r\n        allow=\"geolocation\"\r\n        />\r\n        </div>\r\n        </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default LandingPage;","import { createContext } from 'react';\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Bar from \"../layout/Bar\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst Register = props => { // props viene de react router dom\r\n// extraer los valores del context\r\nconst alertaContext = useContext(AlertaContext);\r\nconst { alerta, mostrarAlerta } = alertaContext;\r\n\r\nconst authContext = useContext(AuthContext);\r\nconst { mensaje, autenticado, registrarUsuario, cargando } = authContext;\r\n\r\n//En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\r\nuseEffect(() => {\r\n  if (autenticado) {\r\n    props.history.push(\"/dashboard\");\r\n  }\r\n\r\n  if (mensaje) {\r\n    mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n  }\r\n  // eslint-disable-next-line\r\n}, [mensaje, autenticado, props.history]);\r\n\r\n// State para iniciar sesión\r\nconst [usuario, guardarUsuario] = useState({\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirm: \"\"\r\n});\r\n\r\n// extraer de usuario\r\nconst { name, email, password, confirm } = usuario;\r\n\r\nconst onChange = e => {\r\n  guardarUsuario({\r\n    ...usuario,\r\n    [e.target.name]: e.target.value\r\n  });\r\n};\r\n \r\n// Cuando el usuario quiere iniciar sesión\r\nconst onSubmit = e => {\r\n  e.preventDefault();\r\n  // Validar que no haya campos vacios\r\n  if (\r\n    name.trim() === \"\" ||\r\n    email.trim() === \"\" ||\r\n    password.trim() === \"\" ||\r\n    confirm.trim() === \"\"\r\n  ) {\r\n    mostrarAlerta(\"Please complete all fields\", \"alerta-error\");\r\n    return;\r\n  }\r\n\r\n  // Password minimo de 6 caracteres\r\n  if (password.length < 6) {\r\n    mostrarAlerta(\r\n      \"Password must be at least 6 characters long\",\r\n      \"alerta-error\"\r\n    );\r\n    return;\r\n  }\r\n\r\n  // Los 2 passwords son iguales\r\n  if (password !== confirm) {\r\n    mostrarAlerta(\"Los passwords no son iguales\", \"alerta-error\");\r\n    return;\r\n  }\r\n\r\n  // Pasarlo al action\r\n  registrarUsuario({\r\n    name,\r\n    email,\r\n    password\r\n  });\r\n};\r\n \r\nreturn (\r\n  <div className=\"row\">\r\n  <div className=\"col-12\">\r\n  <Bar/>\r\n  </div>\r\n  <div className=\"col-12\">\r\n    <div className=\"form-usuario\">\r\n    {alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div>\r\n      ) : null}\r\n\r\n\r\n      <div className=\"contenedor-form sombra-dark\">\r\n        <h1> CREATE AN ACCOUNT </h1>\r\n\r\n        <form \r\n        onSubmit={onSubmit}>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              placeholder=\"Your Name\"\r\n              value={name}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Your Email\"\r\n              value={email}\r\n              onChange={onChange}\r\n/>\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Your Password\"\r\n              value={password}\r\n              onChange={onChange}\r\n/>\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"confirm\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirm\"\r\n              name=\"confirm\"\r\n              placeholder=\"Repeat Password\"\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primario btn-block\"\r\n              onChange={onChange}\r\n              disabled={cargando}>\r\n            {cargando ? \"Registering...\" : \"Register\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <Link to={\"/\"} className=\"btn btn-primario btn-block\">\r\n          HOME\r\n        </Link>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Bar from \"../layout/Bar\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst SignIn = (props) => {\r\n   // extraer los valores del context\r\n   const alertaContext = useContext(AlertaContext);\r\n   const { alerta, mostrarAlerta } = alertaContext;\r\n \r\n   const authContext = useContext(AuthContext);\r\n   const { mensaje, autenticado, iniciarSesion} = authContext; \r\n\r\n  \r\n    //En caso de que el password o usuario no existe\r\n   useEffect(() => {\r\n     if (autenticado) {\r\n      props.history.push(\"/dashboard\");\r\n    } \r\n     if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    } \r\n    // eslint-disable-next-line\r\n  }, [autenticado, mensaje, props.history]); \r\n  \r\n  //State para iniciar sesion\r\n  /* const [usuario, guardarUsuario] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  }); */\r\n\r\n  //extraer de usuario\r\n  //const { email, password } = usuario;\r\n  /* const onChange = e => {\r\n    guardarUsuario({\r\n      ...usuario,\r\n      [e.target.name]: e.target.value // la copia de usuario es para q lo q este en el otro campo no se reescriba\r\n    });\r\n  }; */\r\n\r\n  // cuando el usuario quiere iniciar sesion\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n  const formData = new FormData(form);\r\n  const email = formData.get(\"email\");\r\n  const password = formData.get(\"password\");\r\n    // validar que no haya campos vacios\r\n    if (email.trim() === '' || password.trim() === ''){\r\n      mostrarAlerta('Please complete all fields','alerta-error');\r\n    }\r\n\r\n    //  pasarlo al action\r\n    iniciarSesion({ email, password });\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n  <div className=\"col-12\">\r\n  <Bar/>\r\n  </div>\r\n  <div className=\"col-12\">\r\n    <div className=\"form-usuario\">\r\n    {alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div>\r\n      ) : null}\r\n      <div className=\"contenedor-form sombra-dark\">\r\n        <h1> SIGN IN </h1>\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Your Email\"\r\n            /*   value={email}\r\n              onChange={onChange} */\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Your Password\"\r\n              /* value={password}\r\n              onChange={onChange} */\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-primario btn-block\"\r\n              value=\"Sign In\"\r\n            />\r\n          </div>\r\n        </form>\r\n        <button className=\"btn btn-primario btn-block\">\r\n        <Link to={\"/register\"} className=\"linkSignIn\" >\r\n          Create Account\r\n        </Link>\r\n        </button>\r\n        <button className=\"btn btn-primario btn-block\">\r\n        <Link to={\"/\"} className=\"linkSignIn\">\r\n          Home\r\n        </Link>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst AddMember = () => { // props viene de react router dom\r\n// extraer los valores del context\r\nconst alertaContext = useContext(AlertaContext);\r\nconst { alerta, mostrarAlerta } = alertaContext;\r\n\r\nconst authContext = useContext(AuthContext);\r\nconst { mensaje, agregarUsuario, cargando, getUsers } = authContext;\r\n\r\n//En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\r\nuseEffect(() => {\r\n  if (mensaje) {\r\n    mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n  }\r\n  // eslint-disable-next-line\r\n}, [mensaje]);\r\n\r\n // State para iniciar sesión\r\n/* const [usuario, guardarUsuario] = useState({\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirm: \"\"\r\n}); \r\n\r\n// extraer de usuario\r\nconst { name, email, password, confirm } = usuario;\r\nconst onChange = e => {\r\n  guardarUsuario({\r\n    ...usuario,\r\n    [e.target.name]: e.target.value\r\n  });\r\n};  */\r\n \r\n// Cuando el usuario quiere iniciar sesión\r\nconst onSubmit = e => {\r\n  e.preventDefault();\r\n  const form = e.currentTarget;\r\n  const formData = new FormData(form);\r\n  const name = formData.get(\"name\");\r\n  const email = formData.get(\"email\");\r\n  const password = formData.get(\"password\");\r\n  const confirm = formData.get(\"confirm\");\r\n  // Validar que no haya campos vacios\r\n  if (\r\n    name.trim() === \"\" ||\r\n    email.trim() === \"\" ||\r\n    password.trim() === \"\" ||\r\n    confirm.trim() === \"\"\r\n  ) {\r\n    mostrarAlerta(\"Please complete all fields\", \"alerta-error\");\r\n    return;\r\n  }\r\n\r\n  // Password minimo de 6 caracteres\r\n  if (password.length < 6) {\r\n    mostrarAlerta(\r\n      \"Password must be at least 6 characters long\",\r\n      \"alerta-error\"\r\n    );\r\n    return;\r\n  }\r\n\r\n  // Los 2 passwords son iguales\r\n  if (password !== confirm) {\r\n    mostrarAlerta(\"Los passwords no son iguales\", \"alerta-error\");\r\n    return;\r\n  }\r\n\r\n  // Pasarlo al action\r\n  agregarUsuario({\r\n    name,\r\n    email,\r\n    password\r\n  });\r\n  getUsers();\r\n};\r\n \r\nreturn (\r\n  <div className=\"col\">\r\n    {alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div>\r\n      ) : null}\r\n  <h1> ADD MEMBER </h1>\r\n\r\n        <form \r\n        onSubmit={onSubmit}>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              //value={name}\r\n              //onChange={onChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              //value={email}\r\n              //onChange={onChange}\r\n/>\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\" Password\"\r\n              //value={password}\r\n             // onChange={onChange}\r\n/>\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"confirm\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirm\"\r\n              name=\"confirm\"\r\n              placeholder=\"Repeat Password\"\r\n              //onChange={onChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primario btn-block\"\r\n              disabled={cargando}>\r\n            {cargando ? \"Registering...\" : \"Add member\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default AddMember;","import React,{ useContext } from 'react';\r\nimport authContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst Member = ( {usuario,currentId} ) => {\r\n\r\n    const AuthContext = useContext(authContext);\r\n    const { getUsers, deleteMember } = AuthContext;\r\n\r\nconst memberDelete = id => {\r\n        deleteMember(id);\r\n        getUsers();\r\n  }\r\n\r\nif (usuario._id === currentId ){\r\n  return null;\r\n}\r\nelse {\r\nreturn (\r\n    <li className=\"tarea sombra\">\r\n    <p> {usuario.name} </p>\r\n    <div className=\"acciones\">\r\n        <button \r\n        type=\"button\"\r\n         className=\"btn btn-secundario\"\r\n         onClick= {()=> memberDelete(usuario._id)} >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </li>\r\n);\r\n}\r\n}\r\nexport default Member;","import React, { Fragment, useContext, useEffect} from \"react\";\r\nimport authContext from \"../../context/autenticacion/authContext\";\r\nimport Member from \"./Member\";\r\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\nconst MembersList = ({id}) => {\r\n   // obtener las tareas del proyecto\r\n   const AuthContext = useContext(authContext);\r\n   const { usuarios, getUsers } = AuthContext;\r\n\r\n    useEffect(() => {\r\n    getUsers();\r\n    // eslint-disable-next-line\r\n}, []); \r\n \r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"itemName\"> Members </h2>\r\n      <ul className=\"listado-tareas\">\r\n        <TransitionGroup> \r\n          {usuarios.map(usuario => \r\n          <CSSTransition\r\n          key={usuario._id} // el key se mueve hasta aca pq es el primer hijo de la iteracion\r\n          timeout={200}\r\n         >\r\n            <Member\r\n            usuario={usuario} \r\n            currentId = {id}\r\n            /> \r\n          </CSSTransition>\r\n            )}\r\n        </TransitionGroup>\r\n      </ul>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MembersList;\r\n","import { createContext } from 'react';\r\n\r\nconst itemContext = createContext();\r\n\r\nexport default itemContext;","import {createContext} from 'react';\r\nconst chartContext = createContext();\r\n\r\nexport default chartContext;","import React,{ useContext } from 'react';\r\nimport itemContext from '../../context/items/itemContext';\r\nimport chartContext from '../../context/charts/chartContext';\r\nconst Item = ({item,ai}) => {\r\n\r\n     // Obtener el state del formulario\r\n  const itemsContext = useContext(itemContext);\r\n  const { currentItem } = itemsContext;\r\n\r\n  // obtener la funcion del context de tarea\r\n  const chartsContext = useContext(chartContext);\r\n    const { getCharts } = chartsContext;\r\n    \r\n  // funcion para cargar item actual\r\n  const selectItem = id => {\r\n        currentItem(id); // fijar un item actual\r\n        getCharts(id); // filtrar las tareas segun item\r\n  }\r\n    return ( \r\n      <li className=\"sub-menu\">\r\n        { item.href === \"#\" && !ai ? \r\n      <a \r\n            href=\"#\"\r\n            className=\"btn btn-primario btn-block\" \r\n            onClick = {()=> selectItem(item._id)}>\r\n                {item.name}\r\n            </a> \r\n         : null }\r\n\r\n{ item.href !== \"#\" && ai ?\r\n      <a \r\n     className=\"btn btn-primario btn-block\" \r\nhref={item.href}\r\n    >\r\n      {item.name}\r\n</a>\r\n: null\r\n}\r\n    </li>\r\n      \r\n     );\r\n}\r\n \r\nexport default Item;","import React from 'react';\r\nimport Chart from 'chart.js';\r\n\r\nclass LineChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.chartRef = React.createRef();\r\n    }\r\n  \r\n    componentDidUpdate() {\r\n      this.myChart.data.labels = this.props.data.map(d => d.label);\r\n      this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\r\n      this.myChart.update();\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.chartRef.current, {\r\n        type: 'line',\r\n        options: {\r\n          responsive: true,\r\n\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n              ticks: {\r\n                autoSkip: true,\r\n                maxTicksLimit: 15\r\n            }\r\n          }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  min: 0\r\n                },\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: this.props.unit\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        data: {\r\n          labels: this.props.data.map(d => d.label),\r\n          datasets: [{\r\n            label: this.props.title,\r\n            data: this.props.data.map(d => d.value),\r\n            fill: 'none',\r\n            backgroundColor: this.props.color,\r\n            pointRadius: 2,\r\n            borderColor: this.props.color,\r\n            borderWidth: 1,\r\n            lineTension: 0\r\n          }]\r\n        }\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.chartRef} style={{height:\"200px\",width:\"300px\"}} />;\r\n    }\r\n  }\r\n\r\n  export default LineChart;","import React from 'react';\r\nimport Chart from 'chart.js';\r\n\r\n// BarChart\r\nclass BarChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    this.myChart.data.labels = this.props.data.map(d => d.label);\r\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\r\n    this.myChart.update();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.myChart = new Chart(this.canvasRef.current, {\r\n      type: 'bar',\r\n      options: {\r\n\t      maintainAspectRatio: false,\r\n        scales: {\r\n          xAxes: [{\r\n            ticks: {\r\n                autoSkip: true,\r\n                maxTicksLimit: 14\r\n            }\r\n        }],\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                min: 0\r\n              },\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: this.props.unit\r\n              }\r\n            },\r\n          ]\r\n        }\r\n      },\r\n      data: {\r\n        labels: this.props.data.map(d => d.label),\r\n        datasets: [{\r\n          label: this.props.title,\r\n          data: this.props.data.map(d => d.value),\r\n          backgroundColor: this.props.color\r\n        }]\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <canvas ref={this.canvasRef} />\r\n    );\r\n  }\r\n}\r\nexport default BarChart;","\r\nimport React, { Component } from \"react\";\r\n\r\nexport class Card extends Component {\r\n  render() {\r\n    return (\r\n      <div className={\"card\" + (this.props.plain ? \" card-plain\" : \"\")}>\r\n        <div className={\"header\" + (this.props.hCenter ? \" text-center\" : \"\")}>\r\n          <h4 className=\"title\">{this.props.title}</h4>\r\n          <p className=\"category\">{this.props.category}</p>\r\n        </div>\r\n        <div\r\n          className={\r\n            \"content\" +\r\n            (this.props.ctAllIcons ? \" all-icons\" : \"\") +\r\n            (this.props.ctTableFullWidth ? \" table-full-width\" : \"\") +\r\n            (this.props.ctTableResponsive ? \" table-responsive\" : \"\") +\r\n            (this.props.ctTableUpgrade ? \" table-upgrade\" : \"\")\r\n          }\r\n        >\r\n          {this.props.content}\r\n\r\n          <div className=\"footer\">\r\n            {this.props.legend}\r\n            {this.props.stats != null ? <hr /> : \"\"}\r\n            <div className=\"stats\">\r\n              <i className={this.props.statsIcon} /> {this.props.stats}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\r\nimport Card from \"./Card\";\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nconst ChartTable = (charts) => {\r\nreturn (\r\n<div className=\"content\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"Data\"\r\n                category=\"\"\r\n                ctTableFullWidth\r\n                ctTableResponsive\r\n                content={\r\n                  <Table striped hover>\r\n                    <thead>\r\n                      <tr>\r\n                     <th>Date</th>\r\n                     <th>Value</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {charts.charts.map((chart) => {\r\n                        return (\r\n                          <tr\r\n                          key={uuidv4()}\r\n                          >\r\n                            <td> {chart.label} </td>\r\n                            <td> {chart.value} </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </Table>\r\n                }\r\n              />\r\n            </Col>\r\n            </Row>\r\n            </Container>\r\n            </div>\r\n);\r\n}\r\nexport default ChartTable;","import React, {  useContext,  useState } from \"react\";\r\nimport chartContext from \"../../context/charts/chartContext\";\r\nimport {Dropdown, Row, Col, Container } from \"react-bootstrap\";\r\nimport LineChart from \"./LineChart\";\r\nimport BarChart from \"./BarChart\";\r\nimport Card from \"./Card\";\r\nimport uuidv4 from 'uuid/v4';\r\nimport ChartTable from \"./ChartTable\";\r\nimport axios from 'axios';\r\nfunction convert(str) {\r\n  var date = new Date(str),\r\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n    day = (\"0\" + date.getDate()).slice(-2);\r\n  return [date.getFullYear(), mnth, day].join(\"-\");\r\n}\r\n// Data generation\r\nfunction getArray(dataset, title) {\r\n\r\n  let data = [];\r\n  let delivering = false;\r\n  if (!delivering) {\r\n    for (var i = 0; i < dataset.length; i++) {\r\n        // unify same dates\r\n      let repeated = false;\r\n      if (data){\r\n        for(var j = 0 ; j<data.length ; j++){\r\n          if(data[j].label === convert(dataset[i].date)){\r\n            if (title === \"CHW TIN\"){\r\n              data[j].value = data[j].value;\r\n              repeated = true;\r\n            }\r\n            if (title === \"CHW TOUT\") {\r\n              data[j].value = data[j].value;\r\n              repeated = true;\r\n            }\r\n            if (title === \"SA T\") {\r\n              data[j].value = data[j].value;\r\n              repeated = true;\r\n            }\r\n            if (title === \"SPACE T\") {\r\n              data[j].value = data[j].value;\r\n              repeated = true;  \r\n            }   if (title === \"OA T\") {\r\n              data[j].value = data[j].value;\r\n              repeated = true;\r\n            }\r\n            if (title === \"SA DUCT ST PRESSURE\") {\r\n              data[j].value = data[j].value;\r\n              repeated = true;\r\n            }\r\n            if (title === \"OAT RH\") {\r\n              data[j].value = data[j].value;\r\n              repeated = true;\r\n            }\r\n            if (title === \"Space RH\") {\r\n              data[j].value = data[j].value;\r\n              repeated = true; \r\n            }\r\n          }\r\n      }\r\n    }\r\n    if(!repeated){\r\n      if (title === \"CHW TIN\") {\r\n        data.push({\r\n          label: convert(dataset[i].date),\r\n          value: dataset[i].chwtin\r\n        });\r\n      }\r\n      if (title === \"CHW TOUT\") {\r\n        data.push({\r\n          label: convert(dataset[i].date),\r\n          value: dataset[i].chwtout\r\n        });  \r\n      }\r\n      if (title === \"SA T\") {\r\n        data.push({\r\n          label: convert(dataset[i].date),\r\n          value: dataset[i].sat\r\n        });  \r\n      }\r\n      if (title === \"SPACE T\") {\r\n        data.push({\r\n          label: convert(dataset[i].date),\r\n          value: dataset[i].spacet\r\n        });  \r\n      }   if (title === \"OA T\") {\r\n        data.push({\r\n          label: convert(dataset[i].date),\r\n          value: dataset[i].oat\r\n        });  \r\n      }\r\n      if (title === \"SA DUCT ST PRESSURE\") {\r\n        data.push({\r\n          label: convert(dataset[i].date),\r\n          value: dataset[i].saductstpressure\r\n        });  \r\n      }\r\n      if (title === \"OAT RH\") {\r\n        data.push({\r\n          label: convert(dataset[i].date),\r\n          value: dataset[i].oatrh\r\n        });  \r\n      }\r\n      if (title === \"Space RH\") {\r\n        data.push({\r\n          label: convert(dataset[i].date),\r\n          value: dataset[i].spacerh\r\n        });  \r\n      }\r\n    }\r\n    }\r\n  } else {\r\n    // generate random data\r\n    let dates = getRandomDateArray(5);\r\n    for (var i = 0; i < dates.length; i++) {\r\n      data.push({\r\n        chwtin: Math.round(10 + 80 * Math.random()),\r\n        chwtout:  Math.round(10 + 80 * Math.random()),\r\n        chwvalveposition:  Math.round(20 + 80 * Math.random()),\r\n        chwfr:  Math.round(20 + 80 * Math.random()),\r\n        safanfrequency:  Math.round(20 + 80 * Math.random()),\r\n        rafanfrequency:  Math.round(20 + 80 * Math.random()),\r\n        sat:  Math.round(20 + 80 * Math.random()),safr:  Math.round(20 + 80 * Math.random()),\r\n        saductstpressure:  Math.round(20 + 80 * Math.random()),\r\n        safanfrequency:  Math.round(20 + 80 * Math.random()),\r\n        spacet:  Math.round(20 + 80 * Math.random()),\r\n        ahucop:Math.round(20 + 80 * Math.random()),\r\n      totalpower: Math.round(20 + 80 * Math.random()),\r\n      energymonthly:  Math.round(200000 + 80 * Math.random()),\r\n        oat:  Math.round(20 + 80 * Math.random()),\r\n        spacerh:  Math.round(20 + 80 * Math.random()),\r\n        oatrh:  Math.round(20 + 80 * Math.random()),\r\n        vav1fr:  Math.round(20 + 80 * Math.random()),\r\n        vav2fr:  Math.round(20 + 80 * Math.random()),\r\n        vav3fr:  Math.round(20 + 80 * Math.random()),\r\n        vav4fr:  Math.round(20 + 80 * Math.random()),\r\n        oafr:  Math.round(20 + 80 * Math.random()),\r\n        oadamperopen:  Math.round(20 + 80 * Math.random()),\r\n        space:  Math.round(20 + 80 * Math.random())\r\n      });\r\n    }\r\n     axios.post('http://localhost:4000/api/dataset', data);\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction getTemperature(dataset){\r\n  let data = [];\r\n   data.push({\r\n   label: \"SA T\" ,\r\n   value:  dataset[dataset.length -1].sat\r\n })\r\n data.push({\r\n  label: \"Space T\" ,\r\n  value:  dataset[dataset.length -1].spacet\r\n})\r\ndata.push({\r\n  label: \"CHW TIN\" ,\r\n  value:  dataset[dataset.length -1].chwtin\r\n})\r\ndata.push({\r\n  label: \"CHW TOUT\" ,\r\n  value:  dataset[dataset.length -1].chwtout\r\n})\r\ndata.push({\r\n  label: \"OA T\" ,\r\n  value:  dataset[dataset.length -1].oat\r\n})\r\n return data;\r\n}\r\nfunction getPressures(dataset){\r\n  let data = [];\r\n  data.push({\r\n  label: \"SA DUCT ST PRESSURE\" ,\r\n  value:  dataset[dataset.length -1].saductstpressure\r\n})\r\nreturn data;\r\n}\r\n\r\nfunction getHumidity(dataset){\r\n  let data = [];\r\ndata.push({\r\n label: \"SPACE RH\" ,\r\n value:  dataset[dataset.length -1].spacerh\r\n})\r\ndata.push({\r\n label: \"OAT RH\" ,\r\n value:  dataset[dataset.length -1].oatrh\r\n})\r\nreturn data;\r\n}\r\n\r\n\r\n\r\n\r\nfunction getRandomDateArray(numItems) {\r\n  // Create random array of objects (with date)\r\n  let data = [];\r\n  let baseTime = new Date(\"2020-03-01T00:00:00\").getTime();\r\n  let dayMs = 24 * 60 * 60 * 1000;\r\n  for (var i = 0; i < numItems; i++) {\r\n    data.push({\r\n      time: new Date(baseTime + i * dayMs),\r\n      value: Math.round(20 + 80 * Math.random())\r\n    });\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction randomFeeds(dataset, category) {\r\n  let feeds = [];\r\n  if (category === \"TEMPERATURE\") {\r\n    feeds.push({\r\n      title: \"CHW TOUT\",\r\n      unit: \"ºC\",\r\n      data: getArray(dataset, \"CHW TOUT\"),\r\n      color: \"#9368E9\"\r\n    });\r\n\r\n    feeds.push({\r\n      title: \"CHW TIN\",\r\n      unit: \"ºC\",\r\n      data: getArray(dataset, \"CHW TIN\"),\r\n      color: \"#FFA534\"\r\n    });\r\n    feeds.push({\r\n      title: \"OA T\",\r\n      data: getArray(dataset, \"OA T\"),\r\n      color: \"#87CB16\",\r\n      unit: \"ºC\"\r\n    });\r\n    feeds.push({\r\n      title: \"SPACE T\",\r\n      unit: \"ºC\",\r\n      data: getArray(dataset, \"SPACE T\"),\r\n      color: \"cd0000\"\r\n    });\r\n    feeds.push({\r\n      title: \"SA T\",\r\n      unit: \"ºC\",\r\n      data: getArray(dataset, \"SA T\"),\r\n      color: \"#1DC7EA\"\r\n    });\r\n  }\r\n  if (category === \"PRESSURE\") {\r\n    feeds.push({\r\n      title: \"SA DUCT ST PRESSURE\",\r\n      unit: \"Pa\",\r\n      data: getArray(dataset, \"SA DUCT ST PRESSURE\"),\r\n      color: \"#cd0000\"\r\n    });\r\n  }\r\n  if (category === \"HUMIDITY\") {\r\n    feeds.push({\r\n      title: \"Space RH\",\r\n      unit: \"RH\",\r\n      data: getArray(dataset, \"Space RH\"),\r\n      color: \"#cd0000\"\r\n    });\r\n    feeds.push({\r\n      title: \"OAT RH\",\r\n      unit: \"RH\",\r\n      data: getArray(dataset, \"OAT RH\"),\r\n      color: \"#cd0000\"\r\n    });\r\n  }\r\n \r\n  return feeds;\r\n}\r\n\r\n\r\nconst ChartsList = () => {\r\n  \r\n\r\n  const chartsContext = useContext(chartContext);\r\n  const { getDataset, dataset } = chartsContext;\r\n\r\n  const [click, handleClick] = useState(null);\r\n  const [selectedIndex, handleClickCard] = useState(null);\r\n  const [category, saveCategory] = useState(null);\r\nlet feeds =  randomFeeds(dataset, category);\r\n\r\n\r\n  if (!dataset){\r\n    getDataset();\r\n}\r\n\r\n\r\nconst handleClickTemperature = e => {\r\n  e.preventDefault();\r\n  saveCategory(\"TEMPERATURE\");\r\n  handleClick(true);\r\n} \r\n\r\nconst handleClickChart = i => {\r\n  handleClickCard(i);\r\n}\r\nconst backToBar = e => {\r\n  e.preventDefault();\r\n  handleClickCard(null);\r\n}\r\nconst handleClickPressure = e => {\r\n  e.preventDefault();\r\n  saveCategory(\"PRESSURE\");\r\n  handleClick(true);\r\n}\r\n\r\nconst handleClickHumidity = e => {\r\n  e.preventDefault();\r\n  saveCategory(\"HUMIDITY\");\r\n  handleClick(true);\r\n}\r\n\r\n\r\n  setTimeout(() => {\r\n    feeds = (randomFeeds(dataset, category));\r\n  }, 360000);\r\n\r\n\r\n\r\nif (selectedIndex!== null) {\r\n  return (\r\n    <Col>\r\n                <button \r\n                className=\"btn btn-secundario\"\r\n                onClick={backToBar}> Back </button>\r\n                <Card\r\n                statsIcon=\"fa fa-clock-o\"\r\n                title=\"feed\"\r\n                stats=\"30 minutes ago\"\r\n                content={\r\n                  <div\r\n                    id=\"chartPreferences\"\r\n                    className=\"ct\"\r\n                  >\r\n                    <LineChart data={feeds[selectedIndex].data} title={feeds[selectedIndex].title} color={feeds[selectedIndex].color}\r\n                    unit={feeds[selectedIndex].unit} />\r\n                  </div>\r\n                }\r\n              /> \r\n             <ChartTable charts = {feeds[selectedIndex].data} />\r\n              </Col>\r\n  );\r\n  }\r\nelse {\r\n  return (\r\n    <main style={{ paddingTop: 20 }} >\r\n    <Container>\r\n    <div className=\"row nopadding\">\r\n      <Dropdown>\r\n    {category === \"TEMPERATURE\" ? <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">Temperature  </Dropdown.Toggle>\r\n    : category === \"PRESSURE\" ? <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">Pressure  </Dropdown.Toggle>\r\n      : category === \"HUMIDITY\" ? <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\"> Humidity </Dropdown.Toggle> : \r\n      <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">Select Group</Dropdown.Toggle>}\r\n \r\n  <Dropdown.Menu>\r\n    <Dropdown.Item onClick={handleClickTemperature}>Temperature</Dropdown.Item>\r\n    <Dropdown.Item onClick={handleClickPressure}>Pressure</Dropdown.Item>\r\n    <Dropdown.Item onClick={handleClickHumidity}>Humidity</Dropdown.Item>\r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n     \r\n              { click ? \r\n                   <Row>\r\n                    {feeds.map((feed,index) => (\r\n                    <Col\r\n                    key={uuidv4()}\r\n                    onClick={()=> handleClickChart(index)} >\r\n                     <Card\r\n                     statsIcon=\"fa fa-clock-o\"\r\n                     title={feed.title}\r\n                     stats=\"30 minutes ago\"\r\n                     key={uuidv4()}\r\n                     content={\r\n                       <div\r\n                         id=\"chartPreferences\"\r\n                         className=\"ct-chart ct-perfect-fourth\"\r\n                       >\r\n                         <BarChart \r\n                         data = {feed.data} \r\n                         title = {feed.title}\r\n                        color = {feed.color}\r\n                        unit = {feed.unit}\r\n                        />\r\n                       </div>\r\n                     }\r\n                   />\r\n                   </Col>\r\n                         ))}\r\n                         </Row>\r\n                      : null}\r\n              </div>     \r\n              </Container>\r\n              </main>\r\n  );\r\n\r\n}\r\n}\r\nexport default ChartsList;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport itemContext from '../../context/items/itemContext';\r\nimport Item from './Item';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { Link } from \"react-router-dom\";\r\nimport ChartList from \"../charts/ChartsList\"\r\n\r\nconst ItemsList = ({ai}) => {\r\n\r\n  // extraer proyectos de state inicial\r\n  const itemsContext = useContext(itemContext);\r\n  const { items, getItems, currentItem } = itemsContext;\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n  return (\r\n\r\n    <ul className=\"links\">\r\n           <TransitionGroup>\r\n           {items.map(item => (\r\n               <CSSTransition\r\n               key={item._id}\r\n               timeout={200}\r\n               classNames=\"proyecto\"\r\n               >\r\n                    <Item\r\n                    item={item}\r\n                    ai = {ai}\r\n                />\r\n               </CSSTransition>\r\n            ))}\r\n           </TransitionGroup>\r\n           <li>\r\n        </li> \r\n        \r\n\r\n        </ul>\r\n  );\r\n}\r\n\r\nexport default ItemsList;","import React, {  useContext } from \"react\";\r\nimport ItemsList from '../items/ItemsList';\r\nimport DashboardContext from \"../../context/dashboard/dashboardContext\";\r\n\r\nconst Dashboard = () => {\r\n  const dashboardContext = useContext(DashboardContext);\r\n  const { dashboard } = dashboardContext;\r\n\r\n  if (dashboard){\r\n  return (\r\n<aside>\r\n      <div id=\"sidebar\" className=\"nav-collapse \">\r\n        <ul className=\"sidebar-menu\">\r\n          <li className=\"active\">\r\n            <a className=\"btn btn-primario btn-block\" href=\"/\">\r\n                          <i className=\"icon_house_alt\"></i>\r\n                          <span>Dashboard</span>\r\n                      </a>\r\n          </li>\r\n         <ItemsList \r\n         ai = {false}\r\n         />\r\n         <li className=\"active\">\r\n            <a className=\"btn btn-primario btn-block\" href=\"/\">\r\n                          <i className=\"icon_house_alt\"></i>\r\n                          <span>Artificial Intelligence</span>\r\n                      </a>\r\n          </li>\r\n          <ItemsList\r\n          ai = {true}\r\n          />\r\n        </ul>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\nelse {\r\n  return null;\r\n}\r\n}\r\nexport default Dashboard;\r\n","import React,{useContext, useEffect} from \"react\";\r\nimport Bar from \"../layout/Bar\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport AddMember from \"../auth/AddMember\";\r\nimport MembersList from \"../auth/MembersList.js\";\r\nimport Dashboard from \"../layout/Dashboard\";\r\nimport DashboardContext from \"../../context/dashboard/dashboardContext\";\r\n\r\nconst Administration = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuario, usuarioAutenticado } = authContext; \r\n  const dashboardContext = useContext(DashboardContext);\r\n  const { dashboard } = dashboardContext;\r\n\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n    // eslint-disable-next-line\r\n}, [])\r\nlet name = ' ';\r\nlet admin = false;\r\nlet id = ' ';\r\nif (usuario){\r\n  admin = usuario.admin;\r\n  name = usuario.name;\r\n  id = usuario._id;\r\n}\r\n  return (\r\n    <div className=\"row nopadding\">\r\n    <div className=\"col-md-12 nopadding\">\r\n    <Bar \r\n    />\r\n    </div>\r\n    {dashboard ? \r\n    <div className=\"col-md-3 nopadding\">\r\n      <Dashboard \r\n      /> \r\n      </div> \r\n      : null }\r\n    { admin ? \r\n        <div className=\"col-md-2 nopadding\">\r\n      <MembersList\r\n      id = {id}\r\n      /> \r\n      </div> :\r\n       null\r\n}\r\n      <div className=\"col-md-7\">\r\n        <main>\r\n        <li className=\"tarea sombra\">\r\n        <p>{ name } : { admin ? <span>Administrator</span> : null } </p>\r\n        { admin ? \r\n        <div className=\"acciones\">\r\n        <AddMember />\r\n        </div>\r\n        :\r\n        <p> User </p>\r\n        }\r\n         </li>\r\n        </main>\r\n      </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Administration;","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL : process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios; ","/* eslint-disable  */\r\nimport React, { Component } from \"react\";\r\nimport { Form, Row, Col, Button, Alert, Container } from \"react-bootstrap\";\r\nimport clienteAxios from '../../config/axios';\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isSending: false,\r\n      isSent: false,\r\n      errors: []\r\n    };\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    const formData = new FormData(form);\r\n    this.setState({ isSending: true });\r\n        \r\n       const message = this.props.alarm.message + '. ';\r\n        const id = this.props.alarm._id;\r\n        await clienteAxios.post('/api/alarms', {\r\n            message: `Hi! This alarm was assigned to you: ${message}`,\r\n            email: formData.get(\"email\"),\r\n            id: id\r\n          })\r\n          .then(response => {\r\n            if (response.data === \"Message sent\") {\r\n                form.reset();\r\n                this.setState({ isSent: true });\r\n      \r\n                setTimeout(() => {\r\n                  this.setState({ isSent: false });\r\n                  //this.props.history.push(\"/dashboard\"); // Redirect to home page after sending message\r\n                }, 14000);\r\n              } else {\r\n                this.setState({ errors: response.data });\r\n                const { errors } = this.state;\r\n                let time = errors.length * 3000;\r\n                setTimeout(() => {\r\n                  this.setState({ errors: [] });\r\n                }, time);\r\n              }\r\n            })\r\n            .catch(error => console.log(error))\r\n            .finally(() => this.setState({ isSending: false }));\r\n  };\r\n\r\n  showContactForm() {\r\n    const { isSending, isSent, errors } = this.state;\r\n\r\n    if (errors.length > 0) {\r\n      return errors.map((error, i) => {\r\n        return (\r\n          <Alert key={i} variant=\"danger\">\r\n            {error.msg}\r\n          </Alert>\r\n        );\r\n      });\r\n    }\r\n\r\n    if (isSent) {\r\n      return (\r\n        <Row className=\"h-100 justify-content-center align-items-center\">\r\n          <Col className=\"text-center\" md={12}>\r\n            <Alert variant=\"success\">MESSAGE SENT (Refresh page to see changes) </Alert>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    /*\r\n     <Form.Control\r\n            name=\"email\"\r\n            id=\"email\"\r\n            disabled={isSending}\r\n            type=\"email\"\r\n            placeholder=\"Enter an email\"\r\n            > \r\n            <Form.Group as={Col}>\r\n       \r\n  \r\n        </Form.Group>\r\n            */\r\n    return (\r\n      <Form className=\"formContact\" onSubmit={this.handleSubmit}>\r\n        <Form.Group as={Col}>\r\n       \r\n  \r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"pl-3\">\r\n          <Button  disabled={isSending}>\r\n          <a href={`mailto:?subject=ALARM ASSIGNED TO YOU me&body=This alarm was assigned to you: ${this.props.alarm.message}`}>\r\n      </a>\r\n            {isSending ? \"Sending...\" : \"Send Message\"}\r\n          </Button>\r\n        </Form.Group>\r\n\r\n      </Form>\r\n    );\r\n  }\r\n  render() {\r\n    return <Container className=\"h-100\">{this.showContactForm()}</Container>;\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\r\nimport Card from \"../charts/Card\";\r\nimport uuidv4 from 'uuid/v4';\r\nimport Contact from './Contact';\r\n\r\nconst AlarmsTable = (alarms) => {\r\n  \r\nfunction convert(str) {\r\n  var date = new Date(str),\r\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n    day = (\"0\" + date.getDate()).slice(-2);\r\n    var hours = date.getHours();\r\n  var minutes = date.getMinutes();\r\n  var secs = date.getSeconds();\r\n  var ampm = hours >= 12 ? 'pm' : 'am';\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12; // the hour '0' should be '12'\r\n  minutes = minutes < 10 ? '0'+minutes : minutes;\r\n  var strTime = [date.getFullYear(), mnth, day].join(\"-\") + ' ' +hours + ':' + minutes + ' ' + secs + ' ' + ampm;\r\n  return strTime;\r\n}\r\nreturn (\r\n<div className=\"content\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"Alarms\"\r\n                category=\"\"\r\n                ctTableFullWidth\r\n                ctTableResponsive\r\n                content={\r\n                  <Table striped hover>\r\n                    <thead>\r\n                      <tr>\r\n                     <th>Alarm Description</th>\r\n                     <th>Start</th>\r\n                     <th>Status</th>\r\n                     <th>Close Date</th>\r\n                     <th>Assign To</th>\r\n                     <th>Assign Date</th>\r\n\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {alarms.alarms.map((alarm) => {\r\n                        return (\r\n                          <tr\r\n                          key={uuidv4()}\r\n                          >\r\n                            <td> {alarm.message} </td>\r\n                            <td> {convert(alarm.start)} </td>\r\n                            <td> {alarm.status} </td>\r\n                            <td> {alarm.closeDate} </td>\r\n                            {alarm.assignTo ? \r\n                            <td> {alarm.assignTo} </td> :\r\n                            <td> \r\n                              <Contact \r\n                              alarm={alarm}\r\n                            />\r\n                            </td>\r\n                      }\r\n                         <td> { alarm.assignDate ?  convert(alarm.assignDate)  : null } </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </Table>\r\n                }\r\n              />\r\n            </Col>\r\n            </Row>\r\n            </Container>\r\n            </div>\r\n);\r\n}\r\nexport default AlarmsTable;","import React, { useContext } from \"react\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport alarmContext from \"../../context/alarms/alarmContext\";\r\nimport {   Col} from \"react-bootstrap\";\r\nimport AlarmsTable from \"./AlarmsTable\";\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\n\r\n\r\nfunction convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n      var hours = date.getHours();\r\n    var minutes = date.getMinutes();\r\n    var secs = date.getSeconds();\r\n    var ampm = hours >= 12 ? 'pm' : 'am';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? '0'+minutes : minutes;\r\n    var strTime = [date.getFullYear(), mnth, day].join(\"-\") + ' ' +hours + ':' + minutes + ' ' + secs + ' ' + ampm;\r\n    return strTime;\r\n  }\r\n  \r\nfunction calculateAlarms(dataset,a) {\r\n    // Create random array of objects\r\n    let alarms = [];\r\n    var today = new Date();\r\n    let maxDate;\r\n\r\n    if (a.length>0){\r\n        for (var j = 0 ; j < a.length ; j++){\r\n            if (!maxDate || a[j].start > maxDate){\r\n                maxDate = a[j].start;\r\n            }\r\n        }\r\n    }\r\n    else{\r\n        maxDate = today;\r\n    }\r\n    for (var i=0 ; i < dataset.length ; i++){\r\n        if (convert(dataset[i].date) > convert(maxDate)){\r\n            console.log(convert(dataset[i].date) +\"y \"+ convert(maxDate));\r\n        if ( dataset[i].saductstpressure <= 90 &&  dataset[i].safanfrequency < 60 ){\r\n             alarms.push({\r\n                message: \"SA Fan Unable to Reach Maximum Frequency\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n        if ( dataset[i].spacet >= 24 &&  dataset[i ].safanfrequency === 60 &&  dataset[i ].chwvalveposition < 100){\r\n            alarms.push({\r\n                message: \"CHW Valve Not Fully Open\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n        if ( dataset[i].spacet <= 22 &&  dataset[i ].safanfrequency === 40 &&  dataset[i ].chwvalveposition > 0){\r\n            alarms.push({\r\n                message: \"CHW Valve Not Fully Closed\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n        if ( dataset[i].saductstpressure >= 110 &&  dataset[i ].safanfrequency > 40 ){\r\n            alarms.push({\r\n                message: \"SA Fan Unable to Reach Minimum Frequency\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n        if ( dataset[i].saductstpressure <= 90 &&  dataset[i ].safr < 1000){\r\n            alarms.push({\r\n                message: \"SA Fan Flow Rate Unable to Reach Maximum\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n        if ( dataset[i].saductstpressure >= 110 &&  dataset[i ].safr > 600){\r\n            alarms.push({\r\n                message:  \"SA Fan Flow Rate Unable to Reach Minimum\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n\r\n        if ( dataset[i].space <= 400 &&  dataset[i ].oadamperopen > 0){\r\n            alarms.push({\r\n                message:   \"OA Damper Unable to Reach Minimum Position\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n        }\r\n        if ( dataset[i].space >= 2400 &&  dataset[i ].oadamperopen < 30){\r\n            alarms.push({\r\n                message:   \"OA Damper Unable to Reach Maximum Position\",\r\n                status: \"Open\",\r\n                start: dataset[i].date,\r\n                assignTo: null,\r\n                assignDate: null\r\n            })\r\n    }\r\n    }\r\n}\r\n      return alarms;\r\n    }\r\nconst AlarmsList = (props) => {\r\n \r\n    // const { createAlarm } = useContext(alarmContext);\r\n    const  alarms = props.alarms;\r\n    const dataset = props.dataset;\r\n\r\n    let newAlarms = calculateAlarms(dataset, alarms);\r\n\r\n    const createAlarm= async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/alarms/addAlarms',datos);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }        \r\n    }\r\n    if (newAlarms.length > 0){\r\n        for (var i = 0 ; i < newAlarms.length ; i++){\r\n            let alarm = {\r\n                     message: newAlarms[i].message,\r\n                    status: newAlarms[i].status,\r\n                    start: new Date(newAlarms[i].start),\r\n                    assignTo: null,\r\n                    assignDate: null\r\n            }\r\n            createAlarm(alarm);\r\n        }\r\n        newAlarms = [];\r\n}\r\n\r\n   \r\n    // run the function on page init \r\n    setTimeout(() => {\r\n        if (alarms.length > 0 ){    \r\n            calculateAlarms(dataset);\r\n        }    // execute it one time to not render every time the component\r\n    }, 3600000);\r\n  \r\n    \r\n    return (\r\n        <Col>\r\n            <AlarmsTable \r\n            alarms={alarms}\r\n            />\r\n        </Col>\r\n    );\r\n  };\r\n  \r\n  export default AlarmsList;\r\n  ","/*!\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n* Coded by Creative Tim\r\n=========================================================\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nexport class StatsCard extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`card card-stats bg-${this.props.bg}`}>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col xs={6}>\r\n              <div className=\"numbers\">\r\n                <p>{this.props.statsText1}</p>\r\n                <p> {this.props.statsValue1} {this.props.unit} </p>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <div className=\"numbers\">\r\n                <p>{this.props.statsText2}</p>\r\n                <p> {this.props.statsValue2} {this.props.unit} </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"footer\">\r\n            <hr />\r\n            { !isNaN(this.props.amount) && isFinite(this.props.amount) ?\r\n            <span>Change: {this.props.amount} %</span>\r\n            :\r\n            null }\r\n            <hr />\r\n            <div className=\"stats\">\r\n              {this.props.statsIcon} {this.props.statsIconText}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatsCard;","import React,{ useContext } from 'react';\r\nimport chartContext from \"../../context/charts/chartContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport { Row, Container} from \"react-bootstrap\";\r\nimport Card from \"../charts/Card\";\r\nimport LineChart from \"../charts/LineChart\";\r\nimport BarChart from \"../charts/BarChart\";\r\nimport StatsCard from './StatsCard';\r\nimport moment from 'moment';\r\n\r\nfunction convert(str) {\r\n  var date = new Date(str),\r\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n    day = (\"0\" + date.getDate()).slice(-2);\r\n  return [date.getFullYear(), mnth, day].join(\"-\");\r\n}\r\n\r\nfunction getEnergyMonthly(dataset){\r\n  let thisYearEnergy=0;\r\n  let lastYearEnergy = 0;\r\n   let monthlyEnergyAcum=0;\r\n   let lastMonthEnergy = 0;\r\n   let weeklyEnergyAcum = 0;\r\n   let lastWeekEnergy = 0;\r\n   var today = new Date();\r\n   var currentDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n   for (var i = 0 ; i < dataset.length ; i++){\r\n    var date = new Date(dataset[i].date);\r\n\r\n\r\n  //today.getmonth returns month-1\r\n  if (date.getMonth() === today.getMonth()){\r\n      monthlyEnergyAcum =  monthlyEnergyAcum + dataset[i].energymonthly;\r\n  }\r\n  if(date.getMonth() === today.getMonth() -1 ){\r\n    lastMonthEnergy = lastMonthEnergy + dataset[i].energymonthly;\r\n  }\r\nvar now = moment();\r\nvar input = moment(dataset[i].date);\r\nvar lastWeek = moment().subtract(7,'days');\r\nvar lastYear = moment().subtract(1,'years');\r\nvar isThisWeek = (now.isoWeek() === input.isoWeek());\r\nvar isLastWeek = input.isoWeek() === lastWeek.isoWeek();\r\nvar isThisYear = (now.isoWeekYear() === input.isoWeekYear());\r\nvar isLastYear = (now.isoWeekYear() === lastYear.isoWeekYear());\r\n\r\nif ( isThisWeek) {\r\n   weeklyEnergyAcum = weeklyEnergyAcum + dataset[i].energymonthly;\r\n}\r\nif (isLastWeek){\r\n  lastWeekEnergy = lastWeekEnergy + dataset[i].energymonthly;\r\n}\r\nif (isThisYear){\r\n  thisYearEnergy = thisYearEnergy + dataset[i].energymonthly;\r\n}\r\nif(isLastYear){\r\n  lastYearEnergy = lastYearEnergy + dataset[i].energymonthly;\r\n}\r\n}\r\nlet yearlyAmount = thisYearEnergy/lastYearEnergy;\r\nlet monthlyAmount = monthlyEnergyAcum/lastMonthEnergy;\r\nlet weeklyAmount = weeklyEnergyAcum/lastWeekEnergy;\r\nlet data = {\r\n  thisYearEnergy : thisYearEnergy,\r\n  lastYearEnergy : lastYearEnergy,\r\n  monthlyEnergy : monthlyEnergyAcum,\r\n  lastMonthEnergy : lastMonthEnergy,\r\n  weeklyEnergy : weeklyEnergyAcum,\r\n  lastWeekEnergy : lastWeekEnergy,\r\n  yearlyAmount : yearlyAmount,\r\n  monthlyAmount :  monthlyAmount,\r\n  weeklyAmount : weeklyAmount\r\n}\r\nreturn data;\r\n  }\r\n  \r\n  \r\n  function getTotalEnergy(dataset){\r\n    let data = [];\r\n    for (var i = 0 ; i < dataset.length ; i++){\r\n      let repeated = false;\r\n      if (data){\r\n        for(var j = 0 ; j<data.length ; j++){\r\n          if(data[j].label === convert(dataset[i].date)){\r\n              data[j].value = data[j].value + dataset[i].energymonthly;\r\n              repeated = true;\r\n          }\r\n      }\r\n    }\r\n    if(!repeated){\r\n     data.push({\r\n     label: convert(dataset[i].date) ,\r\n     value:  dataset[i].energymonthly\r\n   })\r\n  }\r\n  }\r\n   return data;\r\n  };   \r\n  \r\n  \r\n  function getAhuCop(dataset){\r\n    let data = [];\r\n    for (var i = 0 ; i < dataset.length ; i++)\r\n     data.push({\r\n     label: convert(dataset[i].date) ,\r\n     value:  dataset[i].ahucop\r\n   })\r\n   return data;\r\n  };  \r\n\r\nconst EnergyDashboard = () => {\r\n    const chartsContext = useContext(chartContext);\r\n    const { getDataset, dataset } = chartsContext;\r\n    let ahucop = { };\r\n    let energy = { };\r\n    let totalEnergy = [];\r\n    let lastDate;\r\n    let minDate;\r\n \r\n    if (!dataset){\r\n      getDataset();\r\n  }\r\n  else{\r\n    energy = getEnergyMonthly(dataset);\r\n    if (dataset.length >0 ){\r\n    lastDate = dataset[dataset.length -1].date;\r\n    }\r\n    ahucop = getAhuCop(dataset);\r\n    totalEnergy = getTotalEnergy(dataset);\r\n  }\r\n\r\n    // setTimeout(() => {\r\n    //     energy = getEnergyMonthly(dataset);\r\n    //     lastDate = dataset[dataset.length -1].date;\r\n    //     ahucop = getAhuCop(dataset);\r\n    //   }, 3600000); // every half hour\r\n\r\n    return ( \r\n      <Container>\r\n        <Row>\r\n        <div className=\"col-3\">\r\n        <div className=\"row nopadding\">\r\n        <StatsCard \r\n          statsValue2= {energy.thisYearEnergy}\r\n          statsValue1= {energy.lastYearEnergy}\r\n          unit = \"KW-Hr\"\r\n          statsText2=\"This Year\"\r\n          statsText1=\"Last Year\"\r\n          amount={energy.yearlyAmount}\r\n          bg=\"success\"\r\n          bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\r\n          statsIcon={<i className=\"fa fa-clock-o\" />}\r\n          statsIconText=\"This Year\"\r\n          />\r\n          </div>\r\n          <div className=\"row nopadding\">\r\n           <StatsCard \r\n          statsValue1={energy.lastWeekEnergy}\r\n          statsValue2={energy.weeklyEnergy}\r\n          unit = \"KW-Hr\"\r\n          statsText1=\"Last Week\"\r\n          statsText2=\"This Week\"\r\n          amount={energy.weeklyAmount}\r\n          bg=\"info\"\r\n          bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\r\n          statsIcon={<i className=\"fa fa-clock-o\" />}\r\n          statsIconText=\"This Week \"\r\n          />\r\n          </div>\r\n          <div className=\"row nopadding\">\r\n          <StatsCard \r\n          statsValue1={energy.lastMonthEnergy}\r\n          statsValue2={energy.monthlyEnergy}\r\n          unit = \"KW-Hr\"\r\n          statsText1=\"Last Month\"\r\n          statsText2=\"This Month\"\r\n          amount = {energy.monthlyAmount}\r\n          bg=\"danger\"\r\n          bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\r\n          statsIcon={<i className=\"fa fa-clock-o\" />}\r\n          statsIconText=\"This Month\"\r\n          />\r\n          </div>\r\n          </div>\r\n          <div className=\"col-9\">\r\n              <Card\r\n                statsIcon=\"fa fa-history\"\r\n                id=\"chartHours\"\r\n                title=\"Energy\"\r\n                category=\"Energy\"\r\n                stats=\"Updated 30 minutes ago\"\r\n                content={\r\n                  <div className=\"ct-chart\">\r\n                    <BarChart\r\n                      data={totalEnergy}\r\n                      title=\"Energy\"\r\n                      color = \"#2F4B8A\"\r\n                      max = {lastDate}\r\n                      min = {minDate}\r\n                      unit = \"kWh\"\r\n                    />\r\n                  </div>\r\n                }      \r\n              />\r\n        </div>\r\n        </Row>\r\n        <Row>\r\n        <div className=\"col\">\r\n        <div className=\"row nopadding\">\r\n        <Card\r\n          statsIcon=\"fa fa-history\"\r\n          id=\"chartHours\"\r\n          title=\"AHU COP\"\r\n          category=\"AHU COP\"\r\n          stats=\"Updated 30 minutes ago\"\r\n          content={\r\n            <div className=\"ct\">\r\n                <LineChart\r\n                data={ahucop}\r\n                title=\"AHU COP\"\r\n                color=\"#FA0000\"\r\n                unit=\"\"\r\n              />\r\n            </div>\r\n          }\r\n        />\r\n        </div>\r\n        </div>\r\n        </Row>\r\n  </Container>\r\n     );\r\n}\r\n \r\nexport default EnergyDashboard;\r\n\r\n\r\n\r\n/*import React,{ useContext } from 'react';\r\nimport chartContext from \"../../context/charts/chartContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport { Row, Col} from \"react-bootstrap\";\r\nimport Card from \"../charts/Card\";\r\nimport LineChart from \"../charts/LineChart\";\r\nimport BarChart from \"../charts/BarChart\";\r\nimport StatsCard from './StatsCard';\r\nimport moment from 'moment';\r\nfunction convert(str) {\r\n  var date = new Date(str),\r\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n    day = (\"0\" + date.getDate()).slice(-2);\r\n  return [date.getFullYear(), mnth, day].join(\"-\");\r\n}\r\n\r\n\r\n function getEnergyMonthly(dataset){\r\n   let monthlyEnergyAcum=0;\r\n   let todayEnergy=0;\r\n   let weeklyEnergyAcum = 0;\r\n   var today = new Date();\r\n   var currentDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n   for (var i = 0 ; i < dataset.length ; i++){\r\n    var date = new Date(dataset[i].date);\r\n   if (convert(dataset[i].date) === convert(currentDate)){\r\n    todayEnergy =  todayEnergy + dataset[i].energymonthly \r\n   }\r\n  //today.getmonth returns month-1\r\n  if (date.getMonth() === today.getMonth()){\r\n      monthlyEnergyAcum =  monthlyEnergyAcum + dataset[i].energymonthly;\r\n  }\r\n  var now = moment();\r\nvar input = moment(dataset[i].date);\r\nvar isThisWeek = (now.isoWeek() === input.isoWeek())\r\nif ( isThisWeek) {\r\n   weeklyEnergyAcum = weeklyEnergyAcum + dataset[i].energymonthly;\r\n}\r\n}\r\nlet data = {\r\n  todayEnergy : todayEnergy,\r\n  monthlyEnergy : monthlyEnergyAcum,\r\n  weeklyEnergy : weeklyEnergyAcum\r\n}\r\nreturn data;\r\n  }\r\n\r\n\r\nfunction getTotalEnergy(dataset){\r\n  let data = [];\r\n  for (var i = 0 ; i < dataset.length ; i++){\r\n    let repeated = false;\r\n    if (data){\r\n      for(var j = 0 ; j<data.length ; j++){\r\n        if(data[j].label === convert(dataset[i].date)){\r\n            data[j].value = data[j].value + dataset[i].energymonthly;\r\n            repeated = true;\r\n            console.log(data[j].value);\r\n        }\r\n    }\r\n  }\r\n  if(!repeated){\r\n   data.push({\r\n   label: convert(dataset[i].date) ,\r\n   value:  dataset[i].energymonthly\r\n })\r\n}\r\n}\r\n return data;\r\n};   \r\n\r\n\r\nfunction getAhuCop(dataset){\r\n  let data = [];\r\n  for (var i = 0 ; i < dataset.length ; i++)\r\n   data.push({\r\n   label: convert(dataset[i].date) ,\r\n   value:  dataset[i].ahucop\r\n })\r\n return data;\r\n};  \r\n\r\nconst EnergyDashboard = () => {\r\n    const chartsContext = useContext(chartContext);\r\n    const { getDataset, dataset } = chartsContext;\r\n    let ahucop = { };\r\n    let energy = { };\r\n    let totalEnergy = [];\r\n    let lastDate;\r\n    let minDate;\r\n \r\n  const authContext = useContext(AuthContext);\r\n    if (!dataset){\r\n      getDataset();\r\n  }\r\n  else{\r\n    energy = getEnergyMonthly(dataset);\r\n    if (dataset.length >0 ){\r\n    lastDate = convert(dataset[dataset.length -1].date);\r\n    }\r\n    ahucop = getAhuCop(dataset);\r\n    totalEnergy = getTotalEnergy(dataset);\r\n  }\r\n\r\n    setTimeout(() => {\r\n        energy = getEnergyMonthly(dataset);\r\n        lastDate = convert(dataset[dataset.length -1].date);\r\n        ahucop = getAhuCop(dataset);\r\n      }, 3600000); // every half hour\r\n\r\n    return ( \r\n      <div>\r\n        <Row>\r\n        <div className=\"col-3\">\r\n        <div className=\"row nopadding\">\r\n        <StatsCard \r\n          statsValue= {energy.todayEnergy}\r\n          unit = \"KW-Hr\"\r\n          statsText=\"Energy Today\"\r\n          bg=\"success\"\r\n          bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\r\n          statsIcon={<i className=\"fa fa-clock-o\" />}\r\n          statsIconText=\"This Day\"\r\n          />\r\n          </div>\r\n          <div className=\"row nopadding\">\r\n           <StatsCard \r\n          statsValue={energy.weeklyEnergy}\r\n          unit = \"KW-Hr\"\r\n          statsText=\"Energy This Week\"\r\n          bg=\"info\"\r\n          bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\r\n          statsIcon={<i className=\"fa fa-clock-o\" />}\r\n          statsIconText=\"This Week \"\r\n          />\r\n          </div>\r\n          <div className=\"row nopadding\">\r\n          <StatsCard \r\n          statsValue={energy.monthlyEnergy}\r\n          unit = \"KW-Hr\"\r\n          statsText=\"Energy This Month\"\r\n          bg=\"danger\"\r\n          bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\r\n          statsIcon={<i className=\"fa fa-clock-o\" />}\r\n          statsIconText=\"This Month\"\r\n          />\r\n          </div>\r\n          </div>\r\n          <div className=\"col-9\">\r\n              <Card\r\n                statsIcon=\"fa fa-history\"\r\n                id=\"chartHours\"\r\n                title=\"Energy\"\r\n                category=\"Energy\"\r\n                stats=\"Updated 30 minutes ago\"\r\n                content={\r\n                  <div className=\"ct-chart\">\r\n                    <BarChart\r\n                      data={totalEnergy}\r\n                      title=\"Energy\"\r\n                      color = \"#2F4B8A\"\r\n                      max = {lastDate}\r\n                      min = {minDate}\r\n                      unit = \"kWh\"\r\n                    />\r\n                  </div>\r\n                }      \r\n              />\r\n        </div>\r\n        </Row>\r\n        <Row>\r\n        <div className=\"col-12 nopadding\">\r\n        <Card\r\n          statsIcon=\"fa fa-history\"\r\n          id=\"chartHours\"\r\n          title=\"AHU COP\"\r\n          category=\"AHU COP\"\r\n          stats=\"Updated 30 minutes ago\"\r\n          content={\r\n            <div className=\"ct\">\r\n                <LineChart\r\n                data={ahucop}\r\n                title=\"AHU COP\"\r\n                color=\"#FA0000\"\r\n                unit=\"\"\r\n              />\r\n            </div>\r\n          }\r\n        />\r\n        </div>\r\n        </Row>\r\n  </div>\r\n     );\r\n}\r\n \r\nexport default EnergyDashboard;*/","import React,{useContext, useEffect} from \"react\";\r\nimport Dashboard from \"../layout/Dashboard\";\r\nimport Bar from \"../layout/Bar\";\r\nimport ChartsList from \"../charts/ChartsList\";\r\nimport AlarmsList from \"../alarms/AlarmsList\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport itemContext from \"../../context/items/itemContext\";\r\nimport EnergyDashboard from \"./EnergyDashboard\";\r\nimport chartContext from \"../../context/charts/chartContext\";\r\nimport DashboardContext from \"../../context/dashboard/dashboardContext\";\r\nimport alarmsContext from \"../../context/alarms/alarmContext\";\r\n\r\nconst DashboardSummary = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuarioAutenticado, getUsers, usuarios, usuario } = authContext; \r\n  const itemsContext = useContext(itemContext);\r\n  const { item } = itemsContext;\r\n let name=\"\";\r\n\r\n       const chartsContext = useContext(chartContext);\r\n       const { getDataset, dataset } = chartsContext;\r\n       const dashboardContext = useContext(DashboardContext);\r\n  const { dashboard } = dashboardContext;\r\n  const alarmContext = useContext(alarmsContext);\r\n  const {alarms, getAlarms } = alarmContext;\r\n       useEffect(() => {\r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n   // item changes\r\n   useEffect(() => {\r\n    getUsers();\r\n    getDataset();\r\n    getAlarms()\r\n    // eslint-disable-next-line\r\n  }, [item]);\r\n  \r\n   if (item){\r\n   name = item[0].name;\r\n   }\r\n   let admin;\r\n   if (usuario){\r\n    admin = usuario.admin;\r\n   }\r\n   if(!localStorage.getItem(\"token\")){\r\n    props.history.push(\"/\");\r\n  }\r\n  return (\r\n    <div className=\"row\">\r\n    <div className=\"col-md-12 nopadding\">\r\n    <Bar \r\n    usuario={usuario}\r\n    tipo={admin}\r\n    />\r\n    </div>\r\n    {dashboard ?\r\n      <div className=\"col-md-2 nopadding\">\r\n        <Dashboard\r\n        />\r\n      </div>\r\n      :\r\n      null}\r\n  \r\n       <div className=\"col-md-10 nopadding\">\r\n        <main>\r\n        { !item ?\r\n       <EnergyDashboard />\r\n        : name ===\"FDD Alarms\"?\r\n        <AlarmsList \r\n        usuarios={usuarios}\r\n        dataset={dataset}\r\n        alarms={alarms}\r\n        /> :  name ===\"Energy\" ? <EnergyDashboard /> : \r\n        <ChartsList /> \r\n        }\r\n        </main>\r\n      </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default DashboardSummary;","import React, { useState } from \"react\";\r\nimport { Table, Card, Dropdown, Modal, Button, Form } from \"react-bootstrap\";\r\nimport { Pencil } from 'react-bootstrap-icons';\r\n\r\nconst Example = (props) => {\r\n  const [modal, setModal] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const [lower, setLower] = useState(\"\")\r\n  const [upper, setUpper] = useState(\"\")\r\n  const [dropValue,setDropValue]=useState(\"Actuator\")\r\n  let arr = []\r\n  console.log(\"FAULTtABLEdata=====>\",props.faultTableData)\r\n  // props.faultTableData\r\n  // if (props.faultTableData) {\r\n  //   for (var k in props.faultTableData) {\r\n  //     arr.push({ name: k,condition:props.faultTableData[k].status,value:props.faultTableData[k].status, })\r\n  //   }\r\n  // }\r\n\r\n  const submitParams = () => {\r\n    if (name && lower && upper) {\r\n\r\n      props.setParameters(name, lower, upper)\r\n      setModal(false)\r\n    }\r\n    else {\r\n      alert(\"Please enter fields properly\")\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Card style={{ padding: \"30px\" }}>\r\n      <Modal\r\n        show={modal}\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header >\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Enter Parameters\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Name\" disabled value={name} onChange={(e) => setName(e.target.value)} />\r\n\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Lower</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Lower\" value={lower} onChange={(e) => setLower(e.target.value)} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Upper</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Upper\" value={upper} onChange={(e) => setUpper(e.target.value)} />\r\n            </Form.Group>\r\n\r\n\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"success\" onClick={() => submitParams()} >\r\n            Submit\r\n            </Button>\r\n          <Button onClick={() => setModal(false)}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Dropdown>\r\n        <Dropdown.Toggle id=\"dropdown-basic\">{dropValue}</Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"#/actuator\" onSelect={() =>{ props.getSelectedItems(\"actuator\"); setDropValue(\"Actuator\")}} >Actuator</Dropdown.Item>\r\n          <Dropdown.Item href=\"#/sensor\" onSelect={() => {props.getSelectedItems(\"sensor\"); setDropValue(\"Sensor\")}} >Sensor</Dropdown.Item>\r\n          <Dropdown.Item href=\"#/motor\" onSelect={() => {props.getSelectedItems(\"motor\"); setDropValue(\"Motor\")}}>Motor</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      <Table striped bordered hover style={{ marginTop: \"20px\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Name</th>\r\n            <th>HEALTH CONDITION</th>\r\n            <th>SET PARAMETERS</th>\r\n            <th>VALUE</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          { props.faultTableData &&  props.faultTableData.map((item, inx) => {\r\n            return (\r\n              <tr>\r\n                <td>{item.date}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.condition}</td>\r\n                <td>{item.lower} ----- {item.upper} <span onClick={() => {setModal(true); setName(item.name)}} style={{ float: \"right\", padding: \"5px\", cursor: \"pointer\" }}>\r\n                  <Pencil color=\"gray\" size={20} />\r\n\r\n\r\n                </span>\r\n\r\n                </td>\r\n                <td>{item.value}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Dashboard from \"../layout/Dashboard\";\r\nimport Bar from \"../layout/Bar\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport itemContext from \"../../context/items/itemContext\";\r\nimport DashboardContext from \"../../context/dashboard/dashboardContext\";\r\nimport chartContext from \"../../context/charts/chartContext\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport LineChart from \"../charts/LineChart\"\r\nimport FaultTable from \"./FaultTable\"\r\n\r\n\r\nconst data = [\r\n  {\r\n    date: \"02/12/2020 12:03:34\",\r\n    name: \"Actuator\",\r\n    condition: \"Short description\",\r\n    params: \"Range\",\r\n    value: \"+30\"\r\n  },\r\n  {\r\n    date: \"02/12/2020 12:03:34\",\r\n    name: \"Sensor\",\r\n    condition: \"Short description\",\r\n    params: \"Range\",\r\n    value: \"+45\"\r\n  },\r\n  {\r\n    date: \"02/12/2020 12:03:34\",\r\n    name: \"Motor\",\r\n    condition: \"Short description\",\r\n    params: \"Range\",\r\n    value: \"-12\"\r\n  },\r\n]\r\n\r\nconst FaultPrediction = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuarioAutenticado, getUsers } = authContext;\r\n  const itemsContext = useContext(itemContext);\r\n  const { item, getSelectedTable, faultTableData, setParameters } = itemsContext;\r\n  let name = \"\";\r\n  const dashboardContext = useContext(DashboardContext);\r\n  const { dashboard } = dashboardContext;\r\n\r\n  const chartsContext = useContext(chartContext);\r\n  const { getDataset, getMachineCondition, machineConditionData } = chartsContext;\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  // item changes\r\n  useEffect(() => {\r\n    getUsers();\r\n    getDataset();\r\n    getMachineCondition()\r\n    getSelectedTable();\r\n    // getGraph();\r\n\r\n    // eslint-disable-next-line\r\n  }, [item]);\r\n\r\n  if (item) {\r\n    name = item[0].name;\r\n  }\r\n\r\n  const getSelectedItems = (select) => {\r\n    getSelectedTable(select);\r\n  }\r\n\r\n\r\n\r\n\r\n  // console.log(\"getMachineCondition=-=>\", machineConditionData)\r\n  \r\n  // if (setParams) {\r\n  //   alert(setParams.msg)\r\n  // }\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12 nopadding\">\r\n        <Bar\r\n        />\r\n      </div>\r\n      {dashboard ?\r\n        <div className=\"col-md-3 nopadding\">\r\n          <Dashboard\r\n          />\r\n        </div>\r\n        :\r\n        null}\r\n      <div className=\"col-md-9 nopadding\">\r\n        <main style={{ paddingTop: 20 }} >\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <h4>Fault Predictions</h4>\r\n              </Col>\r\n            </Row>\r\n            <hr />\r\n            <br />\r\n            <Row>\r\n              <Col>\r\n                <h4>Condition Monitoring</h4>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n              <Col>\r\n                <p>Shows the overall health state of machine.The red line is threshold of good health the blue line shows the current health state far from the red line weaker the health.</p>\r\n              </Col>\r\n            </Row>\r\n\r\n            <br />\r\n            <br />\r\n\r\n\r\n            {/* <div className=\"ct-chart\">\r\n\r\n              <BarChart\r\n                // data={[{ label: \"jan\", value: 1 }, { label: \"feb\", value:2 },{ label: \"mar\", value: 2 }, { label: \"apr\", value: 4 }]}\r\n                // data={dataset}\r\n                \r\n                title=\"Energy\"\r\n                color=\"#2F4B8A\"\r\n                max={6}\r\n                min={0}\r\n                unit=\"kWh\"\r\n              />\r\n            </div> */}\r\n\r\n            <div className=\"ct-chart\" style={{ width: \"700px\", alignSelf: \"flex-end\", padding: \"30px\", margin: \"30px\" }}>\r\n\r\n              <LineChart\r\n                // data={[{ label: \"jan\", value: 30 }, { label: \"feb\", value:60 },{ label: \"mar\", value: 90 }, { label: \"apr\", value: 150 }]}\r\n                // data={dataset}\r\n                data={machineConditionData ? machineConditionData : [{ label: \"wait\", value: 1, threshold: 3.9 }]}\r\n                title=\"Energy\"\r\n                color=\"#2F4B8A\"\r\n                // max={10}\r\n                // min={1}\r\n                unit=\"kWh\"\r\n              />\r\n            <br />\r\n\r\n              <h5 style={{ marginLeft: '250px' }}>Date / Time</h5>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <Row>\r\n              <Col>\r\n                <h4>Anomaly Detector</h4>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n              <Col>\r\n                <p>Anomaly detector represent actuators, sensors and motor performance it takes a last reading monitors if there is any abnormal activity and trigger it as alarm</p>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n\r\n            <FaultTable data={data} getSelectedItems={getSelectedItems} setParameters={setParameters} faultTableData={faultTableData} />\r\n\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaultPrediction;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// {CHW FR, L/s: \"{'status': 'normal', 'anamoly_value': '--'}\",\r\n//  CHW Valve Position, %: \"{'status': 'normal', 'anamoly_value': '--'}\",\r\n//   OA Damper Open, %: \"{'status': 'normal', 'anamoly_value': '--'}\"}\r\n// CHW FR, L/s: \"{'status': 'normal', 'anamoly_value': '--'}\"\r\n// CHW Valve Position, %: \"{'status': 'normal', 'anamoly_value': '--'}\"\r\n// OA Damper Open, %: \"{'status': 'normal', 'anamoly_value': '--'}\"\r\n\r\n\r\n\r\n// getMachineCondition=-=> \r\n// {\"columns\":[\"Mob dist\",\"Thresh\",\"Anomaly\"],\r\n// \"index\":[1583550000000,1583204400000,1583809210000,1582686010000,1582772410000,1582599610000,1582513210000,1582354810000,1582426810000,1582254010000,1606878000000,1606878000000,1583895610000,1583982010000,1584068400000,1584154800000],\r\n// \"data\":[[1.1347054098,3.9509060001,false],[1.1347054098,3.9509060001,false],[1.1347054098,3.9509060001,false],[1.1347054098,3.9509060001,false],[1.3674697145,3.9509060001,false],[1.8872258607,3.9509060001,false],[0.9724108503,3.9509060001,false],[1.3999764816,3.9509060001,false],[1.5274755983,3.9509060001,false],[1.4763065226,3.9509060001,false],[0.5953844765,3.9509060001,false],[1.9827419417,3.9509060001,false],[1.4763065226,3.9509060001,false],[2.4332758613,3.9509060001,false],[1.9827419417,3.9509060001,false],[1.9827419417,3.9509060001,false]]}\r\n\r\n\r\n\r\n// \"{\\\"Last Reading\\\":{\\\"dT Air, C\\\":17,\\\"safanfrequency\\\":56.0,\\\"chwtout\\\":11.0,\\\"dT CHW, C\\\":6.6,\\\"Tin Condenser, C\\\":30.0,\\\"totalpower\\\":869},\\\"Current Reading\\\":{\\\"dT Air, C\\\":17,\\\"safanfrequency\\\":56.0,\\\"chwtout\\\":11.0,\\\"dT CHW, C\\\":3.8,\\\"Tin Condenser, C\\\":30.0,\\\"totalpower\\\":869},\\\"Optimized Current Reading\\\":{\\\"dT Air, C\\\":17,\\\"safanfrequency\\\":60.0,\\\"chwtout\\\":12.944,\\\"dT CHW, C\\\":3.8,\\\"Tin Condenser, C\\\":26.477,\\\"totalpower\\\":869}}\"","import React from \"react\";\r\nimport { Table, Card, Dropdown } from \"react-bootstrap\";\r\n\r\nconst Example = (props) => {\r\n\r\n  console.log(\"props.energyTableData====>\", props.energyTableData)\r\n  return (\r\n    <Card style={{ padding: \"30px\" }}>\r\n      <Table striped bordered hover style={{ marginTop: \"20px\" }}>\r\n        <thead>\r\n          <tr>\r\n          <th></th>\r\n\r\n            <th>Date</th>\r\n            <th>Tin Condenser, C</th>\r\n            <th>chwtout</th>\r\n            <th>dT Air, C</th>\r\n            <th>dT CHW</th>\r\n            <th>safanfrequency</th>\r\n            <th>totalpower</th>\r\n\r\n\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n         \r\n              <tr>\r\n              <th>Current Reading</th>\r\n              <td>{props.energyTableData && props.energyTableData[\"Current Reading\"][\"date\"]}</td>\r\n\r\n                <td>{props.energyTableData && props.energyTableData[\"Current Reading\"][\"Tin Condenser, C\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Current Reading\"][\"chwtout\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Current Reading\"][\"dT Air, C\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Current Reading\"][\"dT CHW, C\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Current Reading\"][\"safanfrequency\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Current Reading\"][\"totalpower\"]}</td>\r\n\r\n              </tr>\r\n\r\n              <tr>\r\n              <th>Last Reading</th>\r\n              <td>{props.energyTableData && props.energyTableData[\"Last Reading\"][\"date\"]}</td>\r\n\r\n                <td>{props.energyTableData && props.energyTableData[\"Last Reading\"][\"Tin Condenser, C\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Last Reading\"][\"chwtout\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Last Reading\"][\"dT Air, C\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Last Reading\"][\"dT CHW, C\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Last Reading\"][\"safanfrequency\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Last Reading\"][\"totalpower\"]}</td>\r\n\r\n              </tr>\r\n\r\n              <tr>\r\n              <th>Optimized Current Reading</th>\r\n              <td>{props.energyTableData && props.energyTableData[\"Optimized Current Reading\"][\"date\"]}</td>\r\n\r\n                <td>{props.energyTableData && props.energyTableData[\"Optimized Current Reading\"][\"Tin Condenser, C\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Optimized Current Reading\"][\"chwtout\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Optimized Current Reading\"][\"dT Air, C\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Optimized Current Reading\"][\"dT CHW, C\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Optimized Current Reading\"][\"safanfrequency\"]}</td>\r\n                <td>{props.energyTableData && props.energyTableData[\"Optimized Current Reading\"][\"totalpower\"]}</td>\r\n\r\n              </tr>\r\n           \r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Dashboard from \"../layout/Dashboard\";\r\nimport Bar from \"../layout/Bar\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport itemContext from \"../../context/items/itemContext\";\r\nimport DashboardContext from \"../../context/dashboard/dashboardContext\";\r\nimport chartContext from \"../../context/charts/chartContext\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport BarChart from \"../charts/BarChart\";\r\nimport OptimizationTable from \"./OptimizationTable\";\r\n\r\nconst data = [\r\n  {\r\n    date: \"02/12/2020 12:03:34\",\r\n    name: \"Actuator\",\r\n    condition: \"Short description\",\r\n    params: \"Range\",\r\n    value: \"+30\",\r\n  },\r\n  {\r\n    date: \"02/12/2020 12:03:34\",\r\n    name: \"Sensor\",\r\n    condition: \"Short description\",\r\n    params: \"Range\",\r\n    value: \"+45\",\r\n  },\r\n  {\r\n    date: \"02/12/2020 12:03:34\",\r\n    name: \"Motor\",\r\n    condition: \"Short description\",\r\n    params: \"Range\",\r\n    value: \"-12\",\r\n  },\r\n];\r\nlet totalEnergy_1 = [];\r\nlet totalEnergy_2 = [];\r\nlet totalEnergy_3 = [];\r\nlet totalEnergy_4 = [];\r\n\r\nlet lastDate;\r\nlet minDate;\r\n// function getTotalEnergy(x,y) {\r\n\r\nfunction getTotalEnergy(x, y) {\r\n  let data = [];\r\n  for (var i = 0; i < x.length; i++)\r\n    data.push({\r\n      // label: convert(dataset[i].date),\r\n      // value: dataset[i].energymonthly,\r\n      label: x[i],\r\n      value: y[i],\r\n    });\r\n  return data;\r\n}\r\n\r\n\r\nconst EnergyOptimization = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuarioAutenticado, getUsers } = authContext;\r\n  const itemsContext = useContext(itemContext);\r\n  const { item, getEnergyOptimization, energyTableData } = itemsContext;\r\n  let name = \"\";\r\n  const dashboardContext = useContext(DashboardContext);\r\n  const { dashboard } = dashboardContext;\r\n\r\n  const chartsContext = useContext(chartContext);\r\n  const { getDataset, getGraphApi, graphApiData } = chartsContext;\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // item changes\r\n  useEffect(() => {\r\n    getUsers();\r\n    getDataset();\r\n    getGraphApi()\r\n    getEnergyOptimization();\r\n\r\n    // eslint-disable-next-line\r\n  }, [item]);\r\n\r\n  if (item) {\r\n    name = item[0].name;\r\n  }\r\n\r\n  // if (dataset.length > 0) {\r\n  //   lastDate = dataset[dataset.length - 1].date;\r\n  // }\r\n  // totalEnergy = getTotalEnergy(dataset);\r\n\r\n  if (graphApiData) {\r\n\r\n    totalEnergy_1 = getTotalEnergy(graphApiData.X1, graphApiData.y1);\r\n    totalEnergy_2 = getTotalEnergy(graphApiData.X2, graphApiData.y2);\r\n    totalEnergy_3 = getTotalEnergy(graphApiData.X3, graphApiData.y3);\r\n    totalEnergy_4 = getTotalEnergy(graphApiData.X4, graphApiData.y4);\r\n\r\n  }\r\n\r\n  // console.log(\"dataset=-=>\", dataset);\r\n  // let test=JSON.parse(energyTableData)\r\n  // console.log(\"energyTableData=-=>\", test.columns);\r\n  console.log(\"energyTableData=-=>\", energyTableData);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12 nopadding\">\r\n        <Bar />\r\n      </div>\r\n      {dashboard ? (\r\n        <div className=\"col-md-3 nopadding\">\r\n          <Dashboard />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"col-md-9 nopadding\">\r\n        <main style={{ paddingTop: 20 }}>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <h4>Energy Optimization</h4>\r\n              </Col>\r\n            </Row>\r\n            <hr />\r\n            <br />\r\n            <Row>\r\n              <Col>\r\n                <h4>dT Air SA Fan Frequency</h4>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <br />\r\n            <div\r\n              className=\"ct-chart\"\r\n              style={{ height: 300, width: \"33%\", display: \"inline-block\", margin: \"20px\" }}\r\n            >\r\n              <BarChart\r\n                data={totalEnergy_1}\r\n                title=\"dT Air, C\"\r\n                color=\"#2F4B8A\"\r\n                max={lastDate}\r\n                min={minDate}\r\n                unit=\"SA Fan Frequency, Hz\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"ct-chart\"\r\n              style={{ height: 300, width: \"33%\", display: \"inline-block\", margin: \"20px\" }}\r\n            >\r\n              <BarChart\r\n                data={totalEnergy_2}\r\n                title=\"dT CHW, C\"\r\n                color=\"#2F4B8A\"\r\n                max={lastDate}\r\n                min={minDate}\r\n                unit=\"CHW Tout, C\"\r\n              />\r\n            </div>{\" \"}\r\n            <div\r\n              className=\"ct-chart\"\r\n              style={{ height: 300, width: \"33%\", display: \"inline-block\", margin: \"20px\" }}\r\n            >\r\n              <BarChart\r\n                data={totalEnergy_3}\r\n                title=\"dT CHW, C\"\r\n                color=\"#2F4B8A\"\r\n                max={lastDate}\r\n                min={minDate}\r\n                unit=\"Tin Condenser, C\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"ct-chart\"\r\n              style={{ height: 300, width: \"33%\", display: \"inline-block\", margin: \"20px\" }}\r\n            >\r\n              <BarChart\r\n                data={totalEnergy_4}\r\n                title=\"PT, Total PowerPlant Power, KW\"\r\n                color=\"#2F4B8A\"\r\n                max={lastDate}\r\n                min={minDate}\r\n                unit=\"Tin Condenser, C\"\r\n              />\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <Row>\r\n              <Col>\r\n                <h4 style={{ marginBottom: 20 }} >Optimization</h4>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p>The last reading shows the values read by machine second last time the current reading shows the latest readings and optimize reading shows the readings suggested by AI for better performance.</p>              </Col>\r\n            </Row>\r\n            <OptimizationTable data={data} energyTableData={energyTableData && energyTableData} />\r\n            <br />\r\n            {/* <Row>\r\n              <Col>\r\n                <h4 style={{marginBottom:20}} >Optimization</h4>\r\n              </Col>\r\n            </Row>\r\n            <OptimizationTable data={data} energyTableData={ energyTableData &&  energyTableData[\"Last Reading\"]} />\r\n            <Row>\r\n              <Col>\r\n                <h4 style={{marginBottom:20}}  >Optimization</h4>\r\n              </Col>\r\n            </Row>\r\n            <OptimizationTable data={data} energyTableData={energyTableData && energyTableData[\"Optimized Current Reading\"]} />\r\n         */}\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnergyOptimization;\r\n\r\n\r\n\r\n// {\r\n//   \"columns\":[\"Mob dist\",\"Thresh\",\"Anomaly\"],\r\n// \"index\":[1583550000000,1583204400000,1583809210000,1582686010000,1582772410000,1582599610000,1582513210000,1582354810000,1582426810000,1582254010000,1606878000000,1606878000000,1583895610000,1583982010000,1584068400000,1584154800000],\r\n// \"data\":[[1.1347054098,3.9509060001,false],[1.1347054098,3.9509060001,false],[1.1347054098,3.9509060001,false],[1.1347054098,3.9509060001,false],[1.3674697145,3.9509060001,false],[1.8872258607,3.9509060001,false],[0.9724108503,3.9509060001,false],[1.3999764816,3.9509060001,false],[1.5274755983,3.9509060001,false],[1.4763065226,3.9509060001,false],[0.5953844765,3.9509060001,false],[1.9827419417,3.9509060001,false],[1.4763065226,3.9509060001,false],[2.4332758613,3.9509060001,false],[1.9827419417,3.9509060001,false],[1.9827419417,3.9509060001,false]]}\r\n\r\n\r\n\r\n// {\"Last Reading\":{\"dT Air, C\":17,\"safanfrequency\":56.0,\"chwtout\":11.0,\"dT CHW, C\":6.6,\"Tin Condenser, C\":30.0,\"totalpower\":869},\r\n// \"Current Reading\":{\"dT Air, C\":17,\"safanfrequency\":56.0,\"chwtout\":11.0,\"dT CHW, C\":3.8,\"Tin Condenser, C\":30.0,\"totalpower\":869},\r\n// \"Optimized Current Reading\":{\"dT Air, C\":17,\"safanfrequency\":60.0,\"chwtout\":12.944,\"dT CHW, C\":3.8,\"Tin Condenser, C\":26.477,\"totalpower\":869}}","import { MOSTRAR_ALERTA, \r\n    OCULTAR_ALERTA } from '../../types';\r\n    \r\n    \r\n    export default (state, action) => {\r\n        switch(action.type){\r\n            case MOSTRAR_ALERTA:\r\n                return {\r\n                    alerta: action.payload\r\n                }\r\n            case OCULTAR_ALERTA:\r\n                return {\r\n                    alerta: null\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    }","export const CHARTS_ITEM = \"CHARTS_ITEM\";\r\nexport const CURRENT_ITEM = \"CURRENT_ITEM\";\r\nexport const CURRENT_CHART = \"CURRENT_CHART\";\r\nexport const GET_ITEMS = \"GET_ITEMS\";\r\nexport const GET_DATASET = \"GET_MEDITIONS\";\r\n\r\nexport const MOSTRAR_ALERTA = \"MOSTRAR_ALERTA\";\r\nexport const OCULTAR_ALERTA = \"OCULTAR_ALERTA\";\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const OBTENER_USUARIOS = 'OBTENER_USUARIOS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\r\nexport const DELETE_MEMBER = 'DELETE_MEMBER';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';\r\n\r\nexport const GET_ALARMS = 'GET_ALARMS';\r\nexport const CREATE_ALARM = 'CREATE_ALARM';\r\n\r\nexport const SHOW_DASHBOARD = 'SHOW_DASHBOARD';\r\nexport const HIDE_DASHBOARD = 'HIDE_DASHBOARD';\r\n\r\n\r\nexport const GET_FAULT_TABLE = 'GET_FAULT_TABLE';\r\n\r\nexport const MACHINE_CONDITION=\"MACHINE_CONDITION\"\r\nexport const GRAPH_API=\"GRAPH_API\"\r\nexport const ENERGY_OPT_TABLE=\"ENERGY_OPT_TABLE\"\r\n\r\nexport const SET_PARAMETERS=\"SET_PARAMETERS\"\r\n","import React, { useReducer } from 'react';\r\nimport alertaReducer from './alertaReducer';\r\nimport alertaContext from './alertaContext';\r\n\r\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types';\r\n\r\nconst AlertaState = props => {\r\n    const initialState = {\r\n        alerta: null\r\n    }\r\n\r\n    const [ state, dispatch ] = useReducer(alertaReducer, initialState);\r\n\r\n    // funciones\r\n    const mostrarAlerta = (msg, categoria) => {\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: {\r\n                msg,\r\n                categoria\r\n            }\r\n        });\r\n\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: OCULTAR_ALERTA\r\n            })\r\n        },5000); // despues de 5 segundos\r\n    }\r\n    return (\r\n        <alertaContext.Provider\r\n        value={{\r\n            alerta: state.alerta,\r\n            mostrarAlerta\r\n        }}\r\n        >\r\n            {props.children}\r\n        </alertaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertaState;","import {    \r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    OBTENER_USUARIOS,\r\n    DELETE_MEMBER,\r\n    LOGIN_ERROR,\r\n    AGREGAR_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    CERRAR_SESION} from '../../types';\r\n    \r\n    \r\n    export default (state, action) => {\r\n        switch(action.type){\r\n            case LOGIN_EXITOSO:\r\n            case REGISTRO_EXITOSO:\r\n                    localStorage.setItem('token',action.payload.token);\r\n                    return {\r\n                        ...state,\r\n                        autenticado: true,\r\n                        mensaje: null,\r\n                        cargando: false\r\n                    }\r\n            case LOGIN_ERROR:\r\n            case REGISTRO_ERROR:\r\n                case CERRAR_SESION:\r\n                localStorage.removeItem('token');\r\n                return {\r\n                    ...state,\r\n                    token: null,\r\n                    usuario: null,\r\n                    autenticado: null,\r\n                    mensaje: action.payload, \r\n                    cargando: false\r\n                }\r\n            case OBTENER_USUARIO:\r\n            return {\r\n                ...state,\r\n                autenticado: true,\r\n                usuario: action.payload,\r\n                cargando: false\r\n            }\r\n            case DELETE_MEMBER: \r\n        return {\r\n            ...state, \r\n            usuarios: state.usuarios.filter(usuario => usuario.id !== action.payload)\r\n        }\r\n            case OBTENER_USUARIOS:\r\n                return {\r\n                    ...state,\r\n                    usuarios: action.payload\r\n                }\r\n            case AGREGAR_USUARIO:\r\n                return{\r\n                    ...state,\r\n                usuarios: [action.payload, ...state.usuarios],\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    }","import clienteAxios from './axios';\r\n\r\nconst tokenAuth = token => {\r\n    if(token) {\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token; \r\n    } else {\r\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React,{ useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport clienteAxios from '../../config/axios';\r\nimport tokenAuth from '../../config/token';\r\n\r\nimport {    \r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    OBTENER_USUARIOS,\r\n    LOGIN_ERROR,\r\n    AGREGAR_USUARIO,\r\n    DELETE_MEMBER,\r\n    LOGIN_EXITOSO,\r\n    CERRAR_SESION } from '../../types';\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        usuarios:[],\r\n        mensaje: null,\r\n        cargando:true\r\n    }\r\n\r\n    const [ state, dispatch ] = useReducer(AuthReducer, initialState);\r\n\r\n    // las funciones\r\n    \r\n            // funcion que devuelve el usuario autenticado\r\n            const usuarioAutenticado = async () => {\r\n                const token = localStorage.getItem('token');\r\n                if(token) {\r\n                    tokenAuth(token);\r\n                }\r\n        \r\n                try {\r\n                    const respuesta = await clienteAxios.get('/api/auth');\r\n                    //console.log(respuesta);\r\n                    dispatch({\r\n                        type: OBTENER_USUARIO,\r\n                        payload: respuesta.data.usuario\r\n                    });\r\n        \r\n                } catch (error) {\r\n                    console.log(error.response);\r\n                    dispatch({\r\n                        type: LOGIN_ERROR\r\n                    })\r\n                }\r\n            }\r\n\r\n            const registrarUsuario = async datos => {\r\n                try {\r\n                    const respuesta = await clienteAxios.post('/api/usuarios',datos);\r\n        \r\n                    dispatch({\r\n                        type: REGISTRO_EXITOSO,\r\n                        payload: respuesta.data\r\n                        \r\n                    });\r\n        \r\n                    // obtener el usuario\r\n                    usuarioAutenticado();\r\n                } catch (error) {\r\n                    const alerta = {\r\n                        msg: error.response.data.msg,\r\n                        categoria: 'alerta-error'\r\n                    }\r\n                    dispatch({\r\n                        type: REGISTRO_ERROR,\r\n                        payload: alerta\r\n                    })\r\n                }        \r\n            }\r\n            const agregarUsuario = async datos => {\r\n                try {\r\n                    const respuesta = await clienteAxios.post('/api/usuarios',datos);\r\n                    console.log(datos);\r\n                    dispatch({\r\n                        type: AGREGAR_USUARIO,\r\n                        payload: datos \r\n                    });\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }        \r\n            }\r\nconst getUsers = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token){\r\n        // funcion para enviar el token por headers\r\n        tokenAuth(token);\r\n    }\r\n    try {\r\n        const respuesta = await clienteAxios.get('/api/usuarios');\r\n       dispatch({\r\n           type: OBTENER_USUARIOS,\r\n           payload: respuesta.data.users\r\n       });\r\n\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\n// delete memmber\r\nconst deleteMember = async id => {\r\n    try {\r\n        await clienteAxios.delete(`/api/usuarios/${id}`);\r\n        dispatch({\r\n            type: DELETE_MEMBER,\r\n            payload: id\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// cuando el usuario inicia sesion\r\n // Cuando el usuario inicia sesión\r\n const iniciarSesion = async datos => {\r\n    try {\r\n        const respuesta = await clienteAxios.post('/api/auth', datos);\r\n        \r\n        dispatch({\r\n            type: LOGIN_EXITOSO,\r\n            payload: respuesta.data\r\n        });\r\n\r\n        // Obtener el usuario\r\n        usuarioAutenticado();\r\n    } catch (error) {\r\n        console.log(error.response.data.msg);\r\n        const alerta = {\r\n            msg: error.response.data.msg,\r\n            categoria: 'alerta-error'\r\n        }\r\n\r\n        dispatch({\r\n            type: LOGIN_ERROR,\r\n            payload: alerta\r\n        })\r\n    }\r\n}\r\n // Cierra la sesión del usuario\r\n const cerrarSesion = () => {\r\n    dispatch({\r\n        type: CERRAR_SESION\r\n    })\r\n}\r\n    return(\r\n        <AuthContext.Provider\r\n        value = {{\r\n            token: state.token,\r\n            autenticado: state.usuario,\r\n            usuario: state.usuario,\r\n            usuarios: state.usuarios,\r\n            mensaje: state.mensaje,\r\n            cargando: state.cargando,\r\n            registrarUsuario,\r\n            agregarUsuario,\r\n            usuarioAutenticado,\r\n            getUsers,\r\n            deleteMember,\r\n            iniciarSesion,\r\n            cerrarSesion\r\n        }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;","import { GET_ALARMS, \r\n   CREATE_ALARM } from '../../types';\r\n    \r\n    \r\n    export default (state, action) => {\r\n        switch(action.type){\r\n            case GET_ALARMS:\r\n                return {\r\n                    ...state,\r\n                    alarms: action.payload\r\n                }\r\n\r\n            default:\r\n                return state;\r\n        }\r\n    }","import React, { useReducer } from 'react';\r\nimport AlarmContext from './alarmContext';\r\nimport AlarmReducer from './alarmReducer';\r\nimport clienteAxios from '../../config/axios';\r\nimport { GET_ALARMS } from '../../types';\r\n\r\nconst AlarmState = props => {\r\n    const initialState = {\r\n        alarms: []\r\n    }\r\n\r\n    const [ state, dispatch ] = useReducer(AlarmReducer, initialState);\r\n\r\n    const createAlarm= async datos => {\r\n        try {\r\n        } catch (error) {\r\n            console.log(error);\r\n        }        \r\n    }\r\n\r\n    const getAlarms = async () => {\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/alarms');\r\n           dispatch({\r\n               type: GET_ALARMS,\r\n               payload: respuesta.data.alarms\r\n           });\r\n    \r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    }\r\n    return (\r\n        <AlarmContext.Provider\r\n        value={{\r\n            alarms: state.alarms,\r\n            createAlarm,\r\n            getAlarms\r\n        }}\r\n        >\r\n            {props.children}\r\n        </AlarmContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlarmState;","import {\r\n  GET_ITEMS,\r\n  CURRENT_ITEM,\r\n  ENERGY_OPT_TABLE,\r\n  GET_FAULT_TABLE,\r\n  SET_PARAMETERS\r\n} from \"../../types\";\r\n// cuando se detecta el FORMULARIO_PROYECTO igual al de context se ejecuta el reducer\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.payload\r\n      };\r\n\r\n    case CURRENT_ITEM:\r\n      return {\r\n        ...state,\r\n        item: state.items.filter(\r\n          item => item._id === action.payload\r\n        )\r\n      };\r\n    case ENERGY_OPT_TABLE:\r\n      return {\r\n        ...state,\r\n        energyTableData: action.payload\r\n      }\r\n      \r\n      case GET_FAULT_TABLE:\r\n      return {\r\n        ...state,\r\n        faultTableData: action.payload\r\n      }\r\n\r\n      case SET_PARAMETERS:\r\n        return {\r\n          ...state,\r\n          setParams: action.payload\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n// import {\r\n//   GET_ITEMS,\r\n//   CURRENT_ITEM,\r\n//   GET_FAULT_TABLE,\r\n//   ENERGY_OPT_TABLE,\r\n//   SET_PARAMETERS\r\n// } from \"../../types\";\r\n\r\n// // cuando se detecta el FORMULARIO_PROYECTO igual al de context se ejecuta el reducer\r\n// export default (state, action) => {\r\n//   switch (action.type) {\r\n\r\n//     case GET_ITEMS:\r\n//       return {\r\n//         ...state,\r\n//         items: action.payload\r\n//       };\r\n\r\n//     case CURRENT_ITEM:\r\n//       return {\r\n//         ...state,\r\n//         item: state.items.filter(\r\n//           item => item._id === action.payload\r\n//         )\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import React, {useReducer } from \"react\";\r\nimport itemContext from \"./itemContext\";\r\nimport itemReducer from \"./itemReducer\";\r\nimport clienteAxios from '../../config/axios';\r\nimport axios from \"axios\"\r\n\r\nimport {\r\n  GET_ITEMS,\r\n  CURRENT_ITEM,\r\n  GET_FAULT_TABLE,\r\n  ENERGY_OPT_TABLE,\r\n  SET_PARAMETERS\r\n} from \"../../types\";\r\n\r\nconst ItemState = props => {\r\n  const initialState = {\r\n    items: [],\r\n    item: null,\r\n    faultTableData: null,\r\n    energyTableData: null,\r\n    setParams: null,\r\n  };\r\n\r\n  // dispatch para ejecutar las acciones\r\n  const [state, dispatch] = useReducer(itemReducer, initialState);\r\n\r\n  \r\n  // obtener los proyectos\r\n  const getItems = async () => {\r\n    try {\r\n        const result = await clienteAxios.get('/api/items');\r\n        dispatch({\r\n            type: GET_ITEMS,\r\n            payload: result.data.items\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getSelectedTable = async (data = \"actuator\") => {\r\n  console.log(\"data\", data)\r\n\r\n  try {\r\n    const result = await axios.get(`https://facialrecognition-1.herokuapp.com/api/${data}`);\r\n    console.log(\"result.data=====>\", result.data)\r\n    let arr=[]\r\n    for (var k in result.data) {\r\n      arr.push({ name: k,condition:result.data[k].status,value:result.data[k].anamoly_value,lower:result.data[k].lower_value,upper:result.data[k].upper_value,date:result.data[k].date })\r\n    }\r\n    dispatch({\r\n      type: GET_FAULT_TABLE,\r\n      payload: arr\r\n    })\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\nconst setParameters = async (name, lower, upper) => {\r\n  console.log(\"name,lower,upper\", name, lower, upper)\r\n  let data = {\r\n    name, lower, upper\r\n  }\r\n\r\n  try {\r\n    const result = await axios.post(`https://facialrecognition-1.herokuapp.com/api/setParameters`, data);\r\n    console.log(\"result\", result)\r\n    if(result.data){\r\n      alert(result.data.msg)\r\n    }\r\n    dispatch({\r\n      type: SET_PARAMETERS,\r\n      payload: result.data\r\n    })\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\n\r\nconst getEnergyOptimization = async (data = \"actuator\") => {\r\n  console.log(\"data\", data)\r\n\r\n  try {\r\n    const result = await axios.get(`https://facialrecognition-1.herokuapp.com/api/Optimization`);\r\n    console.log(\"result energytable===?\", result.data)\r\n   \r\n\r\n\r\n    dispatch({\r\n      type: ENERGY_OPT_TABLE,\r\n      payload: result.data\r\n    })\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\n \r\n  // Selecciona el proyecto que el usuario clickeo\r\n  const currentItem = itemId => {\r\n    dispatch({\r\n      type: CURRENT_ITEM,\r\n      payload: itemId\r\n    });\r\n  };\r\n\r\n  \r\n  return (\r\n    <itemContext.Provider\r\n      value={{\r\n        items: state.items,\r\n        item: state.item,\r\n        energyTableData: state.energyTableData,\r\n        faultTableData: state.faultTableData,\r\n        setParams: state.setParams,\r\n        getItems,\r\n        currentItem,\r\n        getSelectedTable,\r\n        getEnergyOptimization,\r\n        setParameters,\r\n    }}\r\n    >\r\n      {props.children}\r\n    </itemContext.Provider>\r\n  );\r\n};\r\nexport default ItemState;\r\n// todo el state debe estar centralizado en este archivo\r\n// mas que nada lo que fluye entre distintos components\r\n","import { \r\n    CHARTS_ITEM, \r\n    CURRENT_CHART,\r\n    GET_DATASET,\r\n    MACHINE_CONDITION,\r\n    GRAPH_API\r\n} from \"../../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case CHARTS_ITEM:\r\n      return {\r\n        ...state,\r\n        chartsitem: action.payload\r\n      };\r\n    \r\n        case CURRENT_CHART: \r\n        return {\r\n          ...state,\r\n          chartselected: action.payload\r\n        };\r\n    case GET_DATASET:\r\n      return {\r\n        ...state,\r\n        dataset: action.payload\r\n      }\r\n      case MACHINE_CONDITION:{\r\n        return{\r\n          ...state,\r\n          machineConditionData:action.payload\r\n        }\r\n      }\r\n      case GRAPH_API:{\r\n        return{\r\n          ...state,\r\n          graphApiData:action.payload\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport chartContext from './chartContext';\r\nimport ChartReducer from './chartReducer';\r\nimport clienteAxios from '../../config/axios';\r\nimport axios from \"axios\"\r\nimport {\r\n    CHARTS_ITEM,\r\n    GET_DATASET,\r\n    MACHINE_CONDITION,\r\n    GRAPH_API\r\n} from '../../types';\r\n\r\nconst ChartState = props => {\r\n    const initialState = {\r\n        chartsitem: [],\r\n        dataset: [],\r\n        chartselected: null,\r\n        machineConditionData: null,\r\n        graphApiData: null,\r\n\r\n\r\n    }\r\n\r\n    // create dispatch and state\r\n    const [state, dispatch] = useReducer(ChartReducer, initialState);\r\n\r\n    // get charts for an item\r\n    const getCharts = async item => {\r\n        try {\r\n            const result = await clienteAxios.get('/api/charts', { params: { item } });\r\n            dispatch({\r\n                type: CHARTS_ITEM,\r\n                payload: result.data.charts\r\n            })\r\n        } catch (error) {\r\n            console.log('error');\r\n        }\r\n    }\r\n\r\n\r\n    const getMachineCondition = async () => {\r\n        try {\r\n            let arr = []\r\n            let result = await axios.get('https://facialrecognition-1.herokuapp.com/api/machineCondition');\r\n            result = JSON.parse(result.data)\r\n            // console.log(\"result===>\", result)\r\n\r\n            result.data.map((val, inx) => {\r\n\r\n                let date = new Date(result.index[inx])\r\n                date = date.toJSON().split(\"T\")[0]\r\n                // console.log(\"val===>\", val[1])\r\n                arr.push({\r\n                    label: date,\r\n                    value: val[0],\r\n                    threshold: val[1]\r\n                })\r\n            })\r\n\r\n            console.log(\"state of arr=-===>\", arr)\r\n            dispatch({\r\n                type: MACHINE_CONDITION,\r\n                payload: arr\r\n            })\r\n        } catch (error) {\r\n            console.log('error', error);\r\n        }\r\n    }\r\n\r\n    const getGraphApi = async () => {\r\n        try {\r\n            const result = await axios.get('https://facialrecognition-1.herokuapp.com/api/graphs');\r\n            // console.log(\"result\", result)\r\n            dispatch({\r\n                type: GRAPH_API,\r\n                payload: result.data\r\n            })\r\n        } catch (error) {\r\n            console.log('error');\r\n        }\r\n    }\r\n\r\n\r\n    const getDataset = async () => {\r\n        try {\r\n            const result = await clienteAxios.get('/api/dataset');\r\n            dispatch({\r\n                type: GET_DATASET,\r\n                payload: result.data.dataset\r\n            })\r\n        } catch (error) {\r\n            console.log('error');\r\n        }\r\n    }\r\n    return (\r\n        <chartContext.Provider\r\n            value={{\r\n                chartsitem: state.chartsitem,\r\n                chartselected: state.chartselected,\r\n                dataset: state.dataset,\r\n                getCharts,\r\n                getDataset,\r\n                machineConditionData: state.machineConditionData,\r\n                graphApiData: state.graphApiData,\r\n                getMachineCondition,\r\n                getGraphApi\r\n\r\n\r\n            }}\r\n        >\r\n            {props.children}\r\n        </chartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ChartState;","import { SHOW_DASHBOARD, \r\n    HIDE_DASHBOARD } from '../../types';\r\n    \r\n    \r\n    export default (state, action) => {\r\n        switch(action.type){\r\n            case SHOW_DASHBOARD:\r\n                return {\r\n                    ...state,\r\n                    dashboard: 'showing'\r\n                }\r\n            case HIDE_DASHBOARD:\r\n                return {\r\n                    dashboard: null\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    }","import React, { useReducer } from 'react';\r\nimport dashboardReducer from './dashboardReducer';\r\nimport dashboardContext from './dashboardContext';\r\n\r\nimport { SHOW_DASHBOARD, HIDE_DASHBOARD } from '../../types';\r\n\r\nconst DashboardState = props => {\r\n    const initialState = {\r\n        dashboard: 'showing'\r\n    }\r\n\r\n     const [ state, dispatch ] = useReducer(dashboardReducer, initialState);\r\n\r\n    const showDashboard = () => {\r\n        dispatch({\r\n            type: SHOW_DASHBOARD\r\n        })\r\n    }\r\n    \r\n    const hideDashboard = () => {\r\n        dispatch({\r\n            type: HIDE_DASHBOARD\r\n        })\r\n    }\r\n    return (\r\n        <dashboardContext.Provider\r\n        value={{\r\n            dashboard: state.dashboard,\r\n            showDashboard,\r\n            hideDashboard\r\n        }}\r\n        >\r\n            {props.children}\r\n        </dashboardContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DashboardState;","import React, { useContext, useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst RutaPrivada = ({ component: Component, ...props  }) => {\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const { autenticado, cargando, usuarioAutenticado } = authContext;\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return ( \r\n        <Route { ...props } render={ props => !autenticado && !cargando ?  (\r\n            <Redirect to=\"/\" />\r\n        )  : (\r\n            <Component {...props} />\r\n        ) } />\r\n\r\n     );\r\n}\r\n \r\nexport default RutaPrivada;","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport LandingPage from \"./components/layout/LandingPage\";\r\nimport Register from \"./components/auth/Register\";\r\nimport SignIn from \"./components/auth/SignIn\";\r\nimport Administration from \"./components/layout/Administration\";\r\nimport DashboardSummary from \"./components/layout/DashboardSummary\";\r\nimport FaultPrediction from \"./components/layout/FaultPrediction\";\r\nimport EnergyOptimization from \"./components/layout/EnergyOptimization\";\r\n// import AlarmList from \"./components/alarms/AlarmsList\";\r\n\r\n\r\nimport AlertaState from \"./context/alertas/alertaState\";\r\nimport AuthState from \"./context/autenticacion/authState\";\r\nimport AlarmState from \"./context/alarms/alarmState\";\r\nimport ItemState from \"./context/items/itemState\";\r\nimport ChartState from \"./context/charts/chartState\";\r\nimport DashboardState from \"./context/dashboard/dashboardState\";\r\nimport RutaPrivada from \"./components/rutas/RutaPrivada\";\r\nimport tokenAuth from \"./config/token\";\r\n\r\n\r\n// Revisar si tenemos un token\r\nconst token = localStorage.getItem(\"token\");\r\nif (token) {\r\n  tokenAuth(token);\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <DashboardState>\r\n      <AlarmState>\r\n        <ItemState>\r\n          <ChartState>\r\n            <AlertaState>\r\n              <AuthState>\r\n                <Router>\r\n                  <Switch>\r\n    \r\n                    <Route exact path=\"/\" component={LandingPage} />\r\n                    <Route\r\n                      exact\r\n                      path=\"/dashboard\"\r\n                      component={DashboardSummary}\r\n                    />\r\n                      <Route\r\n                      exact\r\n                      path=\"/dashboard#\"\r\n                      component={DashboardSummary}\r\n                    />\r\n                   \r\n                    <Route\r\n                      exact\r\n                      path=\"/fault-prediction\"\r\n                      component={FaultPrediction}\r\n                    />\r\n                    <Route\r\n                      exact\r\n                      path=\"/energy-optimization\"\r\n                      component={EnergyOptimization}\r\n                    />\r\n                    \r\n                    <Route exact path=\"/sign-in\" component={SignIn} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <RutaPrivada\r\n                      exact\r\n                      path=\"/admin\"\r\n                      component={Administration}\r\n                    />    \r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                                  </Switch>\r\n                </Router>\r\n              </AuthState>\r\n            </AlertaState>\r\n          </ChartState>\r\n        </ItemState>\r\n      </AlarmState>\r\n    </DashboardState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}